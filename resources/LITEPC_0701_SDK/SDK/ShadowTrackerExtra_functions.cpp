
#include "../SDK.h"

// Name: LitePC_0701, Version: 1.0.0

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Functions
//---------------------------------------------------------------------------

// Function ShadowTrackerExtra.ActorCacheMgr.GetActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AActorCacheMgr::GetActor(class UClass* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ActorCacheMgr.GetActor");

	AActorCacheMgr_GetActor_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.ActorCacheMgr.AddToPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AActorCacheMgr::AddToPool(class UClass* Type, class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ActorCacheMgr.AddToPool");

	AActorCacheMgr_AddToPool_Params params;
	params.Type = Type;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AIActingComponent.BroadFinishLastBreathFunction
// (Final, Native, Public)
// Parameters:
// struct FString                 Killer                         (Parm, ZeroConstructor)
// struct FString                 Killed                         (Parm, ZeroConstructor)
// int                            WeaponId                       (Parm, ZeroConstructor, IsPlainOldData)

void UAIActingComponent::BroadFinishLastBreathFunction(const struct FString& Killer, const struct FString& Killed, int WeaponId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AIActingComponent.BroadFinishLastBreathFunction");

	UAIActingComponent_BroadFinishLastBreathFunction_Params params;
	params.Killer = Killer;
	params.Killed = Killed;
	params.WeaponId = WeaponId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AimingComp.ToggleShoulderFiring
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Toggle                         (Parm, ZeroConstructor, IsPlainOldData)

void UAimingComp::ToggleShoulderFiring(bool Toggle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AimingComp.ToggleShoulderFiring");

	UAimingComp_ToggleShoulderFiring_Params params;
	params.Toggle = Toggle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AimingComp.ToggleAimingDownSight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Toggle                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bTeleportCamera                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UAimingComp::ToggleAimingDownSight(bool Toggle, bool bTeleportCamera)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AimingComp.ToggleAimingDownSight");

	UAimingComp_ToggleAimingDownSight_Params params;
	params.Toggle = Toggle;
	params.bTeleportCamera = bTeleportCamera;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AimingComp.SetAiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAimingType                    AimingType                     (Parm, ZeroConstructor, IsPlainOldData)

void UAimingComp::SetAiming(EAimingType AimingType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AimingComp.SetAiming");

	UAimingComp_SetAiming_Params params;
	params.AimingType = AimingType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AimingComp.OnTargetingReleased
// (Final, Native, Public, BlueprintCallable)

void UAimingComp::OnTargetingReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AimingComp.OnTargetingReleased");

	UAimingComp_OnTargetingReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AimingComp.OnTargetingPressed
// (Final, Native, Public, BlueprintCallable)

void UAimingComp::OnTargetingPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AimingComp.OnTargetingPressed");

	UAimingComp_OnTargetingPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AimingComp.GetCurrentBoltActionProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBoltActionWeaponProgressType  ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EBoltActionWeaponProgressType UAimingComp::GetCurrentBoltActionProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AimingComp.GetCurrentBoltActionProgress");

	UAimingComp_GetCurrentBoltActionProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AimingComp.GetAimingType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAimingType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAimingType UAimingComp::GetAimingType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AimingComp.GetAimingType");

	UAimingComp_GetAimingType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AirAttackCS.OnAirAttack
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<EAirAttackInfo>    airattacktype                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            waveindex                      (Parm, ZeroConstructor, IsPlainOldData)

void UAirAttackCS::OnAirAttack(TEnumAsByte<EAirAttackInfo> airattacktype, int waveindex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirAttackCS.OnAirAttack");

	UAirAttackCS_OnAirAttack_Params params;
	params.airattacktype = airattacktype;
	params.waveindex = waveindex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirAttackCS.DoBombHarmAtLocation
// (Final, Native, Private, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 bombLocation                   (Parm, OutParm, IsPlainOldData)

void UAirAttackCS::DoBombHarmAtLocation(struct FVector* bombLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirAttackCS.DoBombHarmAtLocation");

	UAirAttackCS_DoBombHarmAtLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bombLocation != nullptr)
		*bombLocation = params.bombLocation;
}


// Function ShadowTrackerExtra.AirAttackCS.AirAttackThrowBomb
// (Final, Native, Private)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UAirAttackCS::AirAttackThrowBomb(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirAttackCS.AirAttackThrowBomb");

	UAirAttackCS_AirAttackThrowBomb_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropBoxActor.SetBuoyancyUpdatedComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*         UpdatedComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AAirDropBoxActor::SetBuoyancyUpdatedComponent(class USceneComponent* UpdatedComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropBoxActor.SetBuoyancyUpdatedComponent");

	AAirDropBoxActor_SetBuoyancyUpdatedComponent_Params params;
	params.UpdatedComponent = UpdatedComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropBoxActor.OnRep_BoxId
// (Final, Native, Public)

void AAirDropBoxActor::OnRep_BoxId()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropBoxActor.OnRep_BoxId");

	AAirDropBoxActor_OnRep_BoxId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropBoxActor.OnRep_AirdropTypeChange
// (Final, Native, Public)

void AAirDropBoxActor::OnRep_AirdropTypeChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropBoxActor.OnRep_AirdropTypeChange");

	AAirDropBoxActor_OnRep_AirdropTypeChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropBoxActor.OnLanded
// (Final, Native, Protected, BlueprintCallable)

void AAirDropBoxActor::OnLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropBoxActor.OnLanded");

	AAirDropBoxActor_OnLanded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropBoxActor.GenerateWrappersBox
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FAirDropBoxGenerateWrapperItemData> DataList                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 BoxLoc                         (Parm, IsPlainOldData)

void AAirDropBoxActor::GenerateWrappersBox(TArray<struct FAirDropBoxGenerateWrapperItemData> DataList, const struct FVector& BoxLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropBoxActor.GenerateWrappersBox");

	AAirDropBoxActor_GenerateWrappersBox_Params params;
	params.DataList = DataList;
	params.BoxLoc = BoxLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropBoxActor.ForceUpdateAirdropLoc
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AAirDropBoxActor::ForceUpdateAirdropLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropBoxActor.ForceUpdateAirdropLoc");

	AAirDropBoxActor_ForceUpdateAirdropLoc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AirDropBoxActor.DistanceScalerChangedEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)

void AAirDropBoxActor::DistanceScalerChangedEvent(float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropBoxActor.DistanceScalerChangedEvent");

	AAirDropBoxActor_DistanceScalerChangedEvent_Params params;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropBoxActor.ChangeAirdropAppearance
// (Event, Public, BlueprintEvent)

void AAirDropBoxActor::ChangeAirdropAppearance()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropBoxActor.ChangeAirdropAppearance");

	AAirDropBoxActor_ChangeAirdropAppearance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropBoxActor.BoxReachGround
// (Event, Public, BlueprintEvent)

void AAirDropBoxActor::BoxReachGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropBoxActor.BoxReachGround");

	AAirDropBoxActor_BoxReachGround_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropComponent.OnAirPlaneDropStuff
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 DropLoc                        (Parm, IsPlainOldData)
// struct FAirDropOrder           Order                          (Parm)

void UAirDropComponent::OnAirPlaneDropStuff(const struct FVector& DropLoc, const struct FAirDropOrder& Order)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropComponent.OnAirPlaneDropStuff");

	UAirDropComponent_OnAirPlaneDropStuff_Params params;
	params.DropLoc = DropLoc;
	params.Order = Order;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropComponent.OnAirDropStart
// (Final, Native, Public)
// Parameters:
// struct FAirDropOrder           Order                          (Parm)

void UAirDropComponent::OnAirDropStart(const struct FAirDropOrder& Order)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropComponent.OnAirDropStart");

	UAirDropComponent_OnAirDropStart_Params params;
	params.Order = Order;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropComponent.CallSuperAirDrop
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 DropLoc                        (Parm, IsPlainOldData)

void UAirDropComponent::CallSuperAirDrop(const struct FVector& DropLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropComponent.CallSuperAirDrop");

	UAirDropComponent_CallSuperAirDrop_Params params;
	params.DropLoc = DropLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerTombBox.SwitchToDeadTombBox
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APlayerTombBox::SwitchToDeadTombBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerTombBox.SwitchToDeadTombBox");

	APlayerTombBox_SwitchToDeadTombBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerTombBox.OnRep_AttachmentReplication
// (Native, Public)

void APlayerTombBox::OnRep_AttachmentReplication()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerTombBox.OnRep_AttachmentReplication");

	APlayerTombBox_OnRep_AttachmentReplication_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerTombBox.OnRep_AttachedActor
// (Final, Native, Protected)

void APlayerTombBox::OnRep_AttachedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerTombBox.OnRep_AttachedActor");

	APlayerTombBox_OnRep_AttachedActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerTombBox.HideDeadTombApparence
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APlayerTombBox::HideDeadTombApparence()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerTombBox.HideDeadTombApparence");

	APlayerTombBox_HideDeadTombApparence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerTombBox.GeneratePlayerBackpackWrappers
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void APlayerTombBox::GeneratePlayerBackpackWrappers()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerTombBox.GeneratePlayerBackpackWrappers");

	APlayerTombBox_GeneratePlayerBackpackWrappers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerTombBox.GenerateAirDropBoxWrappers
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FAirDropBoxGenerateWrapperItemData> DataList                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FName                   AirBoxName                     (Parm, ZeroConstructor, IsPlainOldData)

void APlayerTombBox::GenerateAirDropBoxWrappers(TArray<struct FAirDropBoxGenerateWrapperItemData> DataList, const struct FName& AirBoxName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerTombBox.GenerateAirDropBoxWrappers");

	APlayerTombBox_GenerateAirDropBoxWrappers_Params params;
	params.DataList = DataList;
	params.AirBoxName = AirBoxName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AirDropPlane.OnRep_FlyingParams
// (Final, Native, Public)

void AAirDropPlane::OnRep_FlyingParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AirDropPlane.OnRep_FlyingParams");

	AAirDropPlane_OnRep_FlyingParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.ShowAttachmentByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsVisible                     (Parm, ZeroConstructor, IsPlainOldData)

void UAvatarComponent::ShowAttachmentByIndex(int Index, bool bIsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.ShowAttachmentByIndex");

	UAvatarComponent_ShowAttachmentByIndex_Params params;
	params.Index = Index;
	params.bIsVisible = bIsVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.ResetComponentMaster
// (Final, Native, Public, BlueprintCallable)

void UAvatarComponent::ResetComponentMaster()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.ResetComponentMaster");

	UAvatarComponent_ResetComponentMaster_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.ResetAllAvataSlot
// (Final, Native, Public, BlueprintCallable)

void UAvatarComponent::ResetAllAvataSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.ResetAllAvataSlot");

	UAvatarComponent_ResetAllAvataSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.PutOnEquipmentByResID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            resID                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAvatarComponent::PutOnEquipmentByResID(int resID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.PutOnEquipmentByResID");

	UAvatarComponent_PutOnEquipmentByResID_Params params;
	params.resID = resID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.PutOnEquipmentByItemHandle
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMesh*           skMesh                         (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             stMesh                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAvatarComponent::PutOnEquipmentByItemHandle(class UBattleItemHandleBase* ItemHandle, class USkeletalMesh* skMesh, class UStaticMesh* stMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.PutOnEquipmentByItemHandle");

	UAvatarComponent_PutOnEquipmentByItemHandle_Params params;
	params.ItemHandle = ItemHandle;
	params.skMesh = skMesh;
	params.stMesh = stMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.PutOffEquimentByResID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            resID                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAvatarComponent::PutOffEquimentByResID(int resID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.PutOffEquimentByResID");

	UAvatarComponent_PutOffEquimentByResID_Params params;
	params.resID = resID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.PutOffEquiment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAvatarComponent::PutOffEquiment(int Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.PutOffEquiment");

	UAvatarComponent_PutOffEquiment_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.OnAsyncLoadMesh
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FSoftObjectPath         AssetRef                       (Parm)
// bool                           isReplaced                     (Parm, ZeroConstructor, IsPlainOldData)

void UAvatarComponent::OnAsyncLoadMesh(const struct FSoftObjectPath& AssetRef, bool isReplaced)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.OnAsyncLoadMesh");

	UAvatarComponent_OnAsyncLoadMesh_Params params;
	params.AssetRef = AssetRef;
	params.isReplaced = isReplaced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.LoadMeshsAsync
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   handleList                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           needDirectLoad                 (Parm, ZeroConstructor, IsPlainOldData)

void UAvatarComponent::LoadMeshsAsync(class UBattleItemHandleBase* handleList, bool needDirectLoad)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.LoadMeshsAsync");

	UAvatarComponent_LoadMeshsAsync_Params params;
	params.handleList = handleList;
	params.needDirectLoad = needDirectLoad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.IsTeammate
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAvatarComponent::IsTeammate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.IsTeammate");

	UAvatarComponent_IsTeammate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.IsSlotHasEquipped
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAvatarComponent::IsSlotHasEquipped(int Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.IsSlotHasEquipped");

	UAvatarComponent_IsSlotHasEquipped_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.IsNeedReplaced
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBackpackAvatarHandle*   doReplaceHandle                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAvatarComponent::IsNeedReplaced(class UBackpackAvatarHandle* doReplaceHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.IsNeedReplaced");

	UAvatarComponent_IsNeedReplaced_Params params;
	params.doReplaceHandle = doReplaceHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.InitDefaultMesh
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)

void UAvatarComponent::InitDefaultMesh(class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.InitDefaultMesh");

	UAvatarComponent_InitDefaultMesh_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.GetStaticMesh
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FMeshPackage            meshPack                       (ConstParm, Parm, OutParm, ReferenceParm)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UAvatarComponent::GetStaticMesh(const struct FMeshPackage& meshPack)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.GetStaticMesh");

	UAvatarComponent_GetStaticMesh_Params params;
	params.meshPack = meshPack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.GetSlotDefinedID
// (Final, Native, Public)
// Parameters:
// int                            slotID                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FItemDefineID UAvatarComponent::GetSlotDefinedID(int slotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.GetSlotDefinedID");

	UAvatarComponent_GetSlotDefinedID_Params params;
	params.slotID = slotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.GetSkeletalMesh
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FMeshPackage            meshPack                       (ConstParm, Parm, OutParm, ReferenceParm)
// class USkeletalMesh*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USkeletalMesh* UAvatarComponent::GetSkeletalMesh(const struct FMeshPackage& meshPack)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.GetSkeletalMesh");

	UAvatarComponent_GetSkeletalMesh_Params params;
	params.meshPack = meshPack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.GetMaterial
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FMeshPackage            meshPack                       (ConstParm, Parm, OutParm, ReferenceParm)
// class UMaterialInstance*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstance* UAvatarComponent::GetMaterial(const struct FMeshPackage& meshPack)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.GetMaterial");

	UAvatarComponent_GetMaterial_Params params;
	params.meshPack = meshPack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.GetEquimentMeshBySlot
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FMeshData               meshPack                       (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAvatarComponent::GetEquimentMeshBySlot(int Slot, struct FMeshData* meshPack)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.GetEquimentMeshBySlot");

	UAvatarComponent_GetEquimentMeshBySlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (meshPack != nullptr)
		*meshPack = params.meshPack;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.GetApplyMeshType
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// EMeshType                      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EMeshType UAvatarComponent::GetApplyMeshType(int Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.GetApplyMeshType");

	UAvatarComponent_GetApplyMeshType_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.ClearMeshBySlot
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           putDefault                     (Parm, ZeroConstructor, IsPlainOldData)

void UAvatarComponent::ClearMeshBySlot(int Slot, bool putDefault)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.ClearMeshBySlot");

	UAvatarComponent_ClearMeshBySlot_Params params;
	params.Slot = Slot;
	params.putDefault = putDefault;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.ClearMeshByItemHandle
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)

void UAvatarComponent::ClearMeshByItemHandle(class UBattleItemHandleBase* ItemHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.ClearMeshByItemHandle");

	UAvatarComponent_ClearMeshByItemHandle_Params params;
	params.ItemHandle = ItemHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.ApplyStaticMeshByID
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             pSM                            (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       Mat                            (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAvatarComponent::ApplyStaticMeshByID(int Slot, class UStaticMesh* pSM, class UMaterialInstance* Mat, class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.ApplyStaticMeshByID");

	UAvatarComponent_ApplyStaticMeshByID_Params params;
	params.Slot = Slot;
	params.pSM = pSM;
	params.Mat = Mat;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.ApplySkeletalMeshByID
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMesh*           Mesh                           (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       Mat                            (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UAvatarComponent::ApplySkeletalMeshByID(int Slot, class USkeletalMesh* Mesh, class UMaterialInstance* Mat, class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.ApplySkeletalMeshByID");

	UAvatarComponent_ApplySkeletalMeshByID_Params params;
	params.Slot = Slot;
	params.Mesh = Mesh;
	params.Mat = Mat;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarComponent.ApplyMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*          Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class USkeletalMesh*           SkeletalMesh                   (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData)

void UAvatarComponent::ApplyMesh(class UMeshComponent* Component, class USkeletalMesh* SkeletalMesh, class UStaticMesh* StaticMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.ApplyMesh");

	UAvatarComponent_ApplyMesh_Params params;
	params.Component = Component;
	params.SkeletalMesh = SkeletalMesh;
	params.StaticMesh = StaticMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.ApplyMaterial
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)
// class UMeshComponent*          meshComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UAvatarComponent::ApplyMaterial(class UBattleItemHandleBase* ItemHandle, class UMeshComponent* meshComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.ApplyMaterial");

	UAvatarComponent_ApplyMaterial_Params params;
	params.ItemHandle = ItemHandle;
	params.meshComp = meshComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarComponent.ApplyConfig
// (Final, Native, Public, BlueprintCallable)

void UAvatarComponent::ApplyConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarComponent.ApplyConfig");

	UAvatarComponent_ApplyConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.AvatarUtils.GetAvatarDataTableRowByID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           definedID                      (Parm)
// struct FAvatarItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAvatarItemData UAvatarUtils::STATIC_GetAvatarDataTableRowByID(const struct FItemDefineID& definedID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarUtils.GetAvatarDataTableRowByID");

	UAvatarUtils_GetAvatarDataTableRowByID_Params params;
	params.definedID = definedID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarUtils.ConstructAvatarItemDataFromTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           definedID                      (Parm)
// struct FAvatarItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAvatarItemData UAvatarUtils::STATIC_ConstructAvatarItemDataFromTable(const struct FItemDefineID& definedID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarUtils.ConstructAvatarItemDataFromTable");

	UAvatarUtils_ConstructAvatarItemDataFromTable_Params params;
	params.definedID = definedID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarBPUtils.GetAvatarDataTableRowByID
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FItemDefineID           definedID                      (Parm)
// struct FAvatarItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAvatarItemData UAvatarBPUtils::GetAvatarDataTableRowByID(const struct FItemDefineID& definedID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarBPUtils.GetAvatarDataTableRowByID");

	UAvatarBPUtils_GetAvatarDataTableRowByID_Params params;
	params.definedID = definedID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.AvatarBPUtils.ConstructAvatarItemDataFromTable
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FItemDefineID           definedID                      (Parm)
// struct FAvatarItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAvatarItemData UAvatarBPUtils::ConstructAvatarItemDataFromTable(const struct FItemDefineID& definedID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.AvatarBPUtils.ConstructAvatarItemDataFromTable");

	UAvatarBPUtils_ConstructAvatarItemDataFromTable_Params params;
	params.definedID = definedID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackAvatarHandle.OnCharacterAttrChangedWithDetailEvent
// (Final, Native, Public)
// Parameters:
// class AActor*                  Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 AttrName                       (Parm, ZeroConstructor)
// float                          deltaVal                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          resultVal                      (Parm, ZeroConstructor, IsPlainOldData)

void UBackpackAvatarHandle::OnCharacterAttrChangedWithDetailEvent(class AActor* Owner, const struct FString& AttrName, float deltaVal, float resultVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackAvatarHandle.OnCharacterAttrChangedWithDetailEvent");

	UBackpackAvatarHandle_OnCharacterAttrChangedWithDetailEvent_Params params;
	params.Owner = Owner;
	params.AttrName = AttrName;
	params.deltaVal = deltaVal;
	params.resultVal = resultVal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BackpackAvatarHandle.HandleUse
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FBattleItemUseTarget    Target                         (Parm)
// EBattleItemUseReason           Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackAvatarHandle::HandleUse(const struct FBattleItemUseTarget& Target, EBattleItemUseReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackAvatarHandle.HandleUse");

	UBackpackAvatarHandle_HandleUse_Params params;
	params.Target = Target;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackAvatarHandle.HandlePickup
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TScriptInterface<class UItemContainerInterface> ItemContainer                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FBattleItemPickupInfo   PickupInfo                     (Parm)
// EBattleItemPickupReason        Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackAvatarHandle::HandlePickup(const TScriptInterface<class UItemContainerInterface>& ItemContainer, const struct FBattleItemPickupInfo& PickupInfo, EBattleItemPickupReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackAvatarHandle.HandlePickup");

	UBackpackAvatarHandle_HandlePickup_Params params;
	params.ItemContainer = ItemContainer;
	params.PickupInfo = PickupInfo;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackAvatarHandle.HandleDrop
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            InCount                        (Parm, ZeroConstructor, IsPlainOldData)
// EBattleItemDropReason          Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackAvatarHandle::HandleDrop(int InCount, EBattleItemDropReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackAvatarHandle.HandleDrop");

	UBackpackAvatarHandle_HandleDrop_Params params;
	params.InCount = InCount;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackAvatarHandle.HandleDisuse
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EBattleItemDisuseReason        Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackAvatarHandle::HandleDisuse(EBattleItemDisuseReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackAvatarHandle.HandleDisuse");

	UBackpackAvatarHandle_HandleDisuse_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackAvatarHandle.GetBackpackComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBackpackComponent* UBackpackAvatarHandle::GetBackpackComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackAvatarHandle.GetBackpackComponent");

	UBackpackAvatarHandle_GetBackpackComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackAvatarHandle.CheckCanPickUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCharacterAvatarComponent* avatarComp                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            nowCapcity                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackAvatarHandle::CheckCanPickUp(class UCharacterAvatarComponent* avatarComp, int nowCapcity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackAvatarHandle.CheckCanPickUp");

	UBackpackAvatarHandle_CheckCanPickUp_Params params;
	params.avatarComp = avatarComp;
	params.nowCapcity = nowCapcity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackEmoteHandle.HandleUse
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FBattleItemUseTarget    Target                         (Parm)
// EBattleItemUseReason           Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackEmoteHandle::HandleUse(const struct FBattleItemUseTarget& Target, EBattleItemUseReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackEmoteHandle.HandleUse");

	UBackpackEmoteHandle_HandleUse_Params params;
	params.Target = Target;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackEmoteHandle.HandlePickup
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TScriptInterface<class UItemContainerInterface> ItemContainer                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FBattleItemPickupInfo   PickupInfo                     (Parm)
// EBattleItemPickupReason        Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackEmoteHandle::HandlePickup(const TScriptInterface<class UItemContainerInterface>& ItemContainer, const struct FBattleItemPickupInfo& PickupInfo, EBattleItemPickupReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackEmoteHandle.HandlePickup");

	UBackpackEmoteHandle_HandlePickup_Params params;
	params.ItemContainer = ItemContainer;
	params.PickupInfo = PickupInfo;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackEmoteHandle.HandleDrop
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            InCount                        (Parm, ZeroConstructor, IsPlainOldData)
// EBattleItemDropReason          Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackEmoteHandle::HandleDrop(int InCount, EBattleItemDropReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackEmoteHandle.HandleDrop");

	UBackpackEmoteHandle_HandleDrop_Params params;
	params.InCount = InCount;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackEmoteHandle.HandleDisuse
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EBattleItemDisuseReason        Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackEmoteHandle::HandleDisuse(EBattleItemDisuseReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackEmoteHandle.HandleDisuse");

	UBackpackEmoteHandle_HandleDisuse_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackEmoteHandle.GetBackpackComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBackpackComponent* UBackpackEmoteHandle::GetBackpackComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackEmoteHandle.GetBackpackComponent");

	UBackpackEmoteHandle_GetBackpackComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackEmoteHandle.CheckCanPickUp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCharacterAvatarComponent* avatarComp                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            nowCapcity                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackEmoteHandle::CheckCanPickUp(class UCharacterAvatarComponent* avatarComp, int nowCapcity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackEmoteHandle.CheckCanPickUp");

	UBackpackEmoteHandle_CheckCanPickUp_Params params;
	params.avatarComp = avatarComp;
	params.nowCapcity = nowCapcity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.SortBattleSearchItemList
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FBattleSearchItemSortingInfo> ItemList                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FBattleSearchItemSortingInfo> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleSearchItemSortingInfo> UBackpackUtils::STATIC_SortBattleSearchItemList(TArray<struct FBattleSearchItemSortingInfo> ItemList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.SortBattleSearchItemList");

	UBackpackUtils_SortBattleSearchItemList_Params params;
	params.ItemList = ItemList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.SortBattleSearchBoxList
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FBattleSearchBoxSortingInfo> BoxList                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FBattleSearchBoxSortingInfo> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleSearchBoxSortingInfo> UBackpackUtils::STATIC_SortBattleSearchBoxList(TArray<struct FBattleSearchBoxSortingInfo> BoxList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.SortBattleSearchBoxList");

	UBackpackUtils_SortBattleSearchBoxList_Params params;
	params.BoxList = BoxList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.SortBattleItemList
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FBattleItemSortingInfo> ItemList                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FBattleItemSortingInfo> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleItemSortingInfo> UBackpackUtils::STATIC_SortBattleItemList(TArray<struct FBattleItemSortingInfo> ItemList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.SortBattleItemList");

	UBackpackUtils_SortBattleItemList_Params params;
	params.ItemList = ItemList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.ReturnIteratively
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FItemDefineID           DefineID                       (Parm)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bCallHandlePickup              (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UBackpackUtils::STATIC_ReturnIteratively(class UBackpackComponent* BackpackComp, const struct FItemDefineID& DefineID, int Count, bool bCallHandlePickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.ReturnIteratively");

	UBackpackUtils_ReturnIteratively_Params params;
	params.BackpackComp = BackpackComp;
	params.DefineID = DefineID;
	params.Count = Count;
	params.bCallHandlePickup = bCallHandlePickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.PickupFromGround
// (Final, Native, Static, Public)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class APickUpWrapperActor*     Source                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FBattleItemUseTarget    AutoEquipTarget                (Parm)
// bool                           bForceAutoEquip                (Parm, ZeroConstructor, IsPlainOldData)
// int                            PickUpCount                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UBackpackUtils::STATIC_PickupFromGround(class UBackpackComponent* BackpackComp, class APickUpWrapperActor* Source, const struct FBattleItemUseTarget& AutoEquipTarget, bool bForceAutoEquip, int PickUpCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.PickupFromGround");

	UBackpackUtils_PickupFromGround_Params params;
	params.BackpackComp = BackpackComp;
	params.Source = Source;
	params.AutoEquipTarget = AutoEquipTarget;
	params.bForceAutoEquip = bForceAutoEquip;
	params.PickUpCount = PickUpCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.MakeSkinDataFromItemDefineID
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FSkinData               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FSkinData UBackpackUtils::STATIC_MakeSkinDataFromItemDefineID(const struct FItemDefineID& DefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.MakeSkinDataFromItemDefineID");

	UBackpackUtils_MakeSkinDataFromItemDefineID_Params params;
	params.DefineID = DefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.IsSameItem
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID1                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FItemDefineID           DefineID2                      (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackUtils::STATIC_IsSameItem(const struct FItemDefineID& DefineID1, const struct FItemDefineID& DefineID2)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.IsSameItem");

	UBackpackUtils_IsSameItem_Params params;
	params.DefineID1 = DefineID1;
	params.DefineID2 = DefineID2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.IsSameInstance
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID1                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FItemDefineID           DefineID2                      (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackUtils::STATIC_IsSameInstance(const struct FItemDefineID& DefineID1, const struct FItemDefineID& DefineID2)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.IsSameInstance");

	UBackpackUtils_IsSameInstance_Params params;
	params.DefineID1 = DefineID1;
	params.DefineID2 = DefineID2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.IsItemUseful
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UWeaponManagerComponent* weaponComp                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FItemDefineID           DefineID                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FSearchedPickUpItemResult SearchItemResult               (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackUtils::STATIC_IsItemUseful(class UBackpackComponent* BackpackComp, class UWeaponManagerComponent* weaponComp, const struct FItemDefineID& DefineID, const struct FSearchedPickUpItemResult& SearchItemResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.IsItemUseful");

	UBackpackUtils_IsItemUseful_Params params;
	params.BackpackComp = BackpackComp;
	params.weaponComp = weaponComp;
	params.DefineID = DefineID;
	params.SearchItemResult = SearchItemResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.IsCharacterVirtualItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FItemDefineID           DefineID                       (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackUtils::STATIC_IsCharacterVirtualItem(class UBackpackComponent* BackpackComp, const struct FItemDefineID& DefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.IsCharacterVirtualItem");

	UBackpackUtils_IsCharacterVirtualItem_Params params;
	params.BackpackComp = BackpackComp;
	params.DefineID = DefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetWeaponsInBackpack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bSortPriority                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FBattleItemData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleItemData> UBackpackUtils::STATIC_GetWeaponsInBackpack(class UBackpackComponent* BackpackComp, bool bSortPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetWeaponsInBackpack");

	UBackpackUtils_GetWeaponsInBackpack_Params params;
	params.BackpackComp = BackpackComp;
	params.bSortPriority = bSortPriority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetWeaponAttachmentsInBackpack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bSortPriority                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FBattleItemData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleItemData> UBackpackUtils::STATIC_GetWeaponAttachmentsInBackpack(class UBackpackComponent* BackpackComp, bool bSortPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetWeaponAttachmentsInBackpack");

	UBackpackUtils_GetWeaponAttachmentsInBackpack_Params params;
	params.BackpackComp = BackpackComp;
	params.bSortPriority = bSortPriority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetWeaponAttachmentHandles
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class UBattleItemHandleBase*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UBattleItemHandleBase*> UBackpackUtils::STATIC_GetWeaponAttachmentHandles(class UBackpackComponent* BackpackComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetWeaponAttachmentHandles");

	UBackpackUtils_GetWeaponAttachmentHandles_Params params;
	params.BackpackComp = BackpackComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetRawBattleTextByType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EBattleTextType                Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UBackpackUtils::STATIC_GetRawBattleTextByType(EBattleTextType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetRawBattleTextByType");

	UBackpackUtils_GetRawBattleTextByType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetRawBattleTextByRawTextID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UBackpackUtils::STATIC_GetRawBattleTextByRawTextID(int ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetRawBattleTextByRawTextID");

	UBackpackUtils_GetRawBattleTextByRawTextID_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetItemCountByDefineIDUnEquip
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FItemDefineID           DefineID                       (Parm)
// bool                           bOnlyInstance                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UBackpackUtils::STATIC_GetItemCountByDefineIDUnEquip(class UBackpackComponent* BackpackComp, const struct FItemDefineID& DefineID, bool bOnlyInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetItemCountByDefineIDUnEquip");

	UBackpackUtils_GetItemCountByDefineIDUnEquip_Params params;
	params.BackpackComp = BackpackComp;
	params.DefineID = DefineID;
	params.bOnlyInstance = bOnlyInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetItemCountByDefineID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FItemDefineID           DefineID                       (Parm)
// bool                           bOnlyInstance                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UBackpackUtils::STATIC_GetItemCountByDefineID(class UBackpackComponent* BackpackComp, const struct FItemDefineID& DefineID, bool bOnlyInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetItemCountByDefineID");

	UBackpackUtils_GetItemCountByDefineID_Params params;
	params.BackpackComp = BackpackComp;
	params.DefineID = DefineID;
	params.bOnlyInstance = bOnlyInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetEmoteItemInBackpack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<struct FBattleItemData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleItemData> UBackpackUtils::STATIC_GetEmoteItemInBackpack(class UBackpackComponent* BackpackComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetEmoteItemInBackpack");

	UBackpackUtils_GetEmoteItemInBackpack_Params params;
	params.BackpackComp = BackpackComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetConsumablesInBackpack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bSortPriority                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FBattleItemData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleItemData> UBackpackUtils::STATIC_GetConsumablesInBackpack(class UBackpackComponent* BackpackComp, bool bSortPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetConsumablesInBackpack");

	UBackpackUtils_GetConsumablesInBackpack_Params params;
	params.BackpackComp = BackpackComp;
	params.bSortPriority = bSortPriority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetClothingAndArmorInBackpack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bSortPriority                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FBattleItemData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleItemData> UBackpackUtils::STATIC_GetClothingAndArmorInBackpack(class UBackpackComponent* BackpackComp, bool bSortPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetClothingAndArmorInBackpack");

	UBackpackUtils_GetClothingAndArmorInBackpack_Params params;
	params.BackpackComp = BackpackComp;
	params.bSortPriority = bSortPriority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetCharacterVirtualItemInBackpack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FBattleItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleItemData UBackpackUtils::STATIC_GetCharacterVirtualItemInBackpack(class UBackpackComponent* BackpackComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetCharacterVirtualItemInBackpack");

	UBackpackUtils_GetCharacterVirtualItemInBackpack_Params params;
	params.BackpackComp = BackpackComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetCharacterVirtualItemHandleInBackpack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UBattleItemHandleBase*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBattleItemHandleBase* UBackpackUtils::STATIC_GetCharacterVirtualItemHandleInBackpack(class UBackpackComponent* BackpackComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetCharacterVirtualItemHandleInBackpack");

	UBackpackUtils_GetCharacterVirtualItemHandleInBackpack_Params params;
	params.BackpackComp = BackpackComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetBattleWeaponItemDisplayDataByDefineID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// struct FBattleWeaponItemDisplayData ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleWeaponItemDisplayData UBackpackUtils::STATIC_GetBattleWeaponItemDisplayDataByDefineID(const struct FItemDefineID& DefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetBattleWeaponItemDisplayDataByDefineID");

	UBackpackUtils_GetBattleWeaponItemDisplayDataByDefineID_Params params;
	params.DefineID = DefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetBattleItemFeatureDataByDefineID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// struct FBattleItemFeatureData  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleItemFeatureData UBackpackUtils::STATIC_GetBattleItemFeatureDataByDefineID(const struct FItemDefineID& DefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetBattleItemFeatureDataByDefineID");

	UBackpackUtils_GetBattleItemFeatureDataByDefineID_Params params;
	params.DefineID = DefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetBackpackItemType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemDefineID           ItemDefineID                   (ConstParm, Parm)
// TEnumAsByte<EBackpackItemType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EBackpackItemType> UBackpackUtils::STATIC_GetBackpackItemType(const struct FItemDefineID& ItemDefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetBackpackItemType");

	UBackpackUtils_GetBackpackItemType_Params params;
	params.ItemDefineID = ItemDefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GetAttackTipDataByDamageEventType
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            SubType                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 OutAttackName                  (Parm, OutParm, ZeroConstructor)
// struct FString                 OutAttackActionName            (Parm, OutParm, ZeroConstructor)

void UBackpackUtils::STATIC_GetAttackTipDataByDamageEventType(int DamageType, int SubType, struct FString* OutAttackName, struct FString* OutAttackActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetAttackTipDataByDamageEventType");

	UBackpackUtils_GetAttackTipDataByDamageEventType_Params params;
	params.DamageType = DamageType;
	params.SubType = SubType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAttackName != nullptr)
		*OutAttackName = params.OutAttackName;
	if (OutAttackActionName != nullptr)
		*OutAttackActionName = params.OutAttackActionName;
}


// Function ShadowTrackerExtra.BackpackUtils.GetAllItemsInBackpack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bIncludeVirtualItems           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSortPriority                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FBattleItemData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleItemData> UBackpackUtils::STATIC_GetAllItemsInBackpack(class UBackpackComponent* BackpackComp, bool bIncludeVirtualItems, bool bSortPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GetAllItemsInBackpack");

	UBackpackUtils_GetAllItemsInBackpack_Params params;
	params.BackpackComp = BackpackComp;
	params.bIncludeVirtualItems = bIncludeVirtualItems;
	params.bSortPriority = bSortPriority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GenerateRandomInstanceID
// (Final, Native, Static, Public)
// Parameters:
// uint64_t                       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

uint64_t UBackpackUtils::STATIC_GenerateRandomInstanceID()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GenerateRandomInstanceID");

	UBackpackUtils_GenerateRandomInstanceID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GenerateItemDefineIDWithRandomInstanceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            TypeSpecificID                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FItemDefineID UBackpackUtils::STATIC_GenerateItemDefineIDWithRandomInstanceID(int Type, int TypeSpecificID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GenerateItemDefineIDWithRandomInstanceID");

	UBackpackUtils_GenerateItemDefineIDWithRandomInstanceID_Params params;
	params.Type = Type;
	params.TypeSpecificID = TypeSpecificID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.GenerateItemDefineIDByItemTableIDWithRandomInstanceID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ItemTableID                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FItemDefineID UBackpackUtils::STATIC_GenerateItemDefineIDByItemTableIDWithRandomInstanceID(int ItemTableID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.GenerateItemDefineIDByItemTableIDWithRandomInstanceID");

	UBackpackUtils_GenerateItemDefineIDByItemTableIDWithRandomInstanceID_Params params;
	params.ItemTableID = ItemTableID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.ForceDropNonClothing
// (Final, Native, Static, Public)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UBackpackUtils::STATIC_ForceDropNonClothing(class UBackpackComponent* BackpackComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.ForceDropNonClothing");

	UBackpackUtils_ForceDropNonClothing_Params params;
	params.BackpackComp = BackpackComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BackpackUtils.ForceDropAll
// (Final, Native, Static, Public)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UBackpackUtils::STATIC_ForceDropAll(class UBackpackComponent* BackpackComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.ForceDropAll");

	UBackpackUtils_ForceDropAll_Params params;
	params.BackpackComp = BackpackComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BackpackUtils.ExtractPickupWrapperItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<struct FPickUpWrapperItem> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPickUpWrapperItem> UBackpackUtils::STATIC_ExtractPickupWrapperItems(class UBackpackComponent* BackpackComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.ExtractPickupWrapperItems");

	UBackpackUtils_ExtractPickupWrapperItems_Params params;
	params.BackpackComp = BackpackComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.CreateBattleItemHandleAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// class UObject*                 Outer                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate         Delegate                       (Parm, ZeroConstructor)

void UBackpackUtils::STATIC_CreateBattleItemHandleAsync(const struct FItemDefineID& DefineID, class UObject* Outer, const struct FScriptDelegate& Delegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.CreateBattleItemHandleAsync");

	UBackpackUtils_CreateBattleItemHandleAsync_Params params;
	params.DefineID = DefineID;
	params.Outer = Outer;
	params.Delegate = Delegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BackpackUtils.CreateBattleItemHandle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// class UObject*                 Outer                          (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBattleItemHandleBase* UBackpackUtils::STATIC_CreateBattleItemHandle(const struct FItemDefineID& DefineID, class UObject* Outer)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.CreateBattleItemHandle");

	UBackpackUtils_CreateBattleItemHandle_Params params;
	params.DefineID = DefineID;
	params.Outer = Outer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.ConstructBattleItemDataByItemTableID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ItemTableID                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FBattleItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleItemData UBackpackUtils::STATIC_ConstructBattleItemDataByItemTableID(int ItemTableID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.ConstructBattleItemDataByItemTableID");

	UBackpackUtils_ConstructBattleItemDataByItemTableID_Params params;
	params.ItemTableID = ItemTableID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.ConstructBattleItemDataByDefineID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// struct FBattleItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleItemData UBackpackUtils::STATIC_ConstructBattleItemDataByDefineID(const struct FItemDefineID& DefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.ConstructBattleItemDataByDefineID");

	UBackpackUtils_ConstructBattleItemDataByDefineID_Params params;
	params.DefineID = DefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.CheckCapacityForSwapOrDrop
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OldCapacity                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewCapacity                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackUtils::STATIC_CheckCapacityForSwapOrDrop(class UBackpackComponent* BackpackComp, int OldCapacity, int NewCapacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.CheckCapacityForSwapOrDrop");

	UBackpackUtils_CheckCapacityForSwapOrDrop_Params params;
	params.BackpackComp = BackpackComp;
	params.OldCapacity = OldCapacity;
	params.NewCapacity = NewCapacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackUtils.AddCharacterVirtualItemHandleToBackpack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UBackpackUtils::STATIC_AddCharacterVirtualItemHandleToBackpack(class UBackpackComponent* BackpackComp, class ASTExtraBaseCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackUtils.AddCharacterVirtualItemHandleToBackpack");

	UBackpackUtils_AddCharacterVirtualItemHandleToBackpack_Params params;
	params.BackpackComp = BackpackComp;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.MakeSkinDataFromItemDefineID
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FItemDefineID           DefineID                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FSkinData               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FSkinData UBackpackBlueprintUtils::MakeSkinDataFromItemDefineID(const struct FItemDefineID& DefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.MakeSkinDataFromItemDefineID");

	UBackpackBlueprintUtils_MakeSkinDataFromItemDefineID_Params params;
	params.DefineID = DefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.IsVirtualItemData
// (Native, Event, Protected, HasOutParms, BlueprintEvent, Const)
// Parameters:
// struct FBattleItemData         ItemData                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackBlueprintUtils::IsVirtualItemData(const struct FBattleItemData& ItemData)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.IsVirtualItemData");

	UBackpackBlueprintUtils_IsVirtualItemData_Params params;
	params.ItemData = ItemData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.InitialItemTable
// (Native, Event, Protected, BlueprintEvent)

void UBackpackBlueprintUtils::InitialItemTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.InitialItemTable");

	UBackpackBlueprintUtils_InitialItemTable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.GetRawBattleTextByType
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleTextType                Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UBackpackBlueprintUtils::GetRawBattleTextByType(EBattleTextType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.GetRawBattleTextByType");

	UBackpackBlueprintUtils_GetRawBattleTextByType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.GetRawBattleTextByRawTextID
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UBackpackBlueprintUtils::GetRawBattleTextByRawTextID(int ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.GetRawBattleTextByRawTextID");

	UBackpackBlueprintUtils_GetRawBattleTextByRawTextID_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.GetItemSubTypeID
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            SpecificID                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UBackpackBlueprintUtils::GetItemSubTypeID(int SpecificID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.GetItemSubTypeID");

	UBackpackBlueprintUtils_GetItemSubTypeID_Params params;
	params.SpecificID = SpecificID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.GetItemDataForGameLog
// (Event, Protected, BlueprintEvent)
// Parameters:
// int                            ItemID                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FLogItem                ReturnValue                    (Parm, OutParm, ReturnParm)

struct FLogItem UBackpackBlueprintUtils::GetItemDataForGameLog(int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.GetItemDataForGameLog");

	UBackpackBlueprintUtils_GetItemDataForGameLog_Params params;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.GetCharacterVirtualItemInBackpack
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FBattleItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleItemData UBackpackBlueprintUtils::GetCharacterVirtualItemInBackpack(class UBackpackComponent* BackpackComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.GetCharacterVirtualItemInBackpack");

	UBackpackBlueprintUtils_GetCharacterVirtualItemInBackpack_Params params;
	params.BackpackComp = BackpackComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.GetCharacterVirtualItemHandleInBackpack
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UBattleItemHandleBase*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBattleItemHandleBase* UBackpackBlueprintUtils::GetCharacterVirtualItemHandleInBackpack(class UBackpackComponent* BackpackComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.GetCharacterVirtualItemHandleInBackpack");

	UBackpackBlueprintUtils_GetCharacterVirtualItemHandleInBackpack_Params params;
	params.BackpackComp = BackpackComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.GetBattleWeaponItemDisplayDataByDefineID
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// struct FBattleWeaponItemDisplayData ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleWeaponItemDisplayData UBackpackBlueprintUtils::GetBattleWeaponItemDisplayDataByDefineID(const struct FItemDefineID& DefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.GetBattleWeaponItemDisplayDataByDefineID");

	UBackpackBlueprintUtils_GetBattleWeaponItemDisplayDataByDefineID_Params params;
	params.DefineID = DefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.GetBattleItemHandlePath
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UBackpackBlueprintUtils::GetBattleItemHandlePath(const struct FItemDefineID& DefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.GetBattleItemHandlePath");

	UBackpackBlueprintUtils_GetBattleItemHandlePath_Params params;
	params.DefineID = DefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.GetBattleItemFeatureDataByDefineID
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// struct FBattleItemFeatureData  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleItemFeatureData UBackpackBlueprintUtils::GetBattleItemFeatureDataByDefineID(const struct FItemDefineID& DefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.GetBattleItemFeatureDataByDefineID");

	UBackpackBlueprintUtils_GetBattleItemFeatureDataByDefineID_Params params;
	params.DefineID = DefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.GenerateItemDefineIDByItemTableID
// (Native, Event, Protected, HasOutParms, BlueprintEvent, Const)
// Parameters:
// int                            ItemTableID                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            Type                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            TypeSpecificID                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UBackpackBlueprintUtils::GenerateItemDefineIDByItemTableID(int ItemTableID, int* Type, int* TypeSpecificID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.GenerateItemDefineIDByItemTableID");

	UBackpackBlueprintUtils_GenerateItemDefineIDByItemTableID_Params params;
	params.ItemTableID = ItemTableID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Type != nullptr)
		*Type = params.Type;
	if (TypeSpecificID != nullptr)
		*TypeSpecificID = params.TypeSpecificID;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.CreateBattleItemHandle
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// class UObject*                 Outer                          (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBattleItemHandleBase* UBackpackBlueprintUtils::CreateBattleItemHandle(const struct FItemDefineID& DefineID, class UObject* Outer)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.CreateBattleItemHandle");

	UBackpackBlueprintUtils_CreateBattleItemHandle_Params params;
	params.DefineID = DefineID;
	params.Outer = Outer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.ConstructBattleItemDataByItemTableID
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// int                            ItemTableID                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FBattleItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleItemData UBackpackBlueprintUtils::ConstructBattleItemDataByItemTableID(int ItemTableID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.ConstructBattleItemDataByItemTableID");

	UBackpackBlueprintUtils_ConstructBattleItemDataByItemTableID_Params params;
	params.ItemTableID = ItemTableID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.ConstructBattleItemDataByDefineID
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// struct FBattleItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleItemData UBackpackBlueprintUtils::ConstructBattleItemDataByDefineID(const struct FItemDefineID& DefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.ConstructBattleItemDataByDefineID");

	UBackpackBlueprintUtils_ConstructBattleItemDataByDefineID_Params params;
	params.DefineID = DefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BackpackBlueprintUtils.AddCharacterVirtualItemToBackpack
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UBackpackComponent*      BackpackComp                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UBackpackBlueprintUtils::AddCharacterVirtualItemToBackpack(class UBackpackComponent* BackpackComp, class ASTExtraBaseCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackBlueprintUtils.AddCharacterVirtualItemToBackpack");

	UBackpackBlueprintUtils_AddCharacterVirtualItemToBackpack_Params params;
	params.BackpackComp = BackpackComp;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BackpackWeaponAttachHandle.ReturnWeaponAdditionalBulletsToBackpack
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASTExtraShootWeapon*     Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            BulletNum                      (Parm, ZeroConstructor, IsPlainOldData)

void UBackpackWeaponAttachHandle::ReturnWeaponAdditionalBulletsToBackpack(class ASTExtraShootWeapon* Weapon, int BulletNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackWeaponAttachHandle.ReturnWeaponAdditionalBulletsToBackpack");

	UBackpackWeaponAttachHandle_ReturnWeaponAdditionalBulletsToBackpack_Params params;
	params.Weapon = Weapon;
	params.BulletNum = BulletNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BackpackWeaponAttachHandle.ResetNeedReturnBulletsWhenDisuseExtendMaxBulletDJ
// (Final, Native, Public, BlueprintCallable)

void UBackpackWeaponAttachHandle::ResetNeedReturnBulletsWhenDisuseExtendMaxBulletDJ()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackWeaponAttachHandle.ResetNeedReturnBulletsWhenDisuseExtendMaxBulletDJ");

	UBackpackWeaponAttachHandle_ResetNeedReturnBulletsWhenDisuseExtendMaxBulletDJ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BackpackWeaponAttachHandle.HandleDisuseReplaceByNew
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBackpackWeaponAttachHandle* NewHandle                      (Parm, ZeroConstructor, IsPlainOldData)

void UBackpackWeaponAttachHandle::HandleDisuseReplaceByNew(class UBackpackWeaponAttachHandle* NewHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackWeaponAttachHandle.HandleDisuseReplaceByNew");

	UBackpackWeaponAttachHandle_HandleDisuseReplaceByNew_Params params;
	params.NewHandle = NewHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BackpackWeaponAttachHandle.EquipOrUnEuipAttachment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraShootWeapon*     InWeapon                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsEquip                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UBackpackWeaponAttachHandle::EquipOrUnEuipAttachment(class ASTExtraShootWeapon* InWeapon, bool IsEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BackpackWeaponAttachHandle.EquipOrUnEuipAttachment");

	UBackpackWeaponAttachHandle_EquipOrUnEuipAttachment_Params params;
	params.InWeapon = InWeapon;
	params.IsEquip = IsEquip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BaseCharacterEffectCom.HandleOwnerDeath
// (Final, Native, Private, HasOutParms, HasDefaults)
// Parameters:
// class ASTExtraBaseCharacter*   DeadCharacter                  (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              KillingHitInfo                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 KillingHitImpulseDir           (Parm, IsPlainOldData)
// class UClass*                  KillingHitDamageType           (Parm, ZeroConstructor, IsPlainOldData)

void UBaseCharacterEffectCom::HandleOwnerDeath(class ASTExtraBaseCharacter* DeadCharacter, class AController* Killer, class AActor* DamageCauser, const struct FHitResult& KillingHitInfo, const struct FVector& KillingHitImpulseDir, class UClass* KillingHitDamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseCharacterEffectCom.HandleOwnerDeath");

	UBaseCharacterEffectCom_HandleOwnerDeath_Params params;
	params.DeadCharacter = DeadCharacter;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;
	params.KillingHitInfo = KillingHitInfo;
	params.KillingHitImpulseDir = KillingHitImpulseDir;
	params.KillingHitDamageType = KillingHitDamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.X8ZoomReload
// (Final, Native, Protected, BlueprintCallable)

void UBaseFPPComponent::X8ZoomReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.X8ZoomReload");

	UBaseFPPComponent_X8ZoomReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.X8Zoom
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          Alpha                          (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::X8Zoom(float Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.X8Zoom");

	UBaseFPPComponent_X8Zoom_Params params;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.X8Transform
// (Final, Native, Protected, HasOutParms)
// Parameters:
// float                          FOV                            (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Length                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::X8Transform(float* FOV, float* Length)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.X8Transform");

	UBaseFPPComponent_X8Transform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (FOV != nullptr)
		*FOV = params.FOV;
	if (Length != nullptr)
		*Length = params.Length;
}


// Function ShadowTrackerExtra.BaseFPPComponent.X8Tick
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::X8Tick(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.X8Tick");

	UBaseFPPComponent_X8Tick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.TempTransformToFPP
// (Final, Native, Protected, BlueprintCallable)

void UBaseFPPComponent::TempTransformToFPP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.TempTransformToFPP");

	UBaseFPPComponent_TempTransformToFPP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.TempTransformFromFPP
// (Final, Native, Protected, BlueprintCallable)

void UBaseFPPComponent::TempTransformFromFPP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.TempTransformFromFPP");

	UBaseFPPComponent_TempTransformFromFPP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.SwitchScopeMeshAnim
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<EScopeMeshAnimType> Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::SwitchScopeMeshAnim(TEnumAsByte<EScopeMeshAnimType> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.SwitchScopeMeshAnim");

	UBaseFPPComponent_SwitchScopeMeshAnim_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.SwitchPerson
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<EPlayerCameraMode> Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::SwitchPerson(TEnumAsByte<EPlayerCameraMode> Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.SwitchPerson");

	UBaseFPPComponent_SwitchPerson_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.StopScopeOut
// (Event, Protected, BlueprintEvent)

void UBaseFPPComponent::StopScopeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.StopScopeOut");

	UBaseFPPComponent_StopScopeOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.StopScopeIn
// (Event, Protected, BlueprintEvent)

void UBaseFPPComponent::StopScopeIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.StopScopeIn");

	UBaseFPPComponent_StopScopeIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.SetTagCulling
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           IsUse                          (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::SetTagCulling(bool IsUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.SetTagCulling");

	UBaseFPPComponent_SetTagCulling_Params params;
	params.IsUse = IsUse;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopingChange
// (Final, Native, Protected)
// Parameters:
// bool                           InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::ScopingChange(bool InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopingChange");

	UBaseFPPComponent_ScopingChange_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeTimelineUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Alpha                          (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::ScopeTimelineUpdate(float Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeTimelineUpdate");

	UBaseFPPComponent_ScopeTimelineUpdate_Params params;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeOutSpeedChange
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerController* Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class UShootWeaponEntity*      entity                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UBaseFPPComponent::ScopeOutSpeedChange(class ASTExtraPlayerController* Controller, class UShootWeaponEntity* entity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeOutSpeedChange");

	UBaseFPPComponent_ScopeOutSpeedChange_Params params;
	params.Controller = Controller;
	params.entity = entity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeOutLogic
// (Final, Native, Protected)

void UBaseFPPComponent::ScopeOutLogic()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeOutLogic");

	UBaseFPPComponent_ScopeOutLogic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeOutEnd
// (Event, Protected, BlueprintEvent)

void UBaseFPPComponent::ScopeOutEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeOutEnd");

	UBaseFPPComponent_ScopeOutEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeOutAfterTimeline
// (Final, Native, Public, BlueprintCallable)

void UBaseFPPComponent::ScopeOutAfterTimeline()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeOutAfterTimeline");

	UBaseFPPComponent_ScopeOutAfterTimeline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Teleport                       (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::ScopeOut(bool Teleport)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeOut");

	UBaseFPPComponent_ScopeOut_Params params;
	params.Teleport = Teleport;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeModeChangeByState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsCamTeleport                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::ScopeModeChangeByState(bool bIsCamTeleport)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeModeChangeByState");

	UBaseFPPComponent_ScopeModeChangeByState_Params params;
	params.bIsCamTeleport = bIsCamTeleport;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeInterrupt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Teleport                       (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::ScopeInterrupt(bool Teleport)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeInterrupt");

	UBaseFPPComponent_ScopeInterrupt_Params params;
	params.Teleport = Teleport;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeInSpeedChange
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerController* Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class UShootWeaponEntity*      entity                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UBaseFPPComponent::ScopeInSpeedChange(class ASTExtraPlayerController* Controller, class UShootWeaponEntity* entity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeInSpeedChange");

	UBaseFPPComponent_ScopeInSpeedChange_Params params;
	params.Controller = Controller;
	params.entity = entity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeInLogic
// (Final, Native, Protected)

void UBaseFPPComponent::ScopeInLogic()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeInLogic");

	UBaseFPPComponent_ScopeInLogic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeInEnd
// (Event, Protected, BlueprintEvent)

void UBaseFPPComponent::ScopeInEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeInEnd");

	UBaseFPPComponent_ScopeInEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeInAfterTimeline
// (Final, Native, Public, BlueprintCallable)

void UBaseFPPComponent::ScopeInAfterTimeline()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeInAfterTimeline");

	UBaseFPPComponent_ScopeInAfterTimeline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ScopeIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Teleport                       (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::ScopeIn(bool Teleport)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ScopeIn");

	UBaseFPPComponent_ScopeIn_Params params;
	params.Teleport = Teleport;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.PlayScopeInTimeline
// (Event, Protected, BlueprintEvent)

void UBaseFPPComponent::PlayScopeInTimeline()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.PlayScopeInTimeline");

	UBaseFPPComponent_PlayScopeInTimeline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.GetSightType
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<ESightType>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ESightType> UBaseFPPComponent::GetSightType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.GetSightType");

	UBaseFPPComponent_GetSightType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BaseFPPComponent.GetScopeFov
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASTExtraShootWeapon*     shootWeapon                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBaseFPPComponent::GetScopeFov(class ASTExtraShootWeapon* shootWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.GetScopeFov");

	UBaseFPPComponent_GetScopeFov_Params params;
	params.shootWeapon = shootWeapon;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BaseFPPComponent.CameraActive
// (Final, Native, Protected)
// Parameters:
// bool                           NewActive                      (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::CameraActive(bool NewActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.CameraActive");

	UBaseFPPComponent_CameraActive_Params params;
	params.NewActive = NewActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.BoltAction
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UBaseFPPComponent::BoltAction(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.BoltAction");

	UBaseFPPComponent_BoltAction_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.AttachToSight
// (Event, Protected, BlueprintEvent)

void UBaseFPPComponent::AttachToSight()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.AttachToSight");

	UBaseFPPComponent_AttachToSight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BaseFPPComponent.ActiveComponentTickable
// (Final, Native, Protected)

void UBaseFPPComponent::ActiveComponentTickable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BaseFPPComponent.ActiveComponentTickable");

	UBaseFPPComponent_ActiveComponentTickable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BattleRoyaleGameMode.SpawnAI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void ABattleRoyaleGameMode::SpawnAI(int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BattleRoyaleGameMode.SpawnAI");

	ABattleRoyaleGameMode_SpawnAI_Params params;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BattleRoyaleGameMode.SetPlane
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Plane                          (Parm, ZeroConstructor, IsPlainOldData)

void ABattleRoyaleGameMode::SetPlane(class AActor* Plane)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BattleRoyaleGameMode.SetPlane");

	ABattleRoyaleGameMode_SetPlane_Params params;
	params.Plane = Plane;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BattleRoyaleGameMode.OnUpdateGamePhase
// (Final, Native, Public, Const)
// Parameters:
// int                            PhaseIndex                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsRelease                     (Parm, ZeroConstructor, IsPlainOldData)

void ABattleRoyaleGameMode::OnUpdateGamePhase(int PhaseIndex, bool bIsRelease)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BattleRoyaleGameMode.OnUpdateGamePhase");

	ABattleRoyaleGameMode_OnUpdateGamePhase_Params params;
	params.PhaseIndex = PhaseIndex;
	params.bIsRelease = bIsRelease;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BattleRoyaleGameMode.GetPlane
// (Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       PC                             (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* ABattleRoyaleGameMode::GetPlane(class APlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BattleRoyaleGameMode.GetPlane");

	ABattleRoyaleGameMode_GetPlane_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BattleRoyaleGameMode.GetChallengeLevelRules
// (Final, Native, Public)
// Parameters:
// class UChallengeLevelRules*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UChallengeLevelRules* ABattleRoyaleGameMode::GetChallengeLevelRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BattleRoyaleGameMode.GetChallengeLevelRules");

	ABattleRoyaleGameMode_GetChallengeLevelRules_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction ShadowTrackerExtra.TslUserWidget.TslUserWidgetDestroyEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UTslUserWidget::TslUserWidgetDestroyEvent__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.TslUserWidget.TslUserWidgetDestroyEvent__DelegateSignature");

	UTslUserWidget_TslUserWidgetDestroyEvent__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslUserWidget.TransferUserFocusThroughReply
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FFocusEvent             AcceptedFocusEvent             (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply             Reply                          (Parm, OutParm, ReferenceParm)
// class UWidget*                 FocusWidget                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           bInAllUsers                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FEventReply             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEventReply UTslUserWidget::STATIC_TransferUserFocusThroughReply(const struct FFocusEvent& AcceptedFocusEvent, class UWidget* FocusWidget, bool bInAllUsers, struct FEventReply* Reply)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.TransferUserFocusThroughReply");

	UTslUserWidget_TransferUserFocusThroughReply_Params params;
	params.AcceptedFocusEvent = AcceptedFocusEvent;
	params.FocusWidget = FocusWidget;
	params.bInAllUsers = bInAllUsers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Reply != nullptr)
		*Reply = params.Reply;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslUserWidget.StopListeningForAllInputAxises
// (Final, Native, Public, BlueprintCallable)

void UTslUserWidget::StopListeningForAllInputAxises()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.StopListeningForAllInputAxises");

	UTslUserWidget_StopListeningForAllInputAxises_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslUserWidget.SetupInputForBlueprint
// (Event, Protected, BlueprintEvent)

void UTslUserWidget::SetupInputForBlueprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.SetupInputForBlueprint");

	UTslUserWidget_SetupInputForBlueprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslUserWidget.NavigateUserFocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*            Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslUserWidget::STATIC_NavigateUserFocus(class ULocalPlayer* Player, class UWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.NavigateUserFocus");

	UTslUserWidget_NavigateUserFocus_Params params;
	params.Player = Player;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslUserWidget.ListenForInputAxis
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bConsume                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate         Callback                       (Parm, ZeroConstructor)

void UTslUserWidget::ListenForInputAxis(const struct FName& AxisName, float Scale, bool bConsume, const struct FScriptDelegate& Callback)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.ListenForInputAxis");

	UTslUserWidget_ListenForInputAxis_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;
	params.bConsume = bConsume;
	params.Callback = Callback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslUserWidget.GetTslGameUserSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTslGameUserSettings*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTslGameUserSettings* UTslUserWidget::GetTslGameUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.GetTslGameUserSettings");

	UTslUserWidget_GetTslGameUserSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslUserWidget.GetRawKeyValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    InKey                          (Parm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslUserWidget::GetRawKeyValue(const struct FKey& InKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.GetRawKeyValue");

	UTslUserWidget_GetRawKeyValue_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslUserWidget.GetAxisMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslUserWidget::GetAxisMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.GetAxisMultiplier");

	UTslUserWidget_GetAxisMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslUserWidget.ContainUserFocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*            Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslUserWidget::STATIC_ContainUserFocus(class ULocalPlayer* Player, class UWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.ContainUserFocus");

	UTslUserWidget_ContainUserFocus_Params params;
	params.Player = Player;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslUserWidget.ContainOwnerUserFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslUserWidget::ContainOwnerUserFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.ContainOwnerUserFocus");

	UTslUserWidget_ContainOwnerUserFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslUserWidget.ClearUserFocus
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*            Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslUserWidget::STATIC_ClearUserFocus(class ULocalPlayer* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslUserWidget.ClearUserFocus");

	UTslUserWidget_ClearUserFocus_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UmgBaseWidget.RuntimeInitBP
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void UUmgBaseWidget::RuntimeInitBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UmgBaseWidget.RuntimeInitBP");

	UUmgBaseWidget_RuntimeInitBP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UmgBaseWidget.IsMouseOn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUmgBaseWidget::IsMouseOn()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UmgBaseWidget.IsMouseOn");

	UUmgBaseWidget_IsMouseOn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UmgBaseWidget.HandleMainPrepass
// (Native, Public)
// Parameters:
// class UWidget*                 Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUmgBaseWidget::HandleMainPrepass(class UWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UmgBaseWidget.HandleMainPrepass");

	UUmgBaseWidget_HandleMainPrepass_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UmgBaseWidget.CheckWantRequestRender
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUmgBaseWidget::CheckWantRequestRender()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UmgBaseWidget.CheckWantRequestRender");

	UUmgBaseWidget_CheckWantRequestRender_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BulletHitInfoUploadComponent.HandleOnWeaponStopFire
// (Final, Native, Protected)

void UBulletHitInfoUploadComponent::HandleOnWeaponStopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BulletHitInfoUploadComponent.HandleOnWeaponStopFire");

	UBulletHitInfoUploadComponent_HandleOnWeaponStopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BulletHitInfoUploadComponent.HandleOnWeaponStartFire
// (Final, Native, Protected)

void UBulletHitInfoUploadComponent::HandleOnWeaponStartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BulletHitInfoUploadComponent.HandleOnWeaponStartFire");

	UBulletHitInfoUploadComponent_HandleOnWeaponStartFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BulletHitInfoUploadComponent.AddHitData
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FBulletHitInfoUploadData Data                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FLocalShootHitData      ShootData                      (ConstParm, Parm, OutParm, ReferenceParm)

void UBulletHitInfoUploadComponent::AddHitData(const struct FBulletHitInfoUploadData& Data, const struct FLocalShootHitData& ShootData)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BulletHitInfoUploadComponent.AddHitData");

	UBulletHitInfoUploadComponent_AddHitData_Params params;
	params.Data = Data;
	params.ShootData = ShootData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BulletMovementComponent.ResumeMoveAfterImpactWithNoLost
// (Final, Native, Public, BlueprintCallable)

void UBulletMovementComponent::ResumeMoveAfterImpactWithNoLost()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BulletMovementComponent.ResumeMoveAfterImpactWithNoLost");

	UBulletMovementComponent_ResumeMoveAfterImpactWithNoLost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BulletMovementComponent.ForceStop
// (Final, Native, Public, BlueprintCallable)

void UBulletMovementComponent::ForceStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BulletMovementComponent.ForceStop");

	UBulletMovementComponent_ForceStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BulletTrackComponent.OnWeaponStopFire
// (Final, Native, Public, BlueprintCallable)

void UBulletTrackComponent::OnWeaponStopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BulletTrackComponent.OnWeaponStopFire");

	UBulletTrackComponent_OnWeaponStopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BulletTrackComponent.OnWeaponStartFire
// (Final, Native, Public, BlueprintCallable)

void UBulletTrackComponent::OnWeaponStartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BulletTrackComponent.OnWeaponStartFire");

	UBulletTrackComponent_OnWeaponStartFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BulletTrackComponent.OnWeaponShoot
// (Final, Native, Public, BlueprintCallable)

void UBulletTrackComponent::OnWeaponShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BulletTrackComponent.OnWeaponShoot");

	UBulletTrackComponent_OnWeaponShoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.BulletTrackComponent.GetCurRecoilInfo
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UBulletTrackComponent::GetCurRecoilInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BulletTrackComponent.GetCurRecoilInfo");

	UBulletTrackComponent_GetCurRecoilInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.BulletTrackComponent.GetCurDeviation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UBulletTrackComponent::GetCurDeviation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.BulletTrackComponent.GetCurDeviation");

	UBulletTrackComponent_GetCurDeviation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CameraSettingComponentFromBP.SaveCurCameraSetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USpringArmComponent*     SpringArm                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCameraSettingComponentFromBP::SaveCurCameraSetting(class USpringArmComponent* SpringArm)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CameraSettingComponentFromBP.SaveCurCameraSetting");

	UCameraSettingComponentFromBP_SaveCurCameraSetting_Params params;
	params.SpringArm = SpringArm;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CameraSettingComponentFromBP.LerpCameraSettings
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          LerpAlpha                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FCameraSettings         CameraSetting                  (Parm, OutParm)
// class USpringArmComponent*     SpringArm                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCameraSettingComponentFromBP::LerpCameraSettings(float LerpAlpha, class USpringArmComponent* SpringArm, struct FCameraSettings* CameraSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CameraSettingComponentFromBP.LerpCameraSettings");

	UCameraSettingComponentFromBP_LerpCameraSettings_Params params;
	params.LerpAlpha = LerpAlpha;
	params.SpringArm = SpringArm;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (CameraSetting != nullptr)
		*CameraSetting = params.CameraSetting;
}


// Function ShadowTrackerExtra.ChallengeLevelRules.SpawnLevelDirector
// (Native, Public)
// Parameters:
// class UClass*                  LevelDirectorClass             (Parm, ZeroConstructor, IsPlainOldData)

void UChallengeLevelRules::SpawnLevelDirector(class UClass* LevelDirectorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChallengeLevelRules.SpawnLevelDirector");

	UChallengeLevelRules_SpawnLevelDirector_Params params;
	params.LevelDirectorClass = LevelDirectorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChallengeLevelRules.OnReceiveTriggerMsg
// (Native, Public)
// Parameters:
// class UTriggerAction*          TriggerAction                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Msg                            (Parm, ZeroConstructor)

void UChallengeLevelRules::OnReceiveTriggerMsg(class UTriggerAction* TriggerAction, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChallengeLevelRules.OnReceiveTriggerMsg");

	UChallengeLevelRules_OnReceiveTriggerMsg_Params params;
	params.TriggerAction = TriggerAction;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChallengeLevelRules.InitLevel
// (Native, Public)

void UChallengeLevelRules::InitLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChallengeLevelRules.InitLevel");

	UChallengeLevelRules_InitLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.SetSkinMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            slotID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::SetSkinMaterial(int slotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.SetSkinMaterial");

	UCharacterAvatarComponent_SetSkinMaterial_Params params;
	params.slotID = slotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.SetNormalMaterial
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FMeshPackage            meshPack                       (Parm, OutParm)
// class UMeshComponent*          meshComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            slotID                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::SetNormalMaterial(class UMeshComponent* meshComp, int slotID, struct FMeshPackage* meshPack)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.SetNormalMaterial");

	UCharacterAvatarComponent_SetNormalMaterial_Params params;
	params.meshComp = meshComp;
	params.slotID = slotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (meshPack != nullptr)
		*meshPack = params.meshPack;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.SetBodySuitsMaterial
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FMeshPackage            meshPack                       (Parm, OutParm)
// class UMeshComponent*          meshComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::SetBodySuitsMaterial(class UMeshComponent* meshComp, struct FMeshPackage* meshPack)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.SetBodySuitsMaterial");

	UCharacterAvatarComponent_SetBodySuitsMaterial_Params params;
	params.meshComp = meshComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (meshPack != nullptr)
		*meshPack = params.meshPack;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.SetAvatarVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAvatarSlotType                slotType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsForCE                        (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::SetAvatarVisibility(EAvatarSlotType slotType, bool visible, bool IsForCE)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.SetAvatarVisibility");

	UCharacterAvatarComponent_SetAvatarVisibility_Params params;
	params.slotType = slotType;
	params.visible = visible;
	params.IsForCE = IsForCE;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.SetAvatarGender
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            AGender                        (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::SetAvatarGender(int AGender)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.SetAvatarGender");

	UCharacterAvatarComponent_SetAvatarGender_Params params;
	params.AGender = AGender;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.SetAllMeshCollisionState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsEnable                       (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::SetAllMeshCollisionState(bool IsEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.SetAllMeshCollisionState");

	UCharacterAvatarComponent_SetAllMeshCollisionState_Params params;
	params.IsEnable = IsEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.RemoveSyncSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::RemoveSyncSlot(int Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.RemoveSyncSlot");

	UCharacterAvatarComponent_RemoveSyncSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.RefreshAvatar
// (Final, Native, Public, BlueprintCallable)

void UCharacterAvatarComponent::RefreshAvatar()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.RefreshAvatar");

	UCharacterAvatarComponent_RefreshAvatar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.PutOnEquipmentByItemHandle
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMesh*           skMesh                         (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             stMesh                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::PutOnEquipmentByItemHandle(class UBattleItemHandleBase* ItemHandle, class USkeletalMesh* skMesh, class UStaticMesh* stMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.PutOnEquipmentByItemHandle");

	UCharacterAvatarComponent_PutOnEquipmentByItemHandle_Params params;
	params.ItemHandle = ItemHandle;
	params.skMesh = skMesh;
	params.stMesh = stMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.OnRep_SetDefaultCfg
// (Final, Native, Public)

void UCharacterAvatarComponent::OnRep_SetDefaultCfg()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.OnRep_SetDefaultCfg");

	UCharacterAvatarComponent_OnRep_SetDefaultCfg_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.OnRep_EquipParachute
// (Final, Native, Public)

void UCharacterAvatarComponent::OnRep_EquipParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.OnRep_EquipParachute");

	UCharacterAvatarComponent_OnRep_EquipParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.OnRep_AvatarMeshChanged
// (Final, Native, Public)

void UCharacterAvatarComponent::OnRep_AvatarMeshChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.OnRep_AvatarMeshChanged");

	UCharacterAvatarComponent_OnRep_AvatarMeshChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.OnMeshLoaded
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath         AssetList                      (Parm)
// class UBattleItemHandleBase*   itemHandles                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isReplaced                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::OnMeshLoaded(const struct FSoftObjectPath& AssetList, class UBattleItemHandleBase* itemHandles, bool isReplaced)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.OnMeshLoaded");

	UCharacterAvatarComponent_OnMeshLoaded_Params params;
	params.AssetList = AssetList;
	params.itemHandles = itemHandles;
	params.isReplaced = isReplaced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.OnItemHandleLoaded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::OnItemHandleLoaded(const struct FItemDefineID& DefineID, class UBattleItemHandleBase* ItemHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.OnItemHandleLoaded");

	UCharacterAvatarComponent_OnItemHandleLoaded_Params params;
	params.DefineID = DefineID;
	params.ItemHandle = ItemHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.OnDefaultItemLoaded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::OnDefaultItemLoaded(const struct FItemDefineID& DefineID, class UBattleItemHandleBase* ItemHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.OnDefaultItemLoaded");

	UCharacterAvatarComponent_OnDefaultItemLoaded_Params params;
	params.DefineID = DefineID;
	params.ItemHandle = ItemHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.NetSyncDefData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::NetSyncDefData(int Slot, class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.NetSyncDefData");

	UCharacterAvatarComponent_NetSyncDefData_Params params;
	params.Slot = Slot;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.NetSyncData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// ESyncOperation                 Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::NetSyncData(int Slot, ESyncOperation Type, class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.NetSyncData");

	UCharacterAvatarComponent_NetSyncData_Params params;
	params.Slot = Slot;
	params.Type = Type;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.NetApplyHeadMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::NetApplyHeadMesh(class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.NetApplyHeadMesh");

	UCharacterAvatarComponent_NetApplyHeadMesh_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.LoadMeshsAsync
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   handleList                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           needDirectLoad                 (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::LoadMeshsAsync(class UBattleItemHandleBase* handleList, bool needDirectLoad)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.LoadMeshsAsync");

	UCharacterAvatarComponent_LoadMeshsAsync_Params params;
	params.handleList = handleList;
	params.needDirectLoad = needDirectLoad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.IsNeedReplaced
// (Native, Protected, BlueprintCallable)
// Parameters:
// class UBackpackAvatarHandle*   doReplaceHandle                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::IsNeedReplaced(class UBackpackAvatarHandle* doReplaceHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.IsNeedReplaced");

	UCharacterAvatarComponent_IsNeedReplaced_Params params;
	params.doReplaceHandle = doReplaceHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.InitMasterComponent
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            AGender                        (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::InitMasterComponent(int AGender)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.InitMasterComponent");

	UCharacterAvatarComponent_InitMasterComponent_Params params;
	params.AGender = AGender;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.InitialAvatarParam
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            AGender                        (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::InitialAvatarParam(int AGender)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.InitialAvatarParam");

	UCharacterAvatarComponent_InitialAvatarParam_Params params;
	params.AGender = AGender;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.InitDefaultMesh
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::InitDefaultMesh(class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.InitDefaultMesh");

	UCharacterAvatarComponent_InitDefaultMesh_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.InitDefaultAvatarByResID
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            avatarGender                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            Head                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            Hair                           (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::InitDefaultAvatarByResID(int avatarGender, int Head, int Hair)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.InitDefaultAvatarByResID");

	UCharacterAvatarComponent_InitDefaultAvatarByResID_Params params;
	params.avatarGender = avatarGender;
	params.Head = Head;
	params.Hair = Hair;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.InitDefaultAvatar
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::InitDefaultAvatar(class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.InitDefaultAvatar");

	UCharacterAvatarComponent_InitDefaultAvatar_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.InitBodyMeshByHead
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            Head                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::InitBodyMeshByHead(int Head)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.InitBodyMeshByHead");

	UCharacterAvatarComponent_InitBodyMeshByHead_Params params;
	params.Head = Head;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.GetReplacedMeshResRef
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UBackpackAvatarHandle*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FSoftObjectPath         AssetRef                       (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::GetReplacedMeshResRef(class UBackpackAvatarHandle* Handle, struct FSoftObjectPath* AssetRef)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.GetReplacedMeshResRef");

	UCharacterAvatarComponent_GetReplacedMeshResRef_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AssetRef != nullptr)
		*AssetRef = params.AssetRef;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.GetMeshResRef
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UBackpackAvatarHandle*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FSoftObjectPath         AssetRef                       (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::GetMeshResRef(class UBackpackAvatarHandle* Handle, struct FSoftObjectPath* AssetRef)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.GetMeshResRef");

	UCharacterAvatarComponent_GetMeshResRef_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AssetRef != nullptr)
		*AssetRef = params.AssetRef;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.ClearMeshBySlot
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           putDefault                     (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::ClearMeshBySlot(int Slot, bool putDefault)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.ClearMeshBySlot");

	UCharacterAvatarComponent_ClearMeshBySlot_Params params;
	params.Slot = Slot;
	params.putDefault = putDefault;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.CheckShouldEquipDefaultItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::CheckShouldEquipDefaultItem(int Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.CheckShouldEquipDefaultItem");

	UCharacterAvatarComponent_CheckShouldEquipDefaultItem_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.CheckIsDefaultAvatar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           definedID                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::CheckIsDefaultAvatar(const struct FItemDefineID& definedID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.CheckIsDefaultAvatar");

	UCharacterAvatarComponent_CheckIsDefaultAvatar_Params params;
	params.definedID = definedID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.CheckAlreadyEquipped
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            slotID                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::CheckAlreadyEquipped(int slotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.CheckAlreadyEquipped");

	UCharacterAvatarComponent_CheckAlreadyEquipped_Params params;
	params.slotID = slotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.ApplyStaticMeshByID
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             pSM                            (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       Mat                            (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::ApplyStaticMeshByID(int Slot, class UStaticMesh* pSM, class UMaterialInstance* Mat, class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.ApplyStaticMeshByID");

	UCharacterAvatarComponent_ApplyStaticMeshByID_Params params;
	params.Slot = Slot;
	params.pSM = pSM;
	params.Mat = Mat;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.ApplySkeletalMeshByID
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMesh*           Mesh                           (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       Mat                            (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterAvatarComponent::ApplySkeletalMeshByID(int Slot, class USkeletalMesh* Mesh, class UMaterialInstance* Mat, class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.ApplySkeletalMeshByID");

	UCharacterAvatarComponent_ApplySkeletalMeshByID_Params params;
	params.Slot = Slot;
	params.Mesh = Mesh;
	params.Mat = Mat;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.ApplyMeshCompCollision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            slotID                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterAvatarComponent::ApplyMeshCompCollision(int slotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.ApplyMeshCompCollision");

	UCharacterAvatarComponent_ApplyMeshCompCollision_Params params;
	params.slotID = slotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.ApplyMaterial
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)
// class UMeshComponent*          meshComp                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UCharacterAvatarComponent::ApplyMaterial(class UBattleItemHandleBase* ItemHandle, class UMeshComponent* meshComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.ApplyMaterial");

	UCharacterAvatarComponent_ApplyMaterial_Params params;
	params.ItemHandle = ItemHandle;
	params.meshComp = meshComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterAvatarComponent.ApplyAnimation
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FMeshPackage            meshPack                       (Parm, OutParm)

void UCharacterAvatarComponent::ApplyAnimation(int Slot, struct FMeshPackage* meshPack)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterAvatarComponent.ApplyAnimation");

	UCharacterAvatarComponent_ApplyAnimation_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (meshPack != nullptr)
		*meshPack = params.meshPack;
}


// Function ShadowTrackerExtra.CharacterInterpRotationComp.BeginFire
// (Final, Native, Protected)
// Parameters:
// class ASTExtraWeapon*          Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterInterpRotationComp::BeginFire(class ASTExtraWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterInterpRotationComp.BeginFire");

	UCharacterInterpRotationComp_BeginFire_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.VerifyClientTimeStamp
// (Final, Native, Public)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCharacterParachuteComponent::VerifyClientTimeStamp(float Timestamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.VerifyClientTimeStamp");

	UCharacterParachuteComponent_VerifyClientTimeStamp_Params params;
	params.Timestamp = Timestamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.UpdateRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ThrottleInput                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          SteerInput                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EParachuteState>   State                          (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterParachuteComponent::UpdateRotation(float DeltaTime, float ThrottleInput, float SteerInput, TEnumAsByte<EParachuteState> State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.UpdateRotation");

	UCharacterParachuteComponent_UpdateRotation_Params params;
	params.DeltaTime = DeltaTime;
	params.ThrottleInput = ThrottleInput;
	params.SteerInput = SteerInput;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.UpdateParachuteOpenedRotation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          InputForward                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          InputRight                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterParachuteComponent::UpdateParachuteOpenedRotation(float InputForward, float InputRight, float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.UpdateParachuteOpenedRotation");

	UCharacterParachuteComponent_UpdateParachuteOpenedRotation_Params params;
	params.InputForward = InputForward;
	params.InputRight = InputRight;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.UpdateFreeFallRotation
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          InputForward                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          InputRight                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterParachuteComponent::UpdateFreeFallRotation(float InputForward, float InputRight, float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.UpdateFreeFallRotation");

	UCharacterParachuteComponent_UpdateFreeFallRotation_Params params;
	params.InputForward = InputForward;
	params.InputRight = InputRight;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.TickParachuteComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ThrottleInput                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          SteeringInput                  (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterParachuteComponent::TickParachuteComponent(float DeltaTime, float ThrottleInput, float SteeringInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.TickParachuteComponent");

	UCharacterParachuteComponent_TickParachuteComponent_Params params;
	params.DeltaTime = DeltaTime;
	params.ThrottleInput = ThrottleInput;
	params.SteeringInput = SteeringInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.StopParachute
// (Final, Native, Public, BlueprintCallable)

void UCharacterParachuteComponent::StopParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.StopParachute");

	UCharacterParachuteComponent_StopParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.StartParachute
// (Final, Native, Public, BlueprintCallable)

void UCharacterParachuteComponent::StartParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.StartParachute");

	UCharacterParachuteComponent_StartParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.ResetVelocity
// (Final, Native, Protected, BlueprintCallable)

void UCharacterParachuteComponent::ResetVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.ResetVelocity");

	UCharacterParachuteComponent_ResetVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.PostNetReceiveNewState
// (Final, Native, Public)

void UCharacterParachuteComponent::PostNetReceiveNewState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.PostNetReceiveNewState");

	UCharacterParachuteComponent_PostNetReceiveNewState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.OnPreReconnectOnServer
// (Final, Native, Public)

void UCharacterParachuteComponent::OnPreReconnectOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.OnPreReconnectOnServer");

	UCharacterParachuteComponent_OnPreReconnectOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.InvalidateAdjustFollowerLocation
// (Final, Native, Public)

void UCharacterParachuteComponent::InvalidateAdjustFollowerLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.InvalidateAdjustFollowerLocation");

	UCharacterParachuteComponent_InvalidateAdjustFollowerLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.GetReplicatedRightInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterParachuteComponent::GetReplicatedRightInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.GetReplicatedRightInput");

	UCharacterParachuteComponent_GetReplicatedRightInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.GetReplicatedForwardInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterParachuteComponent::GetReplicatedForwardInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.GetReplicatedForwardInput");

	UCharacterParachuteComponent_GetReplicatedForwardInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.CalParachuteOpenedVelocity
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// float                          InputForward                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          InputRight                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UCharacterParachuteComponent::CalParachuteOpenedVelocity(float InputForward, float InputRight, float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.CalParachuteOpenedVelocity");

	UCharacterParachuteComponent_CalParachuteOpenedVelocity_Params params;
	params.InputForward = InputForward;
	params.InputRight = InputRight;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.CalFreeFallVelocity
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// float                          InputForward                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          InputRight                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UCharacterParachuteComponent::CalFreeFallVelocity(float InputForward, float InputRight, float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.CalFreeFallVelocity");

	UCharacterParachuteComponent_CalFreeFallVelocity_Params params;
	params.InputForward = InputForward;
	params.InputRight = InputRight;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.AngleInterpTo
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          Current                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Target                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          Speed                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCharacterParachuteComponent::AngleInterpTo(float Current, float Target, float DeltaTime, float Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.AngleInterpTo");

	UCharacterParachuteComponent_AngleInterpTo_Params params;
	params.Current = Current;
	params.Target = Target;
	params.DeltaTime = DeltaTime;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CharacterParachuteComponent.AdjustFollowerLocation
// (Final, Native, Public)

void UCharacterParachuteComponent::AdjustFollowerLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterParachuteComponent.AdjustFollowerLocation");

	UCharacterParachuteComponent_AdjustFollowerLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ViewModeStudio.SetViewModeAbleActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void AViewModeStudio::SetViewModeAbleActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ViewModeStudio.SetViewModeAbleActor");

	AViewModeStudio_SetViewModeAbleActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ViewModeStudio.SetTextureRenderTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*  NewTextureTarget               (Parm, ZeroConstructor, IsPlainOldData)

void AViewModeStudio::SetTextureRenderTarget(class UTextureRenderTarget2D* NewTextureTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ViewModeStudio.SetTextureRenderTarget");

	AViewModeStudio_SetTextureRenderTarget_Params params;
	params.NewTextureTarget = NewTextureTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ViewModeStudio.SetCameraSocketName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   NewCameraSocketName            (Parm, ZeroConstructor, IsPlainOldData)

void AViewModeStudio::SetCameraSocketName(const struct FName& NewCameraSocketName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ViewModeStudio.SetCameraSocketName");

	AViewModeStudio_SetCameraSocketName_Params params;
	params.NewCameraSocketName = NewCameraSocketName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ViewModeStudio.AddYaw
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AViewModeStudio::AddYaw(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ViewModeStudio.AddYaw");

	AViewModeStudio_AddYaw_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ViewModeStudio.AddViewSlaveLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AViewModeStudio::AddViewSlaveLocation(float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ViewModeStudio.AddViewSlaveLocation");

	AViewModeStudio_AddViewSlaveLocation_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ViewModeStudio.AddViewDistance
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AViewModeStudio::AddViewDistance(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ViewModeStudio.AddViewDistance");

	AViewModeStudio_AddViewDistance_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ViewModeStudio.AddRoll
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AViewModeStudio::AddRoll(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ViewModeStudio.AddRoll");

	AViewModeStudio_AddRoll_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ViewModeStudio.AddPitch
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AViewModeStudio::AddPitch(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ViewModeStudio.AddPitch");

	AViewModeStudio_AddPitch_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterStudio.UpdateComponentToWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*          Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACharacterStudio::UpdateComponentToWorld(class UMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterStudio.UpdateComponentToWorld");

	ACharacterStudio_UpdateComponentToWorld_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterStudio.SetMeshTransform
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UMeshComponent*          Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ACharacterStudio::SetMeshTransform(class UMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterStudio.SetMeshTransform");

	ACharacterStudio_SetMeshTransform_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterStudio.SetItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASTExtraWeapon*          Item                           (Parm, ZeroConstructor, IsPlainOldData)

void ACharacterStudio::SetItem(class ASTExtraWeapon* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterStudio.SetItem");

	ACharacterStudio_SetItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.UpdateOwnerClientCreateWeapon
// (Final, Native, Protected)

void UWeaponManagerComponent::UpdateOwnerClientCreateWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.UpdateOwnerClientCreateWeapon");

	UWeaponManagerComponent_UpdateOwnerClientCreateWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.SwitchWeaponBySlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseAnimation                  (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponManagerComponent::SwitchWeaponBySlot(ESurviveWeaponPropSlot Slot, bool bUseAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.SwitchWeaponBySlot");

	UWeaponManagerComponent_SwitchWeaponBySlot_Params params;
	params.Slot = Slot;
	params.bUseAnimation = bUseAnimation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.SwitchWeaponByLogicSocket_IdleToBackpackFinished
// (Final, Native, Protected)

void UWeaponManagerComponent::SwitchWeaponByLogicSocket_IdleToBackpackFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.SwitchWeaponByLogicSocket_IdleToBackpackFinished");

	UWeaponManagerComponent_SwitchWeaponByLogicSocket_IdleToBackpackFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.SwapWeaponByPropSlotFinishedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESurviveWeaponPropSlot         Slot1                          (Parm, ZeroConstructor, IsPlainOldData)
// ESurviveWeaponPropSlot         Slot2                          (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponManagerComponent::SwapWeaponByPropSlotFinishedDelegate__DelegateSignature(ESurviveWeaponPropSlot Slot1, ESurviveWeaponPropSlot Slot2)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.SwapWeaponByPropSlotFinishedDelegate__DelegateSignature");

	UWeaponManagerComponent_SwapWeaponByPropSlotFinishedDelegate__DelegateSignature_Params params;
	params.Slot1 = Slot1;
	params.Slot2 = Slot2;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.SimulatedWeaponChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UWeaponManagerComponent::SimulatedWeaponChangedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.SimulatedWeaponChangedDelegate__DelegateSignature");

	UWeaponManagerComponent_SimulatedWeaponChangedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.OnRep_WeaponSystemDataOnSimulateMeleeSlot
// (Final, Native, Protected)

void UWeaponManagerComponent::OnRep_WeaponSystemDataOnSimulateMeleeSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.OnRep_WeaponSystemDataOnSimulateMeleeSlot");

	UWeaponManagerComponent_OnRep_WeaponSystemDataOnSimulateMeleeSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.OnRep_WeaponSystemDataOnSimulateClientSubSlot
// (Final, Native, Protected)

void UWeaponManagerComponent::OnRep_WeaponSystemDataOnSimulateClientSubSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.OnRep_WeaponSystemDataOnSimulateClientSubSlot");

	UWeaponManagerComponent_OnRep_WeaponSystemDataOnSimulateClientSubSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.OnRep_WeaponSystemDataOnSimulateClientSlot2
// (Final, Native, Protected)

void UWeaponManagerComponent::OnRep_WeaponSystemDataOnSimulateClientSlot2()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.OnRep_WeaponSystemDataOnSimulateClientSlot2");

	UWeaponManagerComponent_OnRep_WeaponSystemDataOnSimulateClientSlot2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.OnRep_WeaponSystemDataOnSimulateClientSlot1
// (Final, Native, Protected)

void UWeaponManagerComponent::OnRep_WeaponSystemDataOnSimulateClientSlot1()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.OnRep_WeaponSystemDataOnSimulateClientSlot1");

	UWeaponManagerComponent_OnRep_WeaponSystemDataOnSimulateClientSlot1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.OnRep_CurrentWeaponReplicated
// (Final, Native, Protected)

void UWeaponManagerComponent::OnRep_CurrentWeaponReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.OnRep_CurrentWeaponReplicated");

	UWeaponManagerComponent_OnRep_CurrentWeaponReplicated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.OnReconnectOnServer
// (Native, Protected, BlueprintCallable)

void UWeaponManagerComponent::OnReconnectOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.OnReconnectOnServer");

	UWeaponManagerComponent_OnReconnectOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.OnReconnectOnClient
// (Native, Protected)

void UWeaponManagerComponent::OnReconnectOnClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.OnReconnectOnClient");

	UWeaponManagerComponent_OnReconnectOnClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.LogInventoryDataInfo
// (Final, Native, Public, BlueprintCallable)

void UWeaponManagerComponent::LogInventoryDataInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.LogInventoryDataInfo");

	UWeaponManagerComponent_LogInventoryDataInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.LocalSwapWeaponByPropSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESurviveWeaponPropSlot         Slot1                          (Parm, ZeroConstructor, IsPlainOldData)
// ESurviveWeaponPropSlot         Slot2                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponManagerComponent::LocalSwapWeaponByPropSlot(ESurviveWeaponPropSlot Slot1, ESurviveWeaponPropSlot Slot2, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.LocalSwapWeaponByPropSlot");

	UWeaponManagerComponent_LocalSwapWeaponByPropSlot_Params params;
	params.Slot1 = Slot1;
	params.Slot2 = Slot2;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.LocalForceFinishSwitchWeapon
// (Final, Native, Public, BlueprintCallable)

void UWeaponManagerComponent::LocalForceFinishSwitchWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.LocalForceFinishSwitchWeapon");

	UWeaponManagerComponent_LocalForceFinishSwitchWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.LocalEquipWeaponFromBackpackFinishedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UWeaponManagerComponent::LocalEquipWeaponFromBackpackFinishedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.LocalEquipWeaponFromBackpackFinishedDelegate__DelegateSignature");

	UWeaponManagerComponent_LocalEquipWeaponFromBackpackFinishedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.LocalEquipWeaponFromBackpackFinishedCallback
// (Final, Native, Protected)

void UWeaponManagerComponent::LocalEquipWeaponFromBackpackFinishedCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.LocalEquipWeaponFromBackpackFinishedCallback");

	UWeaponManagerComponent_LocalEquipWeaponFromBackpackFinishedCallback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.LocalBackpackCurerrentWeaponFinishedCallback
// (Final, Native, Protected)

void UWeaponManagerComponent::LocalBackpackCurerrentWeaponFinishedCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.LocalBackpackCurerrentWeaponFinishedCallback");

	UWeaponManagerComponent_LocalBackpackCurerrentWeaponFinishedCallback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.LocalBackpackCurerrentWeaponFinishDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UWeaponManagerComponent::LocalBackpackCurerrentWeaponFinishDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.LocalBackpackCurerrentWeaponFinishDelegate__DelegateSignature");

	UWeaponManagerComponent_LocalBackpackCurerrentWeaponFinishDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetTargetPropSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESurviveWeaponPropSlot         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESurviveWeaponPropSlot UWeaponManagerComponent::GetTargetPropSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetTargetPropSlot");

	UWeaponManagerComponent_GetTargetPropSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetPropSlotByLogicSocket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   LogicSocket                    (Parm, ZeroConstructor, IsPlainOldData)
// ESurviveWeaponPropSlot         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESurviveWeaponPropSlot UWeaponManagerComponent::GetPropSlotByLogicSocket(const struct FName& LogicSocket)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetPropSlotByLogicSocket");

	UWeaponManagerComponent_GetPropSlotByLogicSocket_Params params;
	params.LogicSocket = LogicSocket;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetPrevWeaponPropSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESurviveWeaponPropSlot         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESurviveWeaponPropSlot UWeaponManagerComponent::GetPrevWeaponPropSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetPrevWeaponPropSlot");

	UWeaponManagerComponent_GetPrevWeaponPropSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetNextWeaponPropSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESurviveWeaponPropSlot         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESurviveWeaponPropSlot UWeaponManagerComponent::GetNextWeaponPropSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetNextWeaponPropSlot");

	UWeaponManagerComponent_GetNextWeaponPropSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetLogicSocketBySlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UWeaponManagerComponent::GetLogicSocketBySlot(ESurviveWeaponPropSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetLogicSocketBySlot");

	UWeaponManagerComponent_GetLogicSocketBySlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetInventoryWeaponByPropSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraWeapon*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraWeapon* UWeaponManagerComponent::GetInventoryWeaponByPropSlot(ESurviveWeaponPropSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetInventoryWeaponByPropSlot");

	UWeaponManagerComponent_GetInventoryWeaponByPropSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetInventoryWeaponByLogicSocket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   LogicSocket                    (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraWeapon*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraWeapon* UWeaponManagerComponent::GetInventoryWeaponByLogicSocket(const struct FName& LogicSocket)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetInventoryWeaponByLogicSocket");

	UWeaponManagerComponent_GetInventoryWeaponByLogicSocket_Params params;
	params.LogicSocket = LogicSocket;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetGrenadeSpecificSlotNameByWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraWeapon*          Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UWeaponManagerComponent::GetGrenadeSpecificSlotNameByWeapon(class ASTExtraWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetGrenadeSpecificSlotNameByWeapon");

	UWeaponManagerComponent_GetGrenadeSpecificSlotNameByWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetGrenadeDefindIDBySlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   LogicSlot                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FItemDefineID UWeaponManagerComponent::GetGrenadeDefindIDBySlot(const struct FName& LogicSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetGrenadeDefindIDBySlot");

	UWeaponManagerComponent_GetGrenadeDefindIDBySlot_Params params;
	params.LogicSlot = LogicSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetCurrentUsingWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraWeapon*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraWeapon* UWeaponManagerComponent::GetCurrentUsingWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetCurrentUsingWeapon");

	UWeaponManagerComponent_GetCurrentUsingWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetCurrentUsingPropSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESurviveWeaponPropSlot         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESurviveWeaponPropSlot UWeaponManagerComponent::GetCurrentUsingPropSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetCurrentUsingPropSlot");

	UWeaponManagerComponent_GetCurrentUsingPropSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetCurrentUsingLogicSocketOnServer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UWeaponManagerComponent::GetCurrentUsingLogicSocketOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetCurrentUsingLogicSocketOnServer");

	UWeaponManagerComponent_GetCurrentUsingLogicSocketOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetCurrentUsingLogicSocket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UWeaponManagerComponent::GetCurrentUsingLogicSocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetCurrentUsingLogicSocket");

	UWeaponManagerComponent_GetCurrentUsingLogicSocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetBagLevel
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UWeaponManagerComponent::GetBagLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetBagLevel");

	UWeaponManagerComponent_GetBagLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.GetAllInventoryWeaponList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ASTExtraWeapon*>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ASTExtraWeapon*> UWeaponManagerComponent::GetAllInventoryWeaponList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.GetAllInventoryWeaponList");

	UWeaponManagerComponent_GetAllInventoryWeaponList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.ForceBroadcastChangeAllInventoryDataEvent
// (Final, Native, Public, BlueprintCallable)

void UWeaponManagerComponent::ForceBroadcastChangeAllInventoryDataEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.ForceBroadcastChangeAllInventoryDataEvent");

	UWeaponManagerComponent_ForceBroadcastChangeAllInventoryDataEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.EnableAllBroadcast
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponManagerComponent::EnableAllBroadcast(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.EnableAllBroadcast");

	UWeaponManagerComponent_EnableAllBroadcast_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.DeleteGrenadeSlotAndDefindID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   LogicSlot                      (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponManagerComponent::DeleteGrenadeSlotAndDefindID(const struct FName& LogicSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.DeleteGrenadeSlotAndDefindID");

	UWeaponManagerComponent_DeleteGrenadeSlotAndDefindID_Params params;
	params.LogicSlot = LogicSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.DebugReconnectToClientOnServer
// (Final, Native, Public, BlueprintCallable)

void UWeaponManagerComponent::DebugReconnectToClientOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.DebugReconnectToClientOnServer");

	UWeaponManagerComponent_DebugReconnectToClientOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.DebugDisconnetToServerOnClient
// (Final, Native, Public, BlueprintCallable)

void UWeaponManagerComponent::DebugDisconnetToServerOnClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.DebugDisconnetToServerOnClient");

	UWeaponManagerComponent_DebugDisconnetToServerOnClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.ChangeInventoryDataDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESurviveWeaponPropSlot         TargetChangeSlot               (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponManagerComponent::ChangeInventoryDataDelegate__DelegateSignature(ESurviveWeaponPropSlot TargetChangeSlot)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.ChangeInventoryDataDelegate__DelegateSignature");

	UWeaponManagerComponent_ChangeInventoryDataDelegate__DelegateSignature_Params params;
	params.TargetChangeSlot = TargetChangeSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.ChangeCurrentUsingWeaponDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESurviveWeaponPropSlot         TargetChangeSlot               (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponManagerComponent::ChangeCurrentUsingWeaponDelegate__DelegateSignature(ESurviveWeaponPropSlot TargetChangeSlot)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.WeaponManagerComponent.ChangeCurrentUsingWeaponDelegate__DelegateSignature");

	UWeaponManagerComponent_ChangeCurrentUsingWeaponDelegate__DelegateSignature_Params params;
	params.TargetChangeSlot = TargetChangeSlot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponManagerComponent.AddOrSetGrenadeSlotAndDefindID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   LogicSlot                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ID                             (Parm)

void UWeaponManagerComponent::AddOrSetGrenadeSlotAndDefindID(const struct FName& LogicSlot, const struct FItemDefineID& ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponManagerComponent.AddOrSetGrenadeSlotAndDefindID");

	UWeaponManagerComponent_AddOrSetGrenadeSlotAndDefindID_Params params;
	params.LogicSlot = LogicSlot;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterWeaponManagerComponent.UpdateDataWhenBagChangedOnServer
// (Final, Native, Protected)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// EBattleItemOperationType       operationType                  (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void UCharacterWeaponManagerComponent::UpdateDataWhenBagChangedOnServer(const struct FItemDefineID& DefineID, EBattleItemOperationType operationType, unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterWeaponManagerComponent.UpdateDataWhenBagChangedOnServer");

	UCharacterWeaponManagerComponent_UpdateDataWhenBagChangedOnServer_Params params;
	params.DefineID = DefineID;
	params.operationType = operationType;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterWeaponManagerComponent.UpdateDataWhenBagChangedOnAutonomous
// (Final, Native, Protected)

void UCharacterWeaponManagerComponent::UpdateDataWhenBagChangedOnAutonomous()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterWeaponManagerComponent.UpdateDataWhenBagChangedOnAutonomous");

	UCharacterWeaponManagerComponent_UpdateDataWhenBagChangedOnAutonomous_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterWeaponManagerComponent.OnRecoverOnServer
// (Native, Protected)

void UCharacterWeaponManagerComponent::OnRecoverOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterWeaponManagerComponent.OnRecoverOnServer");

	UCharacterWeaponManagerComponent_OnRecoverOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterWeaponManagerComponent.OnReconnectOnServer
// (Native, Protected)

void UCharacterWeaponManagerComponent::OnReconnectOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterWeaponManagerComponent.OnReconnectOnServer");

	UCharacterWeaponManagerComponent_OnReconnectOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterWeaponManagerComponent.OnReconnectOnClient
// (Native, Protected)

void UCharacterWeaponManagerComponent::OnReconnectOnClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterWeaponManagerComponent.OnReconnectOnClient");

	UCharacterWeaponManagerComponent_OnReconnectOnClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterWeaponManagerComponent.OnDisconnectToClientOnServer
// (Final, Native, Protected)

void UCharacterWeaponManagerComponent::OnDisconnectToClientOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterWeaponManagerComponent.OnDisconnectToClientOnServer");

	UCharacterWeaponManagerComponent_OnDisconnectToClientOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CharacterWeaponManagerComponent.GetBagLevel
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UCharacterWeaponManagerComponent::GetBagLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CharacterWeaponManagerComponent.GetBagLevel");

	UCharacterWeaponManagerComponent_GetBagLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.ChasingBar.UpdateCountDownText
// (Event, Public, BlueprintEvent)

void UChasingBar::UpdateCountDownText()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.UpdateCountDownText");

	UChasingBar_UpdateCountDownText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChasingBar.OnPlayerEnterExitBlueCircle
// (Event, Public, BlueprintEvent)

void UChasingBar::OnPlayerEnterExitBlueCircle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.OnPlayerEnterExitBlueCircle");

	UChasingBar_OnPlayerEnterExitBlueCircle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChasingBar.OnCountDownTextInvisible
// (Event, Public, BlueprintEvent)

void UChasingBar::OnCountDownTextInvisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.OnCountDownTextInvisible");

	UChasingBar_OnCountDownTextInvisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChasingBar.IsPlayerOutBlueCircle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   CurPawn                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UChasingBar::IsPlayerOutBlueCircle(class APawn* CurPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.IsPlayerOutBlueCircle");

	UChasingBar_IsPlayerOutBlueCircle_Params params;
	params.CurPawn = CurPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.ChasingBar.IsPlayerInWhiteCircle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   CurPawn                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UChasingBar::IsPlayerInWhiteCircle(class APawn* CurPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.IsPlayerInWhiteCircle");

	UChasingBar_IsPlayerInWhiteCircle_Params params;
	params.CurPawn = CurPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.ChasingBar.IsBlueCircleMoving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UChasingBar::IsBlueCircleMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.IsBlueCircleMoving");

	UChasingBar_IsBlueCircleMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.ChasingBar.IsBlueCircleAppearAndCountDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UChasingBar::IsBlueCircleAppearAndCountDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.IsBlueCircleAppearAndCountDown");

	UChasingBar_IsBlueCircleAppearAndCountDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.ChasingBar.ClearProgressBar
// (Event, Public, BlueprintEvent)

void UChasingBar::ClearProgressBar()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.ClearProgressBar");

	UChasingBar_ClearProgressBar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChasingBar.CleanTheProgressBar
// (Event, Public, BlueprintEvent)

void UChasingBar::CleanTheProgressBar()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.CleanTheProgressBar");

	UChasingBar_CleanTheProgressBar_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChasingBar.CheckToCleanProgress
// (Final, Native, Public, BlueprintCallable)

void UChasingBar::CheckToCleanProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.CheckToCleanProgress");

	UChasingBar_CheckToCleanProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChasingBar.CalPlayerEscapePercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UChasingBar::CalPlayerEscapePercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.CalPlayerEscapePercent");

	UChasingBar_CalPlayerEscapePercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.ChasingBar.BlueCirclePreMoveCountDown
// (Final, Native, Public, BlueprintCallable)

void UChasingBar::BlueCirclePreMoveCountDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChasingBar.BlueCirclePreMoveCountDown");

	UChasingBar_BlueCirclePreMoveCountDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.UpdateQuickItemText
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            msgID                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            resID                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            alternateMsgID                 (Parm, ZeroConstructor, IsPlainOldData)

void UChatComponent::UpdateQuickItemText(int msgID, int resID, int alternateMsgID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.UpdateQuickItemText");

	UChatComponent_UpdateQuickItemText_Params params;
	params.msgID = msgID;
	params.resID = resID;
	params.alternateMsgID = alternateMsgID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.ShowQuickPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void UChatComponent::ShowQuickPanel(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.ShowQuickPanel");

	UChatComponent_ShowQuickPanel_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.ServerSendMsg
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FInGameChatMsg          msgItem                        (ConstParm, Parm, ReferenceParm)

void UChatComponent::ServerSendMsg(const struct FInGameChatMsg& msgItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.ServerSendMsg");

	UChatComponent_ServerSendMsg_Params params;
	params.msgItem = msgItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.SendDirtyFilter
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor)
// struct FString                 Content                        (Parm, ZeroConstructor)
// bool                           isMe                           (Parm, ZeroConstructor, IsPlainOldData)

void UChatComponent::SendDirtyFilter(const struct FString& Name, const struct FString& Content, bool isMe)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.SendDirtyFilter");

	UChatComponent_SendDirtyFilter_Params params;
	params.Name = Name;
	params.Content = Content;
	params.isMe = isMe;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.OnInviteNextBattle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 gid                            (Parm, ZeroConstructor)
// struct FString                 Name                           (Parm, ZeroConstructor)

void UChatComponent::OnInviteNextBattle(const struct FString& gid, const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.OnInviteNextBattle");

	UChatComponent_OnInviteNextBattle_Params params;
	params.gid = gid;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.OnFilterFinish
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 filterText                     (Parm, ZeroConstructor)

void UChatComponent::OnFilterFinish(const struct FString& filterText)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.OnFilterFinish");

	UChatComponent_OnFilterFinish_Params params;
	params.filterText = filterText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.NotifyFriendReplyInvite
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FString                 str_gid                        (Parm, ZeroConstructor)
// struct FString                 sender_name                    (Parm, ZeroConstructor)
// bool                           bReply                         (Parm, ZeroConstructor, IsPlainOldData)

void UChatComponent::NotifyFriendReplyInvite(const struct FString& str_gid, const struct FString& sender_name, bool bReply)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.NotifyFriendReplyInvite");

	UChatComponent_NotifyFriendReplyInvite_Params params;
	params.str_gid = str_gid;
	params.sender_name = sender_name;
	params.bReply = bReply;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.NotifyFriendInvite
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FString                 str_gid                        (Parm, ZeroConstructor)
// struct FString                 sender_name                    (Parm, ZeroConstructor)

void UChatComponent::NotifyFriendInvite(const struct FString& str_gid, const struct FString& sender_name)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.NotifyFriendInvite");

	UChatComponent_NotifyFriendInvite_Params params;
	params.str_gid = str_gid;
	params.sender_name = sender_name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.NotifyFriendChat
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 str_gid                        (Parm, ZeroConstructor)
// struct FString                 sender_name                    (Parm, ZeroConstructor)
// struct FString                 chat_content                   (Parm, ZeroConstructor)
// bool                           self_msg                       (Parm, ZeroConstructor, IsPlainOldData)

void UChatComponent::NotifyFriendChat(const struct FString& str_gid, const struct FString& sender_name, const struct FString& chat_content, bool self_msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.NotifyFriendChat");

	UChatComponent_NotifyFriendChat_Params params;
	params.str_gid = str_gid;
	params.sender_name = sender_name;
	params.chat_content = chat_content;
	params.self_msg = self_msg;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.InviteNextBattleReply
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 gid                            (Parm, ZeroConstructor)
// struct FString                 Name                           (Parm, ZeroConstructor)
// bool                           bReply                         (Parm, ZeroConstructor, IsPlainOldData)

void UChatComponent::InviteNextBattleReply(const struct FString& gid, const struct FString& Name, bool bReply)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.InviteNextBattleReply");

	UChatComponent_InviteNextBattleReply_Params params;
	params.gid = gid;
	params.Name = Name;
	params.bReply = bReply;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.CloseChatHistoryList
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UChatComponent::CloseChatHistoryList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.CloseChatHistoryList");

	UChatComponent_CloseChatHistoryList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.ClientReceiveMsg
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FInGameChatMsg          msgItem                        (ConstParm, Parm, ReferenceParm)
// bool                           isMe                           (Parm, ZeroConstructor, IsPlainOldData)

void UChatComponent::ClientReceiveMsg(const struct FInGameChatMsg& msgItem, bool isMe)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.ClientReceiveMsg");

	UChatComponent_ClientReceiveMsg_Params params;
	params.msgItem = msgItem;
	params.isMe = isMe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.AddQuickAudio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*           audio                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            chatID                         (Parm, ZeroConstructor, IsPlainOldData)

void UChatComponent::AddQuickAudio(class UAkAudioEvent* audio, int chatID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.AddQuickAudio");

	UChatComponent_AddQuickAudio_Params params;
	params.audio = audio;
	params.chatID = chatID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.AddOneMsgToUI1
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor)
// struct FString                 Content                        (Parm, ZeroConstructor)
// int                            msgID                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isMe                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           PlaySound                      (Parm, ZeroConstructor, IsPlainOldData)

void UChatComponent::AddOneMsgToUI1(const struct FString& Name, const struct FString& Content, int msgID, bool isMe, bool PlaySound)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.AddOneMsgToUI1");

	UChatComponent_AddOneMsgToUI1_Params params;
	params.Name = Name;
	params.Content = Content;
	params.msgID = msgID;
	params.isMe = isMe;
	params.PlaySound = PlaySound;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ChatComponent.AddFriendChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 gid                            (Parm, ZeroConstructor)
// struct FString                 Name                           (Parm, ZeroConstructor)
// struct FString                 Content                        (Parm, ZeroConstructor)
// bool                           isSelf                         (Parm, ZeroConstructor, IsPlainOldData)

void UChatComponent::AddFriendChat(const struct FString& gid, const struct FString& Name, const struct FString& Content, bool isSelf)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ChatComponent.AddFriendChat");

	UChatComponent_AddFriendChat_Params params;
	params.gid = gid;
	params.Name = Name;
	params.Content = Content;
	params.isSelf = isSelf;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CircleMgrComponent.SetGMCicleTime
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// float                          CDTime                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          LastTime                       (Parm, ZeroConstructor, IsPlainOldData)

void UCircleMgrComponent::SetGMCicleTime(float CDTime, float LastTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CircleMgrComponent.SetGMCicleTime");

	UCircleMgrComponent_SetGMCicleTime_Params params;
	params.CDTime = CDTime;
	params.LastTime = LastTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CircleMgrComponent.RetriveCircleInfo
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FReConnectGameStateInfo CurInfo                        (Parm, OutParm)

void UCircleMgrComponent::RetriveCircleInfo(struct FReConnectGameStateInfo* CurInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CircleMgrComponent.RetriveCircleInfo");

	UCircleMgrComponent_RetriveCircleInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (CurInfo != nullptr)
		*CurInfo = params.CurInfo;
}


// Function ShadowTrackerExtra.CoherentCommonBinder.Test
// (Final, Native, Private)

void UCoherentCommonBinder::Test()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CoherentCommonBinder.Test");

	UCoherentCommonBinder_Test_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CoherentCommonBinder.OnWebPageOnPlatformFailed
// (Final, Native, Private)

void UCoherentCommonBinder::OnWebPageOnPlatformFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CoherentCommonBinder.OnWebPageOnPlatformFailed");

	UCoherentCommonBinder_OnWebPageOnPlatformFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CoherentCommonBinder.BindUI
// (Native, Protected)

void UCoherentCommonBinder::BindUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CoherentCommonBinder.BindUI");

	UCoherentCommonBinder_BindUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CoherentCommonBinder.BindDelegate
// (Native, Protected)

void UCoherentCommonBinder::BindDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CoherentCommonBinder.BindDelegate");

	UCoherentCommonBinder_BindDelegate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CommonBtnComponent.SetAutoOpenDoorMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void UCommonBtnComponent::SetAutoOpenDoorMode(int Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CommonBtnComponent.SetAutoOpenDoorMode");

	UCommonBtnComponent_SetAutoOpenDoorMode_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CommonBtnComponent.SetAutoOpenDoorEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UCommonBtnComponent::SetAutoOpenDoorEnable(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CommonBtnComponent.SetAutoOpenDoorEnable");

	UCommonBtnComponent_SetAutoOpenDoorEnable_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CommonBtnComponent.IsAimingExtraDoor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APUBGDoor*               actionDoor                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UCommonBtnComponent::IsAimingExtraDoor(class APUBGDoor* actionDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CommonBtnComponent.IsAimingExtraDoor");

	UCommonBtnComponent_IsAimingExtraDoor_Params params;
	params.actionDoor = actionDoor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CommonBtnComponent.DoorRequireRPC
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class APUBGDoor*               actionDoor                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAimingExtraDoor               (Parm, ZeroConstructor, IsPlainOldData)

void UCommonBtnComponent::DoorRequireRPC(class APUBGDoor* actionDoor, bool bAimingExtraDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CommonBtnComponent.DoorRequireRPC");

	UCommonBtnComponent_DoorRequireRPC_Params params;
	params.actionDoor = actionDoor;
	params.bAimingExtraDoor = bAimingExtraDoor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CommonBtnComponent.BP_SimulateUIClick
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bExtraDoor                     (Parm, ZeroConstructor, IsPlainOldData)

void UCommonBtnComponent::BP_SimulateUIClick(bool bExtraDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CommonBtnComponent.BP_SimulateUIClick");

	UCommonBtnComponent_BP_SimulateUIClick_Params params;
	params.bExtraDoor = bExtraDoor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CommonBtnComponent.BP_ShowDoorBtn
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOpen                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            doorOpenMode                   (Parm, ZeroConstructor, IsPlainOldData)

void UCommonBtnComponent::BP_ShowDoorBtn(bool bShow, bool bOpen, int doorOpenMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CommonBtnComponent.BP_ShowDoorBtn");

	UCommonBtnComponent_BP_ShowDoorBtn_Params params;
	params.bShow = bShow;
	params.bOpen = bOpen;
	params.doorOpenMode = doorOpenMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CrossHairComponent.DrawSpreadEnd
// (Final, Native, Protected)

void UCrossHairComponent::DrawSpreadEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CrossHairComponent.DrawSpreadEnd");

	UCrossHairComponent_DrawSpreadEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CrossHairComponent.DrawDebugPointEnd
// (Final, Native, Protected)

void UCrossHairComponent::DrawDebugPointEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CrossHairComponent.DrawDebugPointEnd");

	UCrossHairComponent_DrawDebugPointEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomParticleSystemComponent.AddCollisionIgnoreActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  IgnoreActor                    (Parm, ZeroConstructor, IsPlainOldData)

void UCustomParticleSystemComponent::AddCollisionIgnoreActor(class AActor* IgnoreActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomParticleSystemComponent.AddCollisionIgnoreActor");

	UCustomParticleSystemComponent_AddCollisionIgnoreActor_Params params;
	params.IgnoreActor = IgnoreActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBox.SetScrollOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewScrollOffset                (Parm, ZeroConstructor, IsPlainOldData)

void UCustomScrollBox::SetScrollOffset(float NewScrollOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.SetScrollOffset");

	UCustomScrollBox_SetScrollOffset_Params params;
	params.NewScrollOffset = NewScrollOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBox.SetScrollBarVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility               NewScrollBarVisibility         (Parm, ZeroConstructor, IsPlainOldData)

void UCustomScrollBox::SetScrollBarVisibility(ESlateVisibility NewScrollBarVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.SetScrollBarVisibility");

	UCustomScrollBox_SetScrollBarVisibility_Params params;
	params.NewScrollBarVisibility = NewScrollBarVisibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBox.SetScrollbarThickness
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               NewScrollbarThickness          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UCustomScrollBox::SetScrollbarThickness(const struct FVector2D& NewScrollbarThickness)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.SetScrollbarThickness");

	UCustomScrollBox_SetScrollbarThickness_Params params;
	params.NewScrollbarThickness = NewScrollbarThickness;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBox.SetOrientation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EOrientation>      NewOrientation                 (Parm, ZeroConstructor, IsPlainOldData)

void UCustomScrollBox::SetOrientation(TEnumAsByte<EOrientation> NewOrientation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.SetOrientation");

	UCustomScrollBox_SetOrientation_Params params;
	params.NewOrientation = NewOrientation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBox.SetAlwaysShowScrollbar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           NewAlwaysShowScrollbar         (Parm, ZeroConstructor, IsPlainOldData)

void UCustomScrollBox::SetAlwaysShowScrollbar(bool NewAlwaysShowScrollbar)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.SetAlwaysShowScrollbar");

	UCustomScrollBox_SetAlwaysShowScrollbar_Params params;
	params.NewAlwaysShowScrollbar = NewAlwaysShowScrollbar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBox.SetAllowOverscroll
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           NewAllowOverscroll             (Parm, ZeroConstructor, IsPlainOldData)

void UCustomScrollBox::SetAllowOverscroll(bool NewAllowOverscroll)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.SetAllowOverscroll");

	UCustomScrollBox_SetAllowOverscroll_Params params;
	params.NewAllowOverscroll = NewAllowOverscroll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBox.ScrollWidgetIntoView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                 WidgetToFind                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           AnimateScroll                  (Parm, ZeroConstructor, IsPlainOldData)
// EDescendantScrollDestination   ScrollDesintion                (Parm, ZeroConstructor, IsPlainOldData)

void UCustomScrollBox::ScrollWidgetIntoView(class UWidget* WidgetToFind, bool AnimateScroll, EDescendantScrollDestination ScrollDesintion)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.ScrollWidgetIntoView");

	UCustomScrollBox_ScrollWidgetIntoView_Params params;
	params.WidgetToFind = WidgetToFind;
	params.AnimateScroll = AnimateScroll;
	params.ScrollDesintion = ScrollDesintion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBox.ScrollToStart
// (Final, Native, Public, BlueprintCallable)

void UCustomScrollBox::ScrollToStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.ScrollToStart");

	UCustomScrollBox_ScrollToStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBox.ScrollToEnd
// (Final, Native, Public, BlueprintCallable)

void UCustomScrollBox::ScrollToEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.ScrollToEnd");

	UCustomScrollBox_ScrollToEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBox.GetScrollOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCustomScrollBox::GetScrollOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.GetScrollOffset");

	UCustomScrollBox_GetScrollOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CustomScrollBox.GetMaxScrollOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UCustomScrollBox::GetMaxScrollOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBox.GetMaxScrollOffset");

	UCustomScrollBox_GetMaxScrollOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.CustomScrollBoxSlot.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                 InPadding                      (Parm)

void UCustomScrollBoxSlot::SetPadding(const struct FMargin& InPadding)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBoxSlot.SetPadding");

	UCustomScrollBoxSlot_SetPadding_Params params;
	params.InPadding = InPadding;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomScrollBoxSlot.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment          (Parm, ZeroConstructor, IsPlainOldData)

void UCustomScrollBoxSlot::SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomScrollBoxSlot.SetHorizontalAlignment");

	UCustomScrollBoxSlot_SetHorizontalAlignment_Params params;
	params.InHorizontalAlignment = InHorizontalAlignment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomSpringArmComponent.SetCameraDataEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ECameraDataType>   CameraDataType                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsEnable                       (Parm, ZeroConstructor, IsPlainOldData)

void UCustomSpringArmComponent::SetCameraDataEnable(TEnumAsByte<ECameraDataType> CameraDataType, bool IsEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomSpringArmComponent.SetCameraDataEnable");

	UCustomSpringArmComponent_SetCameraDataEnable_Params params;
	params.CameraDataType = CameraDataType;
	params.IsEnable = IsEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomSpringArmComponent.DelayRotationLagEnabledEnd
// (Final, Native, Protected)

void UCustomSpringArmComponent::DelayRotationLagEnabledEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomSpringArmComponent.DelayRotationLagEnabledEnd");

	UCustomSpringArmComponent_DelayRotationLagEnabledEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomSpringArmComponent.DelayRotationLagEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void UCustomSpringArmComponent::DelayRotationLagEnabled(bool bEnabled, float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomSpringArmComponent.DelayRotationLagEnabled");

	UCustomSpringArmComponent_DelayRotationLagEnabled_Params params;
	params.bEnabled = bEnabled;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.CustomSpringArmComponent.ClearCameraData
// (Final, Native, Public, BlueprintCallable)

void UCustomSpringArmComponent::ClearCameraData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.CustomSpringArmComponent.ClearCameraData");

	UCustomSpringArmComponent_ClearCameraData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.DataTableManager.GetTableByType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EDataTableType>    TableType                      (Parm, ZeroConstructor, IsPlainOldData)
// class UDataTable*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDataTable* UDataTableManager::GetTableByType(TEnumAsByte<EDataTableType> TableType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DataTableManager.GetTableByType");

	UDataTableManager_GetTableByType_Params params;
	params.TableType = TableType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.DataTableManager.GetInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTableManager*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDataTableManager* UDataTableManager::STATIC_GetInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DataTableManager.GetInstance");

	UDataTableManager_GetInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.DeathPlayback.StopRecordingReplay
// (Final, Native, Public, BlueprintCallable)

void UDeathPlayback::StopRecordingReplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DeathPlayback.StopRecordingReplay");

	UDeathPlayback_StopRecordingReplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.DeathPlayback.StopPlay
// (Final, Native, Public, BlueprintCallable)

void UDeathPlayback::StopPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DeathPlayback.StopPlay");

	UDeathPlayback_StopPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.DeathPlayback.StartRecordingReplay
// (Final, Native, Public, BlueprintCallable)

void UDeathPlayback::StartRecordingReplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DeathPlayback.StartRecordingReplay");

	UDeathPlayback_StartRecordingReplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.DeathPlayback.PlayReplay
// (Final, Native, Public, BlueprintCallable)

void UDeathPlayback::PlayReplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DeathPlayback.PlayReplay");

	UDeathPlayback_PlayReplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.DeathPlayback.IsInRecordState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeathPlayback::IsInRecordState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DeathPlayback.IsInRecordState");

	UDeathPlayback_IsInRecordState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.DeathPlayback.IsInPlayState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeathPlayback::IsInPlayState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DeathPlayback.IsInPlayState");

	UDeathPlayback_IsInPlayState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.DeathPlayback.HaveRecordingData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDeathPlayback::HaveRecordingData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DeathPlayback.HaveRecordingData");

	UDeathPlayback_HaveRecordingData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.DeathPlayback.GetSpectatorName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UDeathPlayback::GetSpectatorName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DeathPlayback.GetSpectatorName");

	UDeathPlayback_GetSpectatorName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.DelayFlyProjMovementComponent.StartFly
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 flyVelocity                    (Parm, IsPlainOldData)
// bool                           isThrowHigh                    (Parm, ZeroConstructor, IsPlainOldData)

void UDelayFlyProjMovementComponent::StartFly(const struct FVector& flyVelocity, bool isThrowHigh)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DelayFlyProjMovementComponent.StartFly");

	UDelayFlyProjMovementComponent_StartFly_Params params;
	params.flyVelocity = flyVelocity;
	params.isThrowHigh = isThrowHigh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.DelayFlyProjMovementComponent.OnTouchedWaterDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UDelayFlyProjMovementComponent::OnTouchedWaterDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.DelayFlyProjMovementComponent.OnTouchedWaterDelegate__DelegateSignature");

	UDelayFlyProjMovementComponent_OnTouchedWaterDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.DelayFlyProjMovementComponent.CheckWater
// (Final, Native, Public, BlueprintCallable)

void UDelayFlyProjMovementComponent::CheckWater()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DelayFlyProjMovementComponent.CheckWater");

	UDelayFlyProjMovementComponent_CheckWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.DrivingChallengeLevelRules.ValidNewCheckPoint
// (Final, Native, Private)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UDrivingChallengeLevelRules::ValidNewCheckPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DrivingChallengeLevelRules.ValidNewCheckPoint");

	UDrivingChallengeLevelRules_ValidNewCheckPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.DrivingChallengeLevelRules.SignCheckPointPassed
// (Final, Native, Private)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor)

void UDrivingChallengeLevelRules::SignCheckPointPassed(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DrivingChallengeLevelRules.SignCheckPointPassed");

	UDrivingChallengeLevelRules_SignCheckPointPassed_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.DrivingChallengeLevelRules.SignAndSetDrivingCheckPoint
// (Final, Native, Private)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor)

void UDrivingChallengeLevelRules::SignAndSetDrivingCheckPoint(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DrivingChallengeLevelRules.SignAndSetDrivingCheckPoint");

	UDrivingChallengeLevelRules_SignAndSetDrivingCheckPoint_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.DrivingChallengeLevelRules.OnReceiveTriggerMsg
// (Native, Public)
// Parameters:
// class UTriggerAction*          TriggerAction                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Msg                            (Parm, ZeroConstructor)

void UDrivingChallengeLevelRules::OnReceiveTriggerMsg(class UTriggerAction* TriggerAction, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DrivingChallengeLevelRules.OnReceiveTriggerMsg");

	UDrivingChallengeLevelRules_OnReceiveTriggerMsg_Params params;
	params.TriggerAction = TriggerAction;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.DrivingChallengeLevelRules.InitLevel
// (Native, Public)

void UDrivingChallengeLevelRules::InitLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.DrivingChallengeLevelRules.InitLevel");

	UDrivingChallengeLevelRules_InitLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.EffectComponent.S2Sim_CallRemoteEffect
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            graphTid                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            graphUid                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            effectTid                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Source                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<unsigned char>          Data                           (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UEffectComponent::S2Sim_CallRemoteEffect(int graphTid, int graphUid, int effectTid, class AActor* Source, class AActor* Target, TArray<unsigned char> Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.EffectComponent.S2Sim_CallRemoteEffect");

	UEffectComponent_S2Sim_CallRemoteEffect_Params params;
	params.graphTid = graphTid;
	params.graphUid = graphUid;
	params.effectTid = effectTid;
	params.Source = Source;
	params.Target = Target;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.EffectComponent.S2C_CallRemoteEffect
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            graphTid                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            graphUid                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            effectTid                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Source                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<unsigned char>          Data                           (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UEffectComponent::S2C_CallRemoteEffect(int graphTid, int graphUid, int effectTid, class AActor* Source, class AActor* Target, TArray<unsigned char> Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.EffectComponent.S2C_CallRemoteEffect");

	UEffectComponent_S2C_CallRemoteEffect_Params params;
	params.graphTid = graphTid;
	params.graphUid = graphUid;
	params.effectTid = effectTid;
	params.Source = Source;
	params.Target = Target;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.EffectComponent.S2A_EndEffectGraph
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            UID                            (Parm, ZeroConstructor, IsPlainOldData)

void UEffectComponent::S2A_EndEffectGraph(int UID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.EffectComponent.S2A_EndEffectGraph");

	UEffectComponent_S2A_EndEffectGraph_Params params;
	params.UID = UID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.EffectComponent.C2S_CallRemoteEffect
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            graphTid                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            graphUid                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            effectTid                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Source                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<unsigned char>          Data                           (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UEffectComponent::C2S_CallRemoteEffect(int graphTid, int graphUid, int effectTid, class AActor* Source, class AActor* Target, TArray<unsigned char> Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.EffectComponent.C2S_CallRemoteEffect");

	UEffectComponent_C2S_CallRemoteEffect_Params params;
	params.graphTid = graphTid;
	params.graphUid = graphUid;
	params.effectTid = effectTid;
	params.Source = Source;
	params.Target = Target;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.StarCalcJump
// (Final, Native, Public)

void UGameEventListener::StarCalcJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.StarCalcJump");

	UGameEventListener_StarCalcJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.OnChangeViewTarget
// (Final, Native, Public)

void UGameEventListener::OnChangeViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.OnChangeViewTarget");

	UGameEventListener_OnChangeViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.IsPlayerLanded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameEventListener::IsPlayerLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.IsPlayerLanded");

	UGameEventListener_IsPlayerLanded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.GameEventListener.IsPlayerFlying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UGameEventListener::IsPlayerFlying()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.IsPlayerFlying");

	UGameEventListener_IsPlayerFlying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.GameEventListener.HeightCheck
// (Final, Native, Public)

void UGameEventListener::HeightCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.HeightCheck");

	UGameEventListener_HeightCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.GameEventReBirth
// (Final, Native, Public)

void UGameEventListener::GameEventReBirth()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.GameEventReBirth");

	UGameEventListener_GameEventReBirth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.GameEventPlane
// (Final, Native, Public)

void UGameEventListener::GameEventPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.GameEventPlane");

	UGameEventListener_GameEventPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.GameEventParachute
// (Final, Native, Public)

void UGameEventListener::GameEventParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.GameEventParachute");

	UGameEventListener_GameEventParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.GameEventLanded
// (Final, Native, Public)

void UGameEventListener::GameEventLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.GameEventLanded");

	UGameEventListener_GameEventLanded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.GameEventJump
// (Final, Native, Public)

void UGameEventListener::GameEventJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.GameEventJump");

	UGameEventListener_GameEventJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.GameEventFighting
// (Final, Native, Public)

void UGameEventListener::GameEventFighting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.GameEventFighting");

	UGameEventListener_GameEventFighting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.GameEventDie
// (Final, Native, Public)
// Parameters:
// float                          currentHP                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ratioHP                        (Parm, ZeroConstructor, IsPlainOldData)

void UGameEventListener::GameEventDie(float currentHP, float ratioHP)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.GameEventDie");

	UGameEventListener_GameEventDie_Params params;
	params.currentHP = currentHP;
	params.ratioHP = ratioHP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameEventListener.GameEventBirth
// (Final, Native, Public)

void UGameEventListener::GameEventBirth()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameEventListener.GameEventBirth");

	UGameEventListener_GameEventBirth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameModeState.GotoNextState
// (Native, Protected)

void UGameModeState::GotoNextState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameModeState.GotoNextState");

	UGameModeState_GotoNextState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameModeState_Training.BroadcastAboutToOver
// (Final, Native, Protected)

void UGameModeState_Training::BroadcastAboutToOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameModeState_Training.BroadcastAboutToOver");

	UGameModeState_Training_BroadcastAboutToOver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GameModeStateReady.StopJoin
// (Final, Native, Public)

void UGameModeStateReady::StopJoin()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GameModeStateReady.StopJoin");

	UGameModeStateReady_StopJoin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.VisualizeItem
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::VisualizeItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.VisualizeItem");

	ASTExtraPlayerController_VisualizeItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ViewVehicle
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                          YawAdd                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          PitchAdd                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (Parm, IsPlainOldData)

void ASTExtraPlayerController::ViewVehicle(float YawAdd, float PitchAdd, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ViewVehicle");

	ASTExtraPlayerController_ViewVehicle_Params params;
	params.YawAdd = YawAdd;
	params.PitchAdd = PitchAdd;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ViewPlane
// (Final, Native, Public)

void ASTExtraPlayerController::ViewPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ViewPlane");

	ASTExtraPlayerController_ViewPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.VersionCheck
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::VersionCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.VersionCheck");

	ASTExtraPlayerController_VersionCheck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.UpdatePoseState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ESTEPoseState>     PoseType                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::UpdatePoseState(TEnumAsByte<ESTEPoseState> PoseType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.UpdatePoseState");

	ASTExtraPlayerController_UpdatePoseState_Params params;
	params.PoseType = PoseType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.UnreliablePong
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            SeqID                          (Parm, ZeroConstructor, IsPlainOldData)
// int64_t                        DateTimeTickFromServer         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::UnreliablePong(int SeqID, int64_t DateTimeTickFromServer)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.UnreliablePong");

	ASTExtraPlayerController_UnreliablePong_Params params;
	params.SeqID = SeqID;
	params.DateTimeTickFromServer = DateTimeTickFromServer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.UnreliablePing
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:
// int                            SeqID                          (Parm, ZeroConstructor, IsPlainOldData)
// int64_t                        DateTimeTick                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::UnreliablePing(int SeqID, int64_t DateTimeTick)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.UnreliablePing");

	ASTExtraPlayerController_UnreliablePing_Params params;
	params.SeqID = SeqID;
	params.DateTimeTick = DateTimeTick;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.UnLoadAllCollision
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Unload                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::UnLoadAllCollision(bool Unload)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.UnLoadAllCollision");

	ASTExtraPlayerController_UnLoadAllCollision_Params params;
	params.Unload = Unload;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.TouchMove
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Loc                            (Parm, IsPlainOldData)
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::TouchMove(const struct FVector& Loc, TEnumAsByte<ETouchIndex> FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.TouchMove");

	ASTExtraPlayerController_TouchMove_Params params;
	params.Loc = Loc;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ToggleVehicleSync
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ToggleVehicleSync(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ToggleVehicleSync");

	ASTExtraPlayerController_ToggleVehicleSync_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ToggleUserCmdDeltaSendAck
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ToggleUserCmdDeltaSendAck(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ToggleUserCmdDeltaSendAck");

	ASTExtraPlayerController_ToggleUserCmdDeltaSendAck_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ToggleUserCmdDeltaFlag
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ToggleUserCmdDeltaFlag(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ToggleUserCmdDeltaFlag");

	ASTExtraPlayerController_ToggleUserCmdDeltaFlag_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ToggleUserCmdDeltaCheckSum
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ToggleUserCmdDeltaCheckSum(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ToggleUserCmdDeltaCheckSum");

	ASTExtraPlayerController_ToggleUserCmdDeltaCheckSum_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ToggleUserCmdDelta
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ToggleUserCmdDelta(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ToggleUserCmdDelta");

	ASTExtraPlayerController_ToggleUserCmdDelta_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ToggleServerAcknowledgePossession
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ToggleServerAcknowledgePossession(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ToggleServerAcknowledgePossession");

	ASTExtraPlayerController_ToggleServerAcknowledgePossession_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ToggleInventoryEx
// (Event, Public, BlueprintEvent)

void ASTExtraPlayerController::ToggleInventoryEx()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ToggleInventoryEx");

	ASTExtraPlayerController_ToggleInventoryEx_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ToggleCheatLocation
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ToggleCheatLocation(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ToggleCheatLocation");

	ASTExtraPlayerController_ToggleCheatLocation_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.TeamNoAlwaysRelevant
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::TeamNoAlwaysRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.TeamNoAlwaysRelevant");

	ASTExtraPlayerController_TeamNoAlwaysRelevant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.TeamMateStateChanged
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class ASTExtraPlayerState*     STPlayerState                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  Location                       (Parm)
// uint32_t                       View                           (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Roll                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Health                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            VoiceID                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::TeamMateStateChanged(class ASTExtraPlayerState* STPlayerState, const struct FVector_NetQuantize100& Location, uint32_t View, unsigned char Roll, float Health, int VoiceID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.TeamMateStateChanged");

	ASTExtraPlayerController_TeamMateStateChanged_Params params;
	params.STPlayerState = STPlayerState;
	params.Location = Location;
	params.View = View;
	params.Roll = Roll;
	params.Health = Health;
	params.VoiceID = VoiceID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SwitchViewTarget
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::SwitchViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SwitchViewTarget");

	ASTExtraPlayerController_SwitchViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SwitchToDeadBox
// (Final, Native, Public)

void ASTExtraPlayerController::SwitchToDeadBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SwitchToDeadBox");

	ASTExtraPlayerController_SwitchToDeadBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SwitchPoseStateServer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESTEPoseState>     PoseState                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SwitchPoseStateServer(class ASTExtraBaseCharacter* TargetCharacter, TEnumAsByte<ESTEPoseState> PoseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SwitchPoseStateServer");

	ASTExtraPlayerController_SwitchPoseStateServer_Params params;
	params.TargetCharacter = TargetCharacter;
	params.PoseState = PoseState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SwitchPoseStateFailedResponse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESTEPoseState>     PoseState                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SwitchPoseStateFailedResponse(class ASTExtraBaseCharacter* TargetCharacter, TEnumAsByte<ESTEPoseState> PoseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SwitchPoseStateFailedResponse");

	ASTExtraPlayerController_SwitchPoseStateFailedResponse_Params params;
	params.TargetCharacter = TargetCharacter;
	params.PoseState = PoseState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SwitchPoseStateClient
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESTEPoseState>     PoseState                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SwitchPoseStateClient(class ASTExtraBaseCharacter* TargetCharacter, TEnumAsByte<ESTEPoseState> PoseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SwitchPoseStateClient");

	ASTExtraPlayerController_SwitchPoseStateClient_Params params;
	params.TargetCharacter = TargetCharacter;
	params.PoseState = PoseState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SwitchCameraModeScope
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EPlayerCameraMode> Mode                           (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SwitchCameraModeScope(TEnumAsByte<EPlayerCameraMode> Mode, class ASTExtraBaseCharacter* InCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SwitchCameraModeScope");

	ASTExtraPlayerController_SwitchCameraModeScope_Params params;
	params.Mode = Mode;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SwitchCameraModeByOrder
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::SwitchCameraModeByOrder()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SwitchCameraModeByOrder");

	ASTExtraPlayerController_SwitchCameraModeByOrder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SwitchCameraMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EPlayerCameraMode> Mode                           (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsUseLerpFPP                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SwitchCameraMode(TEnumAsByte<EPlayerCameraMode> Mode, class ASTExtraBaseCharacter* InCharacter, bool IsUseLerpFPP)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SwitchCameraMode");

	ASTExtraPlayerController_SwitchCameraMode_Params params;
	params.Mode = Mode;
	params.InCharacter = InCharacter;
	params.IsUseLerpFPP = IsUseLerpFPP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SwapWeaponByPropSlotOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESurviveWeaponPropSlot         Slot1                          (Parm, ZeroConstructor, IsPlainOldData)
// ESurviveWeaponPropSlot         Slot2                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SwapWeaponByPropSlotOnServer(ESurviveWeaponPropSlot Slot1, ESurviveWeaponPropSlot Slot2, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SwapWeaponByPropSlotOnServer");

	ASTExtraPlayerController_SwapWeaponByPropSlotOnServer_Params params;
	params.Slot1 = Slot1;
	params.Slot2 = Slot2;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.StartReadyCountDown
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::StartReadyCountDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.StartReadyCountDown");

	ASTExtraPlayerController_StartReadyCountDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.StartOnePlane
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::StartOnePlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.StartOnePlane");

	ASTExtraPlayerController_StartOnePlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.StartLandOnGroundAfterJumpPlane
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::StartLandOnGroundAfterJumpPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.StartLandOnGroundAfterJumpPlane");

	ASTExtraPlayerController_StartLandOnGroundAfterJumpPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.StartGame
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::StartGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.StartGame");

	ASTExtraPlayerController_StartGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.StartFreeCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ETouchIndex>       FigerIndex                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::StartFreeCamera(TEnumAsByte<ETouchIndex> FigerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.StartFreeCamera");

	ASTExtraPlayerController_StartFreeCamera_Params params;
	params.FigerIndex = FigerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.StartAirDropSpecified
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::StartAirDropSpecified(float X, float Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.StartAirDropSpecified");

	ASTExtraPlayerController_StartAirDropSpecified_Params params;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.StartAirDropCurrent
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::StartAirDropCurrent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.StartAirDropCurrent");

	ASTExtraPlayerController_StartAirDropCurrent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.StartAirDrop
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::StartAirDrop(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.StartAirDrop");

	ASTExtraPlayerController_StartAirDrop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.StartAirAttackSpecified
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::StartAirAttackSpecified(float X, float Y, float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.StartAirAttackSpecified");

	ASTExtraPlayerController_StartAirAttackSpecified_Params params;
	params.X = X;
	params.Y = Y;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.StartAirAttack
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::StartAirAttack(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.StartAirAttack");

	ASTExtraPlayerController_StartAirAttack_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SpectatorCameraChange_Broadcast
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// bool                           bDie                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SpectatorCameraChange_Broadcast(bool bDie)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SpectatorCameraChange_Broadcast");

	ASTExtraPlayerController_SpectatorCameraChange_Broadcast_Params params;
	params.bDie = bDie;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SpawnVehicleWithPath
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Path                           (Parm, ZeroConstructor)

void ASTExtraPlayerController::SpawnVehicleWithPath(const struct FString& Path)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SpawnVehicleWithPath");

	ASTExtraPlayerController_SpawnVehicleWithPath_Params params;
	params.Path = Path;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SpawnVehicle
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::SpawnVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SpawnVehicle");

	ASTExtraPlayerController_SpawnVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SpawnObject
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Path                           (Parm, ZeroConstructor)
// float                          OffsetForward                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          OffsetHeight                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SpawnObject(const struct FString& Path, float OffsetForward, float OffsetHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SpawnObject");

	ASTExtraPlayerController_SpawnObject_Params params;
	params.Path = Path;
	params.OffsetForward = OffsetForward;
	params.OffsetHeight = OffsetHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SpawnAI
// (Final, Exec, Native, Public)
// Parameters:
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SpawnAI(int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SpawnAI");

	ASTExtraPlayerController_SpawnAI_Params params;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SoftReconnectRecoverData
// (Final, Native, Public)
// Parameters:
// class AUAEPlayerController*    PC                             (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SoftReconnectRecoverData(class AUAEPlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SoftReconnectRecoverData");

	ASTExtraPlayerController_SoftReconnectRecoverData_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ShowVaultEnable
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::ShowVaultEnable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ShowVaultEnable");

	ASTExtraPlayerController_ShowVaultEnable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ShowPoints
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FVector>         Points                         (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ASTExtraPlayerController::ShowPoints(TArray<struct FVector> Points)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ShowPoints");

	ASTExtraPlayerController_ShowPoints_Params params;
	params.Points = Points;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ShowMovePath
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FVector>         Path                           (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ASTExtraPlayerController::ShowMovePath(TArray<struct FVector> Path)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ShowMovePath");

	ASTExtraPlayerController_ShowMovePath_Params params;
	params.Path = Path;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ShowHealth
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::ShowHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ShowHealth");

	ASTExtraPlayerController_ShowHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ShowFireBtn
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ShowFireBtn(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ShowFireBtn");

	ASTExtraPlayerController_ShowFireBtn_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ShowEmoteWheel
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::ShowEmoteWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ShowEmoteWheel");

	ASTExtraPlayerController_ShowEmoteWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ShowBulletShoot
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                 StartLoc                       (Parm, IsPlainOldData)
// struct FRotator                Rot                            (Parm, IsPlainOldData)

void ASTExtraPlayerController::ShowBulletShoot(const struct FVector& StartLoc, const struct FRotator& Rot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ShowBulletShoot");

	ASTExtraPlayerController_ShowBulletShoot_Params params;
	params.StartLoc = StartLoc;
	params.Rot = Rot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ShowAllRoles
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::ShowAllRoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ShowAllRoles");

	ASTExtraPlayerController_ShowAllRoles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ShouldForceFPPView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::ShouldForceFPPView()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ShouldForceFPPView");

	ASTExtraPlayerController_ShouldForceFPPView_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetVirtualStickVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bJSVisiable                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetVirtualStickVisibility(bool bJSVisiable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetVirtualStickVisibility");

	ASTExtraPlayerController_SetVirtualStickVisibility_Params params;
	params.bJSVisiable = bJSVisiable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetVirtualStickAutoSprintStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bVirtualstickAutoSprint        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetVirtualStickAutoSprintStatus(bool bVirtualstickAutoSprint)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetVirtualStickAutoSprintStatus");

	ASTExtraPlayerController_SetVirtualStickAutoSprintStatus_Params params;
	params.bVirtualstickAutoSprint = bVirtualstickAutoSprint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetTimeSpeedFactor
// (Final, Exec, Native, Public)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetTimeSpeedFactor(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetTimeSpeedFactor");

	ASTExtraPlayerController_SetTimeSpeedFactor_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetTimeSpeedCheck
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetTimeSpeedCheck(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetTimeSpeedCheck");

	ASTExtraPlayerController_SetTimeSpeedCheck_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetTimeSpeed
// (Final, Exec, Native, Public)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetTimeSpeed(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetTimeSpeed");

	ASTExtraPlayerController_SetTimeSpeed_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetSpeed
// (Final, Exec, Native, Public)
// Parameters:
// float                          Modifier                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetSpeed(float Modifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetSpeed");

	ASTExtraPlayerController_SetSpeed_Params params;
	params.Modifier = Modifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetScopeFingerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           TouchBegin                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetScopeFingerIndex(bool TouchBegin, TEnumAsByte<ETouchIndex> FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetScopeFingerIndex");

	ASTExtraPlayerController_SetScopeFingerIndex_Params params;
	params.TouchBegin = TouchBegin;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetPlayerMark
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FVector                 Loc                            (Parm, IsPlainOldData)

void ASTExtraPlayerController::SetPlayerMark(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetPlayerMark");

	ASTExtraPlayerController_SetPlayerMark_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetPeekFingerIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           TouchBegin                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           AutoCancelPeek                 (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetPeekFingerIndex(bool TouchBegin, TEnumAsByte<ETouchIndex> FingerIndex, bool AutoCancelPeek)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetPeekFingerIndex");

	ASTExtraPlayerController_SetPeekFingerIndex_Params params;
	params.TouchBegin = TouchBegin;
	params.FingerIndex = FingerIndex;
	params.AutoCancelPeek = AutoCancelPeek;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetParachuteDebugEnable
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetParachuteDebugEnable(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetParachuteDebugEnable");

	ASTExtraPlayerController_SetParachuteDebugEnable_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetMaxHealth
// (Final, Exec, Native, Public)
// Parameters:
// float                          HP                             (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetMaxHealth(float HP)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetMaxHealth");

	ASTExtraPlayerController_SetMaxHealth_Params params;
	params.HP = HP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetJoyStickScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          JSScale                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetJoyStickScale(float JSScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetJoyStickScale");

	ASTExtraPlayerController_SetJoyStickScale_Params params;
	params.JSScale = JSScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetJoystickOperatingMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EJoystickOperatingMode> OperatingMode                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          GoStraightAngle                (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetJoystickOperatingMode(TEnumAsByte<EJoystickOperatingMode> OperatingMode, float GoStraightAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetJoystickOperatingMode");

	ASTExtraPlayerController_SetJoystickOperatingMode_Params params;
	params.OperatingMode = OperatingMode;
	params.GoStraightAngle = GoStraightAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetJoyStickOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          JSOpacity                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetJoyStickOpacity(float JSOpacity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetJoyStickOpacity");

	ASTExtraPlayerController_SetJoyStickOpacity_Params params;
	params.JSOpacity = JSOpacity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetJoyStickInteractionSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               JSInteractionSize              (Parm, IsPlainOldData)

void ASTExtraPlayerController::SetJoyStickInteractionSize(const struct FVector2D& JSInteractionSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetJoyStickInteractionSize");

	ASTExtraPlayerController_SetJoyStickInteractionSize_Params params;
	params.JSInteractionSize = JSInteractionSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetJoyStickCenter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               JSCenter                       (Parm, IsPlainOldData)

void ASTExtraPlayerController::SetJoyStickCenter(const struct FVector2D& JSCenter)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetJoyStickCenter");

	ASTExtraPlayerController_SetJoyStickCenter_Params params;
	params.JSCenter = JSCenter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetInvincible
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetInvincible(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetInvincible");

	ASTExtraPlayerController_SetInvincible_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetInfinityAmmo
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetInfinityAmmo(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetInfinityAmmo");

	ASTExtraPlayerController_SetInfinityAmmo_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetHPFull
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::SetHPFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetHPFull");

	ASTExtraPlayerController_SetHPFull_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetGameStateReconnectInfoToClient
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// struct FReConnectGameStateInfo ReConnectInfo                  (Parm)

void ASTExtraPlayerController::SetGameStateReconnectInfoToClient(const struct FReConnectGameStateInfo& ReConnectInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetGameStateReconnectInfoToClient");

	ASTExtraPlayerController_SetGameStateReconnectInfoToClient_Params params;
	params.ReConnectInfo = ReConnectInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetForceRotation
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetForceRotation(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetForceRotation");

	ASTExtraPlayerController_SetForceRotation_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetEnableVoiceByPlayerKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerState*     State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetEnableVoiceByPlayerKey(class ASTExtraPlayerState* State, bool Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetEnableVoiceByPlayerKey");

	ASTExtraPlayerController_SetEnableVoiceByPlayerKey_Params params;
	params.State = State;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetDefaultCameraFOV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          FOV                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetDefaultCameraFOV(float FOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetDefaultCameraFOV");

	ASTExtraPlayerController_SetDefaultCameraFOV_Params params;
	params.FOV = FOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetDebugBallistics
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetDebugBallistics(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetDebugBallistics");

	ASTExtraPlayerController_SetDebugBallistics_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetCurrentCameraFOV_Server
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// float                          FOV                            (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EPlayerCameraMode> Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetCurrentCameraFOV_Server(float FOV, TEnumAsByte<EPlayerCameraMode> Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetCurrentCameraFOV_Server");

	ASTExtraPlayerController_SetCurrentCameraFOV_Server_Params params;
	params.FOV = FOV;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetControlRotation
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                NewRotation                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ASTExtraPlayerController::SetControlRotation(const struct FRotator& NewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetControlRotation");

	ASTExtraPlayerController_SetControlRotation_Params params;
	params.NewRotation = NewRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetCirCenterFixed
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetCirCenterFixed(bool Enable, float X, float Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetCirCenterFixed");

	ASTExtraPlayerController_SetCirCenterFixed_Params params;
	params.Enable = Enable;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetAirDropEnable
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetAirDropEnable(bool Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetAirDropEnable");

	ASTExtraPlayerController_SetAirDropEnable_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SetAirAttackEnable
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SetAirAttackEnable(bool Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SetAirAttackEnable");

	ASTExtraPlayerController_SetAirAttackEnable_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerUseItem
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// struct FBattleItemUseTarget    Target                         (Parm)
// EBattleItemUseReason           Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerUseItem(const struct FItemDefineID& DefineID, const struct FBattleItemUseTarget& Target, EBattleItemUseReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerUseItem");

	ASTExtraPlayerController_ServerUseItem_Params params;
	params.DefineID = DefineID;
	params.Target = Target;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerUnLoadAllCollision
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Unload                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerUnLoadAllCollision(bool Unload)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerUnLoadAllCollision");

	ASTExtraPlayerController_ServerUnLoadAllCollision_Params params;
	params.Unload = Unload;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerTriggerSelectGrenade
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            GrenadeID                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerTriggerSelectGrenade(int GrenadeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerTriggerSelectGrenade");

	ASTExtraPlayerController_ServerTriggerSelectGrenade_Params params;
	params.GrenadeID = GrenadeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerTriggerCharacterEntryEvent
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EUTSkillEntry                  EntryEvent                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerTriggerCharacterEntryEvent(EUTSkillEntry EntryEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerTriggerCharacterEntryEvent");

	ASTExtraPlayerController_ServerTriggerCharacterEntryEvent_Params params;
	params.EntryEvent = EntryEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerTriggerCharacterCustomEvent
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EUAESkillEvent>    SkillEvent                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerTriggerCharacterCustomEvent(TEnumAsByte<EUAESkillEvent> SkillEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerTriggerCharacterCustomEvent");

	ASTExtraPlayerController_ServerTriggerCharacterCustomEvent_Params params;
	params.SkillEvent = SkillEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerSystemInfo
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FString                 OsLanguage                     (Parm, ZeroConstructor)
// struct FString                 GameLanguage                   (Parm, ZeroConstructor)
// struct FString                 OsVersion                      (Parm, ZeroConstructor)
// struct FString                 CpuName                        (Parm, ZeroConstructor)
// struct FString                 GpuName                        (Parm, ZeroConstructor)
// uint32_t                       RamInGB                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 BaseBoardModelName             (Parm, ZeroConstructor)
// struct FString                 BaseBoardSerial                (Parm, ZeroConstructor)
// TArray<struct FString>         DiskModelNames                 (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FString>         DiskSerials                    (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FString>         MemoryModelNames               (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FString>         MemorySerials                  (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// int                            ArpIpCount                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FString>         GatewayMacAddress              (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// struct FString                 OsUserAccount                  (Parm, ZeroConstructor)
// TArray<struct FString>         MonitorModelNames              (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<struct FString>         MonitorSerials                 (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// bool                           bIsXenuineRunning              (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    GraphicSettings                (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ASTExtraPlayerController::ServerSystemInfo(const struct FString& OsLanguage, const struct FString& GameLanguage, const struct FString& OsVersion, const struct FString& CpuName, const struct FString& GpuName, uint32_t RamInGB, const struct FString& BaseBoardModelName, const struct FString& BaseBoardSerial, TArray<struct FString> DiskModelNames, TArray<struct FString> DiskSerials, TArray<struct FString> MemoryModelNames, TArray<struct FString> MemorySerials, int ArpIpCount, TArray<struct FString> GatewayMacAddress, const struct FString& OsUserAccount, TArray<struct FString> MonitorModelNames, TArray<struct FString> MonitorSerials, bool bIsXenuineRunning, TArray<int> GraphicSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerSystemInfo");

	ASTExtraPlayerController_ServerSystemInfo_Params params;
	params.OsLanguage = OsLanguage;
	params.GameLanguage = GameLanguage;
	params.OsVersion = OsVersion;
	params.CpuName = CpuName;
	params.GpuName = GpuName;
	params.RamInGB = RamInGB;
	params.BaseBoardModelName = BaseBoardModelName;
	params.BaseBoardSerial = BaseBoardSerial;
	params.DiskModelNames = DiskModelNames;
	params.DiskSerials = DiskSerials;
	params.MemoryModelNames = MemoryModelNames;
	params.MemorySerials = MemorySerials;
	params.ArpIpCount = ArpIpCount;
	params.GatewayMacAddress = GatewayMacAddress;
	params.OsUserAccount = OsUserAccount;
	params.MonitorModelNames = MonitorModelNames;
	params.MonitorSerials = MonitorSerials;
	params.bIsXenuineRunning = bIsXenuineRunning;
	params.GraphicSettings = GraphicSettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerStopFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraShootWeapon*     TargetWeapon                   (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       CurClipID                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            CurrentBullet                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerStopFire(class ASTExtraBaseCharacter* TargetCharacter, class ASTExtraShootWeapon* TargetWeapon, uint32_t CurClipID, int CurrentBullet)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerStopFire");

	ASTExtraPlayerController_ServerStopFire_Params params;
	params.TargetCharacter = TargetCharacter;
	params.TargetWeapon = TargetWeapon;
	params.CurClipID = CurClipID;
	params.CurrentBullet = CurrentBullet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerStat
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EServerStatType>   StatType                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Password                       (Parm, ZeroConstructor)

void ASTExtraPlayerController::ServerStat(TEnumAsByte<EServerStatType> StatType, const struct FString& Password)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerStat");

	ASTExtraPlayerController_ServerStat_Params params;
	params.StatType = StatType;
	params.Password = Password;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerStartPreBarrel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// float                          HandledTime                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerStartPreBarrel(class ASTExtraBaseCharacter* TargetCharacter, float HandledTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerStartPreBarrel");

	ASTExtraPlayerController_ServerStartPreBarrel_Params params;
	params.TargetCharacter = TargetCharacter;
	params.HandledTime = HandledTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerStartOnPlaneSurvive
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// float                          P_PlaneFlyHeight               (Parm, ZeroConstructor, IsPlainOldData)
// float                          P_PlaneStartDistance           (Parm, ZeroConstructor, IsPlainOldData)
// float                          P_PlaneFlySpeed                (Parm, ZeroConstructor, IsPlainOldData)
// float                          P_HaveToJumpDistance           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 P_MapCenterLoc                 (Parm, IsPlainOldData)
// struct FVector                 P_PlaneStartLoc                (Parm, IsPlainOldData)
// float                          P_PlaneStartYaw                (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerStartOnPlaneSurvive(float P_PlaneFlyHeight, float P_PlaneStartDistance, float P_PlaneFlySpeed, float P_HaveToJumpDistance, const struct FVector& P_MapCenterLoc, const struct FVector& P_PlaneStartLoc, float P_PlaneStartYaw)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerStartOnPlaneSurvive");

	ASTExtraPlayerController_ServerStartOnPlaneSurvive_Params params;
	params.P_PlaneFlyHeight = P_PlaneFlyHeight;
	params.P_PlaneStartDistance = P_PlaneStartDistance;
	params.P_PlaneFlySpeed = P_PlaneFlySpeed;
	params.P_HaveToJumpDistance = P_HaveToJumpDistance;
	params.P_MapCenterLoc = P_MapCenterLoc;
	params.P_PlaneStartLoc = P_PlaneStartLoc;
	params.P_PlaneStartYaw = P_PlaneStartYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerStartFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraShootWeapon*     TargetWeapon                   (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       CurShootID                     (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       CurClipID                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            CurBulletNumInClip             (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EShootWeaponShootMode> ShootMode                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerStartFire(class ASTExtraBaseCharacter* TargetCharacter, class ASTExtraShootWeapon* TargetWeapon, uint32_t CurShootID, uint32_t CurClipID, int CurBulletNumInClip, TEnumAsByte<EShootWeaponShootMode> ShootMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerStartFire");

	ASTExtraPlayerController_ServerStartFire_Params params;
	params.TargetCharacter = TargetCharacter;
	params.TargetWeapon = TargetWeapon;
	params.CurShootID = CurShootID;
	params.CurClipID = CurClipID;
	params.CurBulletNumInClip = CurBulletNumInClip;
	params.ShootMode = ShootMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerStartBarrel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerStartBarrel(class ASTExtraBaseCharacter* TargetCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerStartBarrel");

	ASTExtraPlayerController_ServerStartBarrel_Params params;
	params.TargetCharacter = TargetCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerSetReloadMethod
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EWeaponReloadMethod> reloadMethod                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerSetReloadMethod(class ASTExtraBaseCharacter* TargetCharacter, TEnumAsByte<EWeaponReloadMethod> reloadMethod)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerSetReloadMethod");

	ASTExtraPlayerController_ServerSetReloadMethod_Params params;
	params.TargetCharacter = TargetCharacter;
	params.reloadMethod = reloadMethod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerSetFreeCamera
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                InRotation                     (Parm, IsPlainOldData)

void ASTExtraPlayerController::ServerSetFreeCamera(const struct FRotator& InRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerSetFreeCamera");

	ASTExtraPlayerController_ServerSetFreeCamera_Params params;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerSetFireMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// EGunFireMode                   NewFireMode                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerSetFireMode(class ASTExtraBaseCharacter* TargetCharacter, EGunFireMode NewFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerSetFireMode");

	ASTExtraPlayerController_ServerSetFireMode_Params params;
	params.TargetCharacter = TargetCharacter;
	params.NewFireMode = NewFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerSetControlRotationOnVehicle
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                InRotation                     (Parm, IsPlainOldData)

void ASTExtraPlayerController::ServerSetControlRotationOnVehicle(const struct FRotator& InRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerSetControlRotationOnVehicle");

	ASTExtraPlayerController_ServerSetControlRotationOnVehicle_Params params;
	params.InRotation = InRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerSetControlRotation
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                NewRotation                    (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ASTExtraPlayerController::ServerSetControlRotation(const struct FRotator& NewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerSetControlRotation");

	ASTExtraPlayerController_ServerSetControlRotation_Params params;
	params.NewRotation = NewRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerSetClientFps
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                          Fps                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            MinFps                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            MaxFps                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            UnderFps10                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            UnderFps20                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            UnderFps30                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            UnderFps60                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerSetClientFps(float Fps, int MinFps, int MaxFps, int UnderFps10, int UnderFps20, int UnderFps30, int UnderFps60)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerSetClientFps");

	ASTExtraPlayerController_ServerSetClientFps_Params params;
	params.Fps = Fps;
	params.MinFps = MinFps;
	params.MaxFps = MaxFps;
	params.UnderFps10 = UnderFps10;
	params.UnderFps20 = UnderFps20;
	params.UnderFps30 = UnderFps30;
	params.UnderFps60 = UnderFps60;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerReplicateExplosionEffect
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class UClass*                  Template                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              Trans                          (Parm, IsPlainOldData)
// class AActor*                  ActorOwner                     (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   InstigatorPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// ESpawnActorCollisionHandlingMethod method                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerReplicateExplosionEffect(class UClass* Template, const struct FTransform& Trans, class AActor* ActorOwner, class APawn* InstigatorPawn, ESpawnActorCollisionHandlingMethod method)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerReplicateExplosionEffect");

	ASTExtraPlayerController_ServerReplicateExplosionEffect_Params params;
	params.Template = Template;
	params.Trans = Trans;
	params.ActorOwner = ActorOwner;
	params.InstigatorPawn = InstigatorPawn;
	params.method = method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerOpenParachute
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraPlayerController::ServerOpenParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerOpenParachute");

	ASTExtraPlayerController_ServerOpenParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerOnMsg
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor)

void ASTExtraPlayerController::ServerOnMsg(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerOnMsg");

	ASTExtraPlayerController_ServerOnMsg_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerObserveCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint32_t                       InPlayerKey                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerObserveCharacter(uint32_t InPlayerKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerObserveCharacter");

	ASTExtraPlayerController_ServerObserveCharacter_Params params;
	params.InPlayerKey = InPlayerKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerObserveAirDropBox
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            boxId                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerObserveAirDropBox(int boxId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerObserveAirDropBox");

	ASTExtraPlayerController_ServerObserveAirDropBox_Params params;
	params.boxId = boxId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerNotifyAutoFollowStatus
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           IsStartFollow                  (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   Target                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerNotifyAutoFollowStatus(bool IsStartFollow, class ASTExtraBaseCharacter* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerNotifyAutoFollowStatus");

	ASTExtraPlayerController_ServerNotifyAutoFollowStatus_Params params;
	params.IsStartFollow = IsStartFollow;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerLeaveMatchIntentionally
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraPlayerController::ServerLeaveMatchIntentionally()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerLeaveMatchIntentionally");

	ASTExtraPlayerController_ServerLeaveMatchIntentionally_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerJumpFromPlane
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraPlayerController::ServerJumpFromPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerJumpFromPlane");

	ASTExtraPlayerController_ServerJumpFromPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerHearSound
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// int                            AkEventID                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 AkLocation                     (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ASTExtraPlayerController::ServerHearSound(int AkEventID, const struct FVector& AkLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerHearSound");

	ASTExtraPlayerController_ServerHearSound_Params params;
	params.AkEventID = AkEventID;
	params.AkLocation = AkLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerHandleHitDataArray
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraShootWeapon*     TargetWeapon                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FBulletHitInfoUploadData> DataArray                      (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// int                            ShootTimes                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FLocalShootHitData> ShootHitData                   (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ASTExtraPlayerController::ServerHandleHitDataArray(class ASTExtraShootWeapon* TargetWeapon, TArray<struct FBulletHitInfoUploadData> DataArray, int ShootTimes, TArray<struct FLocalShootHitData> ShootHitData)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerHandleHitDataArray");

	ASTExtraPlayerController_ServerHandleHitDataArray_Params params;
	params.TargetWeapon = TargetWeapon;
	params.DataArray = DataArray;
	params.ShootTimes = ShootTimes;
	params.ShootHitData = ShootHitData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerFight
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraPlayerController::ServerFight()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerFight");

	ASTExtraPlayerController_ServerFight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerExitFreeCamera
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraPlayerController::ServerExitFreeCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerExitFreeCamera");

	ASTExtraPlayerController_ServerExitFreeCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerDropItem
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// EBattleItemDropReason          Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerDropItem(const struct FItemDefineID& DefineID, int Count, EBattleItemDropReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerDropItem");

	ASTExtraPlayerController_ServerDropItem_Params params;
	params.DefineID = DefineID;
	params.Count = Count;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerDisuseItem
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// EBattleItemDisuseReason        Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ServerDisuseItem(const struct FItemDefineID& DefineID, EBattleItemDisuseReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerDisuseItem");

	ASTExtraPlayerController_ServerDisuseItem_Params params;
	params.DefineID = DefineID;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerCMD_RPC
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Cmd                            (Parm, ZeroConstructor)

void ASTExtraPlayerController::ServerCMD_RPC(const struct FString& Cmd)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerCMD_RPC");

	ASTExtraPlayerController_ServerCMD_RPC_Params params;
	params.Cmd = Cmd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ServerCMD
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Cmd                            (Parm, ZeroConstructor)

void ASTExtraPlayerController::ServerCMD(const struct FString& Cmd)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ServerCMD");

	ASTExtraPlayerController_ServerCMD_Params params;
	params.Cmd = Cmd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SendSystemMessage
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// ESystemMessageType             MessageType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Message                        (ConstParm, Parm, ReferenceParm)
// float                          MessageDuration                (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SendSystemMessage(ESystemMessageType MessageType, const struct FText& Message, float MessageDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SendSystemMessage");

	ASTExtraPlayerController_SendSystemMessage_Params params;
	params.MessageType = MessageType;
	params.Message = Message;
	params.MessageDuration = MessageDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SendStringMsg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)
// int                            msgID                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::SendStringMsg(const struct FString& Message, int msgID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SendStringMsg");

	ASTExtraPlayerController_SendStringMsg_Params params;
	params.Message = Message;
	params.msgID = msgID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SendResetCameraInResult
// (Net, NetReliable, Native, Event, Public, NetClient)

void ASTExtraPlayerController::SendResetCameraInResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SendResetCameraInResult");

	ASTExtraPlayerController_SendResetCameraInResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SendMatchResult
// (Net, NetReliable, Native, Event, Public, NetClient)

void ASTExtraPlayerController::SendMatchResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SendMatchResult");

	ASTExtraPlayerController_SendMatchResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.SendEndTouchScreenUICommand
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FString                 UIMsg                          (Parm, OutParm, ZeroConstructor)

void ASTExtraPlayerController::SendEndTouchScreenUICommand(struct FString* UIMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.SendEndTouchScreenUICommand");

	ASTExtraPlayerController_SendEndTouchScreenUICommand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (UIMsg != nullptr)
		*UIMsg = params.UIMsg;
}


// Function ShadowTrackerExtra.STExtraPlayerController.S2C_ResponseSkillPrompt
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          RemainingTime                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 PromptText                     (Parm, ZeroConstructor)
// float                          TotalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::S2C_ResponseSkillPrompt(bool bShow, float RemainingTime, const struct FString& PromptText, float TotalTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.S2C_ResponseSkillPrompt");

	ASTExtraPlayerController_S2C_ResponseSkillPrompt_Params params;
	params.bShow = bShow;
	params.RemainingTime = RemainingTime;
	params.PromptText = PromptText;
	params.TotalTime = TotalTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.S2C_HelpOther
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// class ACharacter*              HelpWho                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsTurnInfo                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          RemainingRescueTime            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::S2C_HelpOther(class ACharacter* HelpWho, bool IsTurnInfo, float RemainingRescueTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.S2C_HelpOther");

	ASTExtraPlayerController_S2C_HelpOther_Params params;
	params.HelpWho = HelpWho;
	params.IsTurnInfo = IsTurnInfo;
	params.RemainingRescueTime = RemainingRescueTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.S2C_BeHelpedByOther
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// class ACharacter*              ByWho                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsTurnInfo                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          RemainingRescueTime            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::S2C_BeHelpedByOther(class ACharacter* ByWho, bool IsTurnInfo, float RemainingRescueTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.S2C_BeHelpedByOther");

	ASTExtraPlayerController_S2C_BeHelpedByOther_Params params;
	params.ByWho = ByWho;
	params.IsTurnInfo = IsTurnInfo;
	params.RemainingRescueTime = RemainingRescueTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RunOnNextFrameEvent
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::RunOnNextFrameEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RunOnNextFrameEvent");

	ASTExtraPlayerController_RunOnNextFrameEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.RunOnNextFrame__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::RunOnNextFrame__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.RunOnNextFrame__DelegateSignature");

	ASTExtraPlayerController_RunOnNextFrame__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_ShootSpecialBullet
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FTransform              LaunchTrans                    (Parm, IsPlainOldData)
// class ASTExtraShootWeapon*     TargetWeapon                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_Server_ShootSpecialBullet(const struct FTransform& LaunchTrans, class ASTExtraShootWeapon* TargetWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_ShootSpecialBullet");

	ASTExtraPlayerController_RPC_Server_ShootSpecialBullet_Params params;
	params.LaunchTrans = LaunchTrans;
	params.TargetWeapon = TargetWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_NotifyBreakWindow
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AUAEHouseActor*          OwnerTarget                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUAEWindowRepData       Window                         (Parm)

void ASTExtraPlayerController::RPC_Server_NotifyBreakWindow(class AUAEHouseActor* OwnerTarget, const struct FUAEWindowRepData& Window)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_NotifyBreakWindow");

	ASTExtraPlayerController_RPC_Server_NotifyBreakWindow_Params params;
	params.OwnerTarget = OwnerTarget;
	params.Window = Window;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_NorifyServerClientHasFinishReconnectedWeaponSystem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraPlayerController::RPC_Server_NorifyServerClientHasFinishReconnectedWeaponSystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_NorifyServerClientHasFinishReconnectedWeaponSystem");

	ASTExtraPlayerController_RPC_Server_NorifyServerClientHasFinishReconnectedWeaponSystem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_NorifyServerClientHasFinishedHandleSpawnWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraPlayerController::RPC_Server_NorifyServerClientHasFinishedHandleSpawnWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_NorifyServerClientHasFinishedHandleSpawnWeapon");

	ASTExtraPlayerController_RPC_Server_NorifyServerClientHasFinishedHandleSpawnWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_ClientHasReactivated
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ASTExtraPlayerController::RPC_Server_ClientHasReactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_ClientHasReactivated");

	ASTExtraPlayerController_RPC_Server_ClientHasReactivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_ClientHasFinishedRecoverWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraWeapon*          Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponReconnectReplicateData RecoverData                    (ConstParm, Parm, ReferenceParm)

void ASTExtraPlayerController::RPC_Server_ClientHasFinishedRecoverWeapon(class ASTExtraWeapon* Weapon, const struct FWeaponReconnectReplicateData& RecoverData)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_Server_ClientHasFinishedRecoverWeapon");

	ASTExtraPlayerController_RPC_Server_ClientHasFinishedRecoverWeapon_Params params;
	params.Weapon = Weapon;
	params.RecoverData = RecoverData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_SwapWeaponByPropSlot
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// ESurviveWeaponPropSlot         Slot1                          (Parm, ZeroConstructor, IsPlainOldData)
// ESurviveWeaponPropSlot         Slot2                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_OwnerClient_SwapWeaponByPropSlot(ESurviveWeaponPropSlot Slot1, ESurviveWeaponPropSlot Slot2, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_SwapWeaponByPropSlot");

	ASTExtraPlayerController_RPC_OwnerClient_SwapWeaponByPropSlot_Params params;
	params.Slot1 = Slot1;
	params.Slot2 = Slot2;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_SetMurderInfo
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// struct FString                 murderName                     (Parm, ZeroConstructor)
// bool                           IsAI                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_OwnerClient_SetMurderInfo(const struct FString& murderName, bool IsAI)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_SetMurderInfo");

	ASTExtraPlayerController_RPC_OwnerClient_SetMurderInfo_Params params;
	params.murderName = murderName;
	params.IsAI = IsAI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_PlayerEnableAttrModifier
// (Net, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FAttrModifyItem         ItemData                       (ConstParm, Parm, ReferenceParm)

void ASTExtraPlayerController::RPC_OwnerClient_PlayerEnableAttrModifier(bool bEnable, const struct FAttrModifyItem& ItemData)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_PlayerEnableAttrModifier");

	ASTExtraPlayerController_RPC_OwnerClient_PlayerEnableAttrModifier_Params params;
	params.bEnable = bEnable;
	params.ItemData = ItemData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_PlayerConsumeItem
// (Net, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// struct FItemDefineID           ID                             (ConstParm, Parm, ReferenceParm)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_OwnerClient_PlayerConsumeItem(const struct FItemDefineID& ID, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_PlayerConsumeItem");

	ASTExtraPlayerController_RPC_OwnerClient_PlayerConsumeItem_Params params;
	params.ID = ID;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_PlayerAddHealth
// (Net, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// float                          AddVal                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ERecoveryReasonType> Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_OwnerClient_PlayerAddHealth(float AddVal, TEnumAsByte<ERecoveryReasonType> Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_PlayerAddHealth");

	ASTExtraPlayerController_RPC_OwnerClient_PlayerAddHealth_Params params;
	params.AddVal = AddVal;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_PlayerAddEnergy
// (Net, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// float                          AddVal                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ERecoveryReasonType> Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_OwnerClient_PlayerAddEnergy(float AddVal, TEnumAsByte<ERecoveryReasonType> Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_PlayerAddEnergy");

	ASTExtraPlayerController_RPC_OwnerClient_PlayerAddEnergy_Params params;
	params.AddVal = AddVal;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_NotifyClientEquipWeaponAttachment
// (Net, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// ESurviveWeaponPropSlot         WeaponPropSlot                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           DefineID                       (ConstParm, Parm, ReferenceParm)
// bool                           bEquip                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_OwnerClient_NotifyClientEquipWeaponAttachment(ESurviveWeaponPropSlot WeaponPropSlot, const struct FItemDefineID& DefineID, bool bEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_NotifyClientEquipWeaponAttachment");

	ASTExtraPlayerController_RPC_OwnerClient_NotifyClientEquipWeaponAttachment_Params params;
	params.WeaponPropSlot = WeaponPropSlot;
	params.DefineID = DefineID;
	params.bEquip = bEquip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_HandleAIShootBulletHit
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient, NetValidate)
// Parameters:
// struct FVector                 BulletStart                    (Parm, IsPlainOldData)
// struct FVector                 BulletEnd                      (Parm, IsPlainOldData)

void ASTExtraPlayerController::RPC_OwnerClient_HandleAIShootBulletHit(const struct FVector& BulletStart, const struct FVector& BulletEnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_HandleAIShootBulletHit");

	ASTExtraPlayerController_RPC_OwnerClient_HandleAIShootBulletHit_Params params;
	params.BulletStart = BulletStart;
	params.BulletEnd = BulletEnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_ClientPlayItemOperationSound
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// struct FString                 BankName                       (Parm, ZeroConstructor)
// struct FString                 SoundName                      (Parm, ZeroConstructor)
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_OwnerClient_ClientPlayItemOperationSound(const struct FString& BankName, const struct FString& SoundName, class AActor* TargetActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_OwnerClient_ClientPlayItemOperationSound");

	ASTExtraPlayerController_RPC_OwnerClient_ClientPlayItemOperationSound_Params params;
	params.BankName = BankName;
	params.SoundName = SoundName;
	params.TargetActor = TargetActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_Client_OnDamageNotifyRecord
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// int                            DamagerID                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          fHealth                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            OtherHealthStatus              (Parm, ZeroConstructor, IsPlainOldData)
// float                          ShootDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   CauserName                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_Client_OnDamageNotifyRecord(int DamagerID, float fHealth, int OtherHealthStatus, float ShootDistance, int DamageType, const struct FName& CauserName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_Client_OnDamageNotifyRecord");

	ASTExtraPlayerController_RPC_Client_OnDamageNotifyRecord_Params params;
	params.DamagerID = DamagerID;
	params.fHealth = fHealth;
	params.OtherHealthStatus = OtherHealthStatus;
	params.ShootDistance = ShootDistance;
	params.DamageType = DamageType;
	params.CauserName = CauserName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_Client_DestroyWeapon
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// struct FName                   LogicSocket                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ID                             (ConstParm, Parm, ReferenceParm)
// bool                           bEnableBroadcast               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_Client_DestroyWeapon(const struct FName& LogicSocket, const struct FItemDefineID& ID, bool bEnableBroadcast)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_Client_DestroyWeapon");

	ASTExtraPlayerController_RPC_Client_DestroyWeapon_Params params;
	params.LogicSocket = LogicSocket;
	params.ID = ID;
	params.bEnableBroadcast = bEnableBroadcast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_Client_ClientDisplayScoreChangeTips
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// struct FWarPlayerStateScore    ScoreStruct                    (Parm)

void ASTExtraPlayerController::RPC_Client_ClientDisplayScoreChangeTips(const struct FWarPlayerStateScore& ScoreStruct)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_Client_ClientDisplayScoreChangeTips");

	ASTExtraPlayerController_RPC_Client_ClientDisplayScoreChangeTips_Params params;
	params.ScoreStruct = ScoreStruct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RPC_Client_CircleRun
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            TotalNum                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RPC_Client_CircleRun(int Index, int TotalNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RPC_Client_CircleRun");

	ASTExtraPlayerController_RPC_Client_CircleRun_Params params;
	params.Index = Index;
	params.TotalNum = TotalNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RetriveMobileContentScaleFactor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraPlayerController::RetriveMobileContentScaleFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RetriveMobileContentScaleFactor");

	ASTExtraPlayerController_RetriveMobileContentScaleFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RestoreDefaultInteractionSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            JSIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RestoreDefaultInteractionSize(int JSIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RestoreDefaultInteractionSize");

	ASTExtraPlayerController_RestoreDefaultInteractionSize_Params params;
	params.JSIndex = JSIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RespawnRecoverData
// (Final, Native, Public)
// Parameters:
// class AUAEPlayerController*    PC                             (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RespawnRecoverData(class AUAEPlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RespawnRecoverData");

	ASTExtraPlayerController_RespawnRecoverData_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ResetMissingUIUpdate
// (Event, Public, BlueprintEvent)

void ASTExtraPlayerController::ResetMissingUIUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ResetMissingUIUpdate");

	ASTExtraPlayerController_ResetMissingUIUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RequireNetCullingDistanceByDevice
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraPlayerController::RequireNetCullingDistanceByDevice()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RequireNetCullingDistanceByDevice");

	ASTExtraPlayerController_RequireNetCullingDistanceByDevice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RequestPlayerNewbieInfo
// (Final, Native, Public)

void ASTExtraPlayerController::RequestPlayerNewbieInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RequestPlayerNewbieInfo");

	ASTExtraPlayerController_RequestPlayerNewbieInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ReqSwitchPersonPerspective
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           IsNewFPP                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ReqSwitchPersonPerspective(bool IsNewFPP)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ReqSwitchPersonPerspective");

	ASTExtraPlayerController_ReqSwitchPersonPerspective_Params params;
	params.IsNewFPP = IsNewFPP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RemoveTouchMoveFinger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RemoveTouchMoveFinger(TEnumAsByte<ETouchIndex> FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RemoveTouchMoveFinger");

	ASTExtraPlayerController_RemoveTouchMoveFinger_Params params;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RemoveAllDoors
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::RemoveAllDoors()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RemoveAllDoors");

	ASTExtraPlayerController_RemoveAllDoors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ReliablePong
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            SeqID                          (Parm, ZeroConstructor, IsPlainOldData)
// int64_t                        DateTimeTickFromServer         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ReliablePong(int SeqID, int64_t DateTimeTickFromServer)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ReliablePong");

	ASTExtraPlayerController_ReliablePong_Params params;
	params.SeqID = SeqID;
	params.DateTimeTickFromServer = DateTimeTickFromServer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ReliablePing
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int                            SeqID                          (Parm, ZeroConstructor, IsPlainOldData)
// int64_t                        DateTimeTick                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ReliablePing(int SeqID, int64_t DateTimeTick)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ReliablePing");

	ASTExtraPlayerController_ReliablePing_Params params;
	params.SeqID = SeqID;
	params.DateTimeTick = DateTimeTick;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.RefreshTopMostUIPanel
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<ETopMostUIPanelType> Type                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::RefreshTopMostUIPanel(TEnumAsByte<ETopMostUIPanelType> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.RefreshTopMostUIPanel");

	ASTExtraPlayerController_RefreshTopMostUIPanel_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ReceiveClientRestart
// (Event, Public, BlueprintEvent)

void ASTExtraPlayerController::ReceiveClientRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ReceiveClientRestart");

	ASTExtraPlayerController_ReceiveClientRestart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ReceiveBackpackComponent
// (Native, Event, Protected, BlueprintEvent)

void ASTExtraPlayerController::ReceiveBackpackComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ReceiveBackpackComponent");

	ASTExtraPlayerController_ReceiveBackpackComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.PrintStringToScreen
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FString                 inString                       (Parm, ZeroConstructor)
// struct FLinearColor            TextColor                      (Parm, IsPlainOldData)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::PrintStringToScreen(const struct FString& inString, const struct FLinearColor& TextColor, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.PrintStringToScreen");

	ASTExtraPlayerController_PrintStringToScreen_Params params;
	params.inString = inString;
	params.TextColor = TextColor;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.PrintMovementLog
// (Final, Exec, Native, Public)
// Parameters:
// int                            PrintLog                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::PrintMovementLog(int PrintLog)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.PrintMovementLog");

	ASTExtraPlayerController_PrintMovementLog_Params params;
	params.PrintLog = PrintLog;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.PressGrenade
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           isThrow                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::PressGrenade(bool isThrow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.PressGrenade");

	ASTExtraPlayerController_PressGrenade_Params params;
	params.isThrow = isThrow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.PressFire
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::PressFire(int FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.PressFire");

	ASTExtraPlayerController_PressFire_Params params;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.PlaneJumpAll
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::PlaneJumpAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.PlaneJumpAll");

	ASTExtraPlayerController_PlaneJumpAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OpenParachute
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::OpenParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OpenParachute");

	ASTExtraPlayerController_OpenParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnWeaponEquipAttachment
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// ESurviveWeaponPropSlot         WeaponPropSlot                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           DefineID                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           bEquip                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnWeaponEquipAttachment(ESurviveWeaponPropSlot WeaponPropSlot, const struct FItemDefineID& DefineID, bool bEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnWeaponEquipAttachment");

	ASTExtraPlayerController_OnWeaponEquipAttachment_Params params;
	params.WeaponPropSlot = WeaponPropSlot;
	params.DefineID = DefineID;
	params.bEquip = bEquip;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnWallFeedBack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           _WallFeedBack                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnWallFeedBack(bool _WallFeedBack)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnWallFeedBack");

	ASTExtraPlayerController_OnWallFeedBack_Params params;
	params._WallFeedBack = _WallFeedBack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnViewTargetDetachedFromVehicle
// (Final, Native, Public)

void ASTExtraPlayerController::OnViewTargetDetachedFromVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnViewTargetDetachedFromVehicle");

	ASTExtraPlayerController_OnViewTargetDetachedFromVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnViewTargetChangeVehicleSeat
// (Final, Native, Public)

void ASTExtraPlayerController::OnViewTargetChangeVehicleSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnViewTargetChangeVehicleSeat");

	ASTExtraPlayerController_OnViewTargetChangeVehicleSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnViewTargetAttachedToVehicle
// (Final, Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     InVehicle                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnViewTargetAttachedToVehicle(class ASTExtraVehicleBase* InVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnViewTargetAttachedToVehicle");

	ASTExtraPlayerController_OnViewTargetAttachedToVehicle_Params params;
	params.InVehicle = InVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnUseMainSlot__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnUseMainSlot__DelegateSignature(ESurviveWeaponPropSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnUseMainSlot__DelegateSignature");

	ASTExtraPlayerController_OnUseMainSlot__DelegateSignature_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnUseInventoryItemDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnUseInventoryItemDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnUseInventoryItemDelegate__DelegateSignature");

	ASTExtraPlayerController_OnUseInventoryItemDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnUnequipWeaponDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnUnequipWeaponDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnUnequipWeaponDelegate__DelegateSignature");

	ASTExtraPlayerController_OnUnequipWeaponDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnTeammateHPChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnTeammateHPChangeDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnTeammateHPChangeDelegate__DelegateSignature");

	ASTExtraPlayerController_OnTeammateHPChangeDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnTakeDamaged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                          DamageAngel                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnTakeDamaged__DelegateSignature(float DamageAngel)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnTakeDamaged__DelegateSignature");

	ASTExtraPlayerController_OnTakeDamaged__DelegateSignature_Params params;
	params.DamageAngel = DamageAngel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnSwitchWeaponDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnSwitchWeaponDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnSwitchWeaponDelegate__DelegateSignature");

	ASTExtraPlayerController_OnSwitchWeaponDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnSwitchCameraModeStartDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// TEnumAsByte<EPlayerCameraMode> CameraMode                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnSwitchCameraModeStartDelegate__DelegateSignature(TEnumAsByte<EPlayerCameraMode> CameraMode)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnSwitchCameraModeStartDelegate__DelegateSignature");

	ASTExtraPlayerController_OnSwitchCameraModeStartDelegate__DelegateSignature_Params params;
	params.CameraMode = CameraMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnSwitchCameraModeEndDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// TEnumAsByte<EPlayerCameraMode> CameraMode                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnSwitchCameraModeEndDelegate__DelegateSignature(TEnumAsByte<EPlayerCameraMode> CameraMode)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnSwitchCameraModeEndDelegate__DelegateSignature");

	ASTExtraPlayerController_OnSwitchCameraModeEndDelegate__DelegateSignature_Params params;
	params.CameraMode = CameraMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnStopFireDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnStopFireDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnStopFireDelegate__DelegateSignature");

	ASTExtraPlayerController_OnStopFireDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnStartFireDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnStartFireDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnStartFireDelegate__DelegateSignature");

	ASTExtraPlayerController_OnStartFireDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnStartAutoSprintCountDown__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnStartAutoSprintCountDown__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnStartAutoSprintCountDown__DelegateSignature");

	ASTExtraPlayerController_OnStartAutoSprintCountDown__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnSpectatorChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnSpectatorChange__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnSpectatorChange__DelegateSignature");

	ASTExtraPlayerController_OnSpectatorChange__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnSpectatorCameraChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bDie                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnSpectatorCameraChange(bool bDie)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnSpectatorCameraChange");

	ASTExtraPlayerController_OnSpectatorCameraChange_Params params;
	params.bDie = bDie;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnShowSkillPromptDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                           IsShowPrompt                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          LastTime                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 PromptText                     (Parm, ZeroConstructor)
// float                          TotalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnShowSkillPromptDelegate__DelegateSignature(bool IsShowPrompt, float LastTime, const struct FString& PromptText, float TotalTime)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnShowSkillPromptDelegate__DelegateSignature");

	ASTExtraPlayerController_OnShowSkillPromptDelegate__DelegateSignature_Params params;
	params.IsShowPrompt = IsShowPrompt;
	params.LastTime = LastTime;
	params.PromptText = PromptText;
	params.TotalTime = TotalTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnShowAutoSprintButton__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasDefaults)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               showPos                        (Parm, IsPlainOldData)
// bool                           IsInside                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnShowAutoSprintButton__DelegateSignature(bool visible, const struct FVector2D& showPos, bool IsInside)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnShowAutoSprintButton__DelegateSignature");

	ASTExtraPlayerController_OnShowAutoSprintButton__DelegateSignature_Params params;
	params.visible = visible;
	params.showPos = showPos;
	params.IsInside = IsInside;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnRepTeammateChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnRepTeammateChange__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnRepTeammateChange__DelegateSignature");

	ASTExtraPlayerController_OnRepTeammateChange__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnRepPlayerState__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnRepPlayerState__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnRepPlayerState__DelegateSignature");

	ASTExtraPlayerController_OnRepPlayerState__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRepNotify_SetBattleOwner
// (Final, Native, Public)

void ASTExtraPlayerController::OnRepNotify_SetBattleOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRepNotify_SetBattleOwner");

	ASTExtraPlayerController_OnRepNotify_SetBattleOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRepNotify_ServerHitEnemyReplicatedData
// (Final, Native, Public)

void ASTExtraPlayerController::OnRepNotify_ServerHitEnemyReplicatedData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRepNotify_ServerHitEnemyReplicatedData");

	ASTExtraPlayerController_OnRepNotify_ServerHitEnemyReplicatedData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_WeaponSystemReconnectReplicateData
// (Final, Native, Protected)

void ASTExtraPlayerController::OnRep_WeaponSystemReconnectReplicateData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_WeaponSystemReconnectReplicateData");

	ASTExtraPlayerController_OnRep_WeaponSystemReconnectReplicateData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_STExtraBaseCharacter
// (Final, Native, Public)

void ASTExtraPlayerController::OnRep_STExtraBaseCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_STExtraBaseCharacter");

	ASTExtraPlayerController_OnRep_STExtraBaseCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_SpawnAndBackpackWeaponReplicatedDataArray
// (Final, Native, Protected)

void ASTExtraPlayerController::OnRep_SpawnAndBackpackWeaponReplicatedDataArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_SpawnAndBackpackWeaponReplicatedDataArray");

	ASTExtraPlayerController_OnRep_SpawnAndBackpackWeaponReplicatedDataArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_RefreshTotalPlayers
// (Final, Native, Public)

void ASTExtraPlayerController::OnRep_RefreshTotalPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_RefreshTotalPlayers");

	ASTExtraPlayerController_OnRep_RefreshTotalPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_RefreshAirDropBox
// (Final, Native, Public)

void ASTExtraPlayerController::OnRep_RefreshAirDropBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_RefreshAirDropBox");

	ASTExtraPlayerController_OnRep_RefreshAirDropBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_PlayerControllerState
// (Final, Native, Public)

void ASTExtraPlayerController::OnRep_PlayerControllerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_PlayerControllerState");

	ASTExtraPlayerController_OnRep_PlayerControllerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_Plane
// (Final, Native, Public)

void ASTExtraPlayerController::OnRep_Plane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_Plane");

	ASTExtraPlayerController_OnRep_Plane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_ObservedTeammateId
// (Final, Native, Protected)

void ASTExtraPlayerController::OnRep_ObservedTeammateId()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_ObservedTeammateId");

	ASTExtraPlayerController_OnRep_ObservedTeammateId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_ObservedItemList
// (Final, Native, Private)

void ASTExtraPlayerController::OnRep_ObservedItemList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_ObservedItemList");

	ASTExtraPlayerController_OnRep_ObservedItemList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_IsObserver
// (Native, Public)

void ASTExtraPlayerController::OnRep_IsObserver()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_IsObserver");

	ASTExtraPlayerController_OnRep_IsObserver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_DeadTombBox
// (Final, Native, Public)

void ASTExtraPlayerController::OnRep_DeadTombBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_DeadTombBox");

	ASTExtraPlayerController_OnRep_DeadTombBox_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_CurViewTeammate
// (Final, Native, Public)

void ASTExtraPlayerController::OnRep_CurViewTeammate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_CurViewTeammate");

	ASTExtraPlayerController_OnRep_CurViewTeammate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_CanOpenParachute
// (Final, Native, Public)

void ASTExtraPlayerController::OnRep_CanOpenParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_CanOpenParachute");

	ASTExtraPlayerController_OnRep_CanOpenParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnRep_BackpackComponent
// (Final, Native, Private)

void ASTExtraPlayerController::OnRep_BackpackComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnRep_BackpackComponent");

	ASTExtraPlayerController_OnRep_BackpackComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnRemoveMainSlot__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnRemoveMainSlot__DelegateSignature(ESurviveWeaponPropSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnRemoveMainSlot__DelegateSignature");

	ASTExtraPlayerController_OnRemoveMainSlot__DelegateSignature_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnReleaseFireBtnDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnReleaseFireBtnDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnReleaseFireBtnDelegate__DelegateSignature");

	ASTExtraPlayerController_OnReleaseFireBtnDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnReconnected__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnReconnected__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnReconnected__DelegateSignature");

	ASTExtraPlayerController_OnReconnected__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnRank__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int                            Kills                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Rank                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnRank__DelegateSignature(int Kills, int Rank)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnRank__DelegateSignature");

	ASTExtraPlayerController_OnRank__DelegateSignature_Params params;
	params.Kills = Kills;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerUseRecoverItem
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::OnPlayerUseRecoverItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerUseRecoverItem");

	ASTExtraPlayerController_OnPlayerUseRecoverItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerStateChanged
// (Final, Native, Public)

void ASTExtraPlayerController::OnPlayerStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerStateChanged");

	ASTExtraPlayerController_OnPlayerStateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerReConnected
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// int                            LostPlayerKey                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnPlayerReConnected(int LostPlayerKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerReConnected");

	ASTExtraPlayerController_OnPlayerReConnected_Params params;
	params.LostPlayerKey = LostPlayerKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnPlayerPutDownAllPropDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnPlayerPutDownAllPropDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnPlayerPutDownAllPropDelegate__DelegateSignature");

	ASTExtraPlayerController_OnPlayerPutDownAllPropDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnPlayerPutDownActorDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetPlayer                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnPlayerPutDownActorDelegate__DelegateSignature(class ASTExtraBaseCharacter* TargetPlayer, class AActor* TargetActor)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnPlayerPutDownActorDelegate__DelegateSignature");

	ASTExtraPlayerController_OnPlayerPutDownActorDelegate__DelegateSignature_Params params;
	params.TargetPlayer = TargetPlayer;
	params.TargetActor = TargetActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnPlayerPickUpActorDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// TEnumAsByte<ESurvivePickUpGlobalCategory> SurvivePickUpGlobalCategory    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnPlayerPickUpActorDelegate__DelegateSignature(TEnumAsByte<ESurvivePickUpGlobalCategory> SurvivePickUpGlobalCategory, int ID)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnPlayerPickUpActorDelegate__DelegateSignature");

	ASTExtraPlayerController_OnPlayerPickUpActorDelegate__DelegateSignature_Params params;
	params.SurvivePickUpGlobalCategory = SurvivePickUpGlobalCategory;
	params.ID = ID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnPlayerNameChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FString                 changedplayername              (Parm, ZeroConstructor)

void ASTExtraPlayerController::OnPlayerNameChange__DelegateSignature(const struct FString& changedplayername)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnPlayerNameChange__DelegateSignature");

	ASTExtraPlayerController_OnPlayerNameChange__DelegateSignature_Params params;
	params.changedplayername = changedplayername;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerLostConnection
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// int                            LostPlayerKey                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnPlayerLostConnection(int LostPlayerKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerLostConnection");

	ASTExtraPlayerController_OnPlayerLostConnection_Params params;
	params.LostPlayerKey = LostPlayerKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerHitFireBtn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsRightBtn                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnPlayerHitFireBtn(bool bIsRightBtn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerHitFireBtn");

	ASTExtraPlayerController_OnPlayerHitFireBtn_Params params;
	params.bIsRightBtn = bIsRightBtn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerClickDriveBtn
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::OnPlayerClickDriveBtn()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerClickDriveBtn");

	ASTExtraPlayerController_OnPlayerClickDriveBtn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerCanGetInVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           CanGetInVehicle                (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnPlayerCanGetInVehicle(bool CanGetInVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnPlayerCanGetInVehicle");

	ASTExtraPlayerController_OnPlayerCanGetInVehicle_Params params;
	params.CanGetInVehicle = CanGetInVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnPickUpExpand
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::OnPickUpExpand()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnPickUpExpand");

	ASTExtraPlayerController_OnPickUpExpand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnPickUpCollapsed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           isCollapsed                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnPickUpCollapsed(bool isCollapsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnPickUpCollapsed");

	ASTExtraPlayerController_OnPickUpCollapsed_Params params;
	params.isCollapsed = isCollapsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnObserverLevelLoaded
// (Final, Native, Public)

void ASTExtraPlayerController::OnObserverLevelLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnObserverLevelLoaded");

	ASTExtraPlayerController_OnObserverLevelLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnObservedUsingWeaponChanged
// (Final, Native, Public)

void ASTExtraPlayerController::OnObservedUsingWeaponChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnObservedUsingWeaponChanged");

	ASTExtraPlayerController_OnObservedUsingWeaponChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnObservedItemsChanged
// (Final, Native, Public)

void ASTExtraPlayerController::OnObservedItemsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnObservedItemsChanged");

	ASTExtraPlayerController_OnObservedItemsChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnObservedBulletNumChanged
// (Final, Native, Public)

void ASTExtraPlayerController::OnObservedBulletNumChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnObservedBulletNumChanged");

	ASTExtraPlayerController_OnObservedBulletNumChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnMapMarkChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int                            TeamMateSerialNumber           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnMapMarkChangeDelegate__DelegateSignature(int TeamMateSerialNumber)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnMapMarkChangeDelegate__DelegateSignature");

	ASTExtraPlayerController_OnMapMarkChangeDelegate__DelegateSignature_Params params;
	params.TeamMateSerialNumber = TeamMateSerialNumber;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnLostConnection__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnLostConnection__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnLostConnection__DelegateSignature");

	ASTExtraPlayerController_OnLostConnection__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnLocalCharacterHPChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                          currentHP                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ratioHP                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnLocalCharacterHPChangeDelegate__DelegateSignature(float currentHP, float ratioHP)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnLocalCharacterHPChangeDelegate__DelegateSignature");

	ASTExtraPlayerController_OnLocalCharacterHPChangeDelegate__DelegateSignature_Params params;
	params.currentHP = currentHP;
	params.ratioHP = ratioHP;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnLandOnGroundAfterJumpPlaneEnd
// (Event, Public, BlueprintEvent)

void ASTExtraPlayerController::OnLandOnGroundAfterJumpPlaneEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnLandOnGroundAfterJumpPlaneEnd");

	ASTExtraPlayerController_OnLandOnGroundAfterJumpPlaneEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnItemOperation
// (Final, Native, Private)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// EBattleItemOperationType       operationType                  (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnItemOperation(const struct FItemDefineID& DefineID, EBattleItemOperationType operationType, unsigned char Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnItemOperation");

	ASTExtraPlayerController_OnItemOperation_Params params;
	params.DefineID = DefineID;
	params.operationType = operationType;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnInterruptAutoSprintCountDown__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnInterruptAutoSprintCountDown__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnInterruptAutoSprintCountDown__DelegateSignature");

	ASTExtraPlayerController_OnInterruptAutoSprintCountDown__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnGameStartDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnGameStartDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnGameStartDelegate__DelegateSignature");

	ASTExtraPlayerController_OnGameStartDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnGameStartCountDownDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                          CountDownTime                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnGameStartCountDownDelegate__DelegateSignature(float CountDownTime)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnGameStartCountDownDelegate__DelegateSignature");

	ASTExtraPlayerController_OnGameStartCountDownDelegate__DelegateSignature_Params params;
	params.CountDownTime = CountDownTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnExitGame__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnExitGame__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnExitGame__DelegateSignature");

	ASTExtraPlayerController_OnExitGame__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnExecuteExitCommand
// (Final, Native, Public)

void ASTExtraPlayerController::OnExecuteExitCommand()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnExecuteExitCommand");

	ASTExtraPlayerController_OnExecuteExitCommand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnEquipWeaponDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnEquipWeaponDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnEquipWeaponDelegate__DelegateSignature");

	ASTExtraPlayerController_OnEquipWeaponDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnDoubleClickCheckDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnDoubleClickCheckDelegate__DelegateSignature(TEnumAsByte<ETouchIndex> FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnDoubleClickCheckDelegate__DelegateSignature");

	ASTExtraPlayerController_OnDoubleClickCheckDelegate__DelegateSignature_Params params;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnDeadBoxExpand
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::OnDeadBoxExpand()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnDeadBoxExpand");

	ASTExtraPlayerController_OnDeadBoxExpand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnDeadBoxCollapsed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           isCollpased                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnDeadBoxCollapsed(bool isCollpased)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnDeadBoxCollapsed");

	ASTExtraPlayerController_OnDeadBoxCollapsed_Params params;
	params.isCollpased = isCollpased;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnDamageToOtherDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                          damageToOther                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnDamageToOtherDelegate__DelegateSignature(float damageToOther)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnDamageToOtherDelegate__DelegateSignature");

	ASTExtraPlayerController_OnDamageToOtherDelegate__DelegateSignature_Params params;
	params.damageToOther = damageToOther;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnControllerStateChange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   LastestState                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnControllerStateChange(const struct FName& LastestState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnControllerStateChange");

	ASTExtraPlayerController_OnControllerStateChange_Params params;
	params.LastestState = LastestState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterVehicleCheckVoiceTriggerDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasDefaults)
// Parameters:
// class ASTExtraVehicleBase*     nowVehicle                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 posVector                      (Parm, IsPlainOldData)
// float                          showTime                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnCharacterVehicleCheckVoiceTriggerDelegate__DelegateSignature(class ASTExtraVehicleBase* nowVehicle, const struct FVector& posVector, float showTime)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterVehicleCheckVoiceTriggerDelegate__DelegateSignature");

	ASTExtraPlayerController_OnCharacterVehicleCheckVoiceTriggerDelegate__DelegateSignature_Params params;
	params.nowVehicle = nowVehicle;
	params.posVector = posVector;
	params.showTime = showTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterShotCheckVoiceTriggerDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasDefaults)
// Parameters:
// class ASTExtraShootWeapon*     nowWeapon                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 posVector                      (Parm, IsPlainOldData)
// float                          showTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isslience                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnCharacterShotCheckVoiceTriggerDelegate__DelegateSignature(class ASTExtraShootWeapon* nowWeapon, const struct FVector& posVector, float showTime, bool isslience)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterShotCheckVoiceTriggerDelegate__DelegateSignature");

	ASTExtraPlayerController_OnCharacterShotCheckVoiceTriggerDelegate__DelegateSignature_Params params;
	params.nowWeapon = nowWeapon;
	params.posVector = posVector;
	params.showTime = showTime;
	params.isslience = isslience;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.OnCharacterRecoveryHealthEvent
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::OnCharacterRecoveryHealthEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.OnCharacterRecoveryHealthEvent");

	ASTExtraPlayerController_OnCharacterRecoveryHealthEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterRecoveryHealth__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnCharacterRecoveryHealth__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterRecoveryHealth__DelegateSignature");

	ASTExtraPlayerController_OnCharacterRecoveryHealth__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterNearDeathOrRescueingOtherNotifyDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                           IsNearDeath                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsRescueingOther               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnCharacterNearDeathOrRescueingOtherNotifyDelegate__DelegateSignature(bool IsNearDeath, bool IsRescueingOther)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterNearDeathOrRescueingOtherNotifyDelegate__DelegateSignature");

	ASTExtraPlayerController_OnCharacterNearDeathOrRescueingOtherNotifyDelegate__DelegateSignature_Params params;
	params.IsNearDeath = IsNearDeath;
	params.IsRescueingOther = IsRescueingOther;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterMoveCheckVoiceTriggerDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasDefaults)
// Parameters:
// class ASTExtraBaseCharacter*   nowCharacter                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 posVector                      (Parm, IsPlainOldData)
// float                          showTime                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnCharacterMoveCheckVoiceTriggerDelegate__DelegateSignature(class ASTExtraBaseCharacter* nowCharacter, const struct FVector& posVector, float showTime)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterMoveCheckVoiceTriggerDelegate__DelegateSignature");

	ASTExtraPlayerController_OnCharacterMoveCheckVoiceTriggerDelegate__DelegateSignature_Params params;
	params.nowCharacter = nowCharacter;
	params.posVector = posVector;
	params.showTime = showTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterGlassCheckVoiceTriggerDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasDefaults)
// Parameters:
// struct FVector                 posVector                      (Parm, IsPlainOldData)
// float                          showTime                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnCharacterGlassCheckVoiceTriggerDelegate__DelegateSignature(const struct FVector& posVector, float showTime)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterGlassCheckVoiceTriggerDelegate__DelegateSignature");

	ASTExtraPlayerController_OnCharacterGlassCheckVoiceTriggerDelegate__DelegateSignature_Params params;
	params.posVector = posVector;
	params.showTime = showTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterCheckVoiceTriggerDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AActor*                  nowActor                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          checkDis                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnCharacterCheckVoiceTriggerDelegate__DelegateSignature(class AActor* nowActor, float checkDis)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterCheckVoiceTriggerDelegate__DelegateSignature");

	ASTExtraPlayerController_OnCharacterCheckVoiceTriggerDelegate__DelegateSignature_Params params;
	params.nowActor = nowActor;
	params.checkDis = checkDis;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterBreathChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                          currentBR                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ratioBR                        (Parm, ZeroConstructor, IsPlainOldData)
// class ACharacter*              OwnerCharacter                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            HealthStatus                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnCharacterBreathChangeDelegate__DelegateSignature(float currentBR, float ratioBR, class ACharacter* OwnerCharacter, int HealthStatus)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnCharacterBreathChangeDelegate__DelegateSignature");

	ASTExtraPlayerController_OnCharacterBreathChangeDelegate__DelegateSignature_Params params;
	params.currentBR = currentBR;
	params.ratioBR = ratioBR;
	params.OwnerCharacter = OwnerCharacter;
	params.HealthStatus = HealthStatus;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnChangeBattleOwnerDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnChangeBattleOwnerDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnChangeBattleOwnerDelegate__DelegateSignature");

	ASTExtraPlayerController_OnChangeBattleOwnerDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnBackpackMainSlot__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::OnBackpackMainSlot__DelegateSignature(ESurviveWeaponPropSlot Slot)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnBackpackMainSlot__DelegateSignature");

	ASTExtraPlayerController_OnBackpackMainSlot__DelegateSignature_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnAutoSprintActive__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::OnAutoSprintActive__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.OnAutoSprintActive__DelegateSignature");

	ASTExtraPlayerController_OnAutoSprintActive__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerController.On3DTouchForceChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerController::On3DTouchForceChangeDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerController.On3DTouchForceChangeDelegate__DelegateSignature");

	ASTExtraPlayerController_On3DTouchForceChangeDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ObserveCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 InPlayerName                   (Parm, ZeroConstructor)

void ASTExtraPlayerController::ObserveCharacter(const struct FString& InPlayerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ObserveCharacter");

	ASTExtraPlayerController_ObserveCharacter_Params params;
	params.InPlayerName = InPlayerName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ObserveAirDropBox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            boxId                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ObserveAirDropBox(int boxId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ObserveAirDropBox");

	ASTExtraPlayerController_ObserveAirDropBox_Params params;
	params.boxId = boxId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.NotifyInOutPickUpActorWrapperBP
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsIn                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::NotifyInOutPickUpActorWrapperBP(bool bIsIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.NotifyInOutPickUpActorWrapperBP");

	ASTExtraPlayerController_NotifyInOutPickUpActorWrapperBP_Params params;
	params.bIsIn = bIsIn;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.MoveUp
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::MoveUp(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.MoveUp");

	ASTExtraPlayerController_MoveUp_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.MoveToAI
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::MoveToAI()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.MoveToAI");

	ASTExtraPlayerController_MoveToAI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.MoveTo
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Z                              (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::MoveTo(float X, float Y, float Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.MoveTo");

	ASTExtraPlayerController_MoveTo_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ModifyTouchIndex
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Loc                            (Parm, IsPlainOldData)
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ModifyTouchIndex(const struct FVector& Loc, TEnumAsByte<ETouchIndex> FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ModifyTouchIndex");

	ASTExtraPlayerController_ModifyTouchIndex_Params params;
	params.Loc = Loc;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.MemberVoice
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            member                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            status                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::MemberVoice(int member, int status)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.MemberVoice");

	ASTExtraPlayerController_MemberVoice_Params params;
	params.member = member;
	params.status = status;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.MakeTestCrash
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::MakeTestCrash()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.MakeTestCrash");

	ASTExtraPlayerController_MakeTestCrash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalTeamNoAlwaysRelevant
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::LocalTeamNoAlwaysRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalTeamNoAlwaysRelevant");

	ASTExtraPlayerController_LocalTeamNoAlwaysRelevant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalStartReadyCountDown
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::LocalStartReadyCountDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalStartReadyCountDown");

	ASTExtraPlayerController_LocalStartReadyCountDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalStartAirDropSpecified
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalStartAirDropSpecified(float X, float Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalStartAirDropSpecified");

	ASTExtraPlayerController_LocalStartAirDropSpecified_Params params;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalStartAirDrop
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalStartAirDrop(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalStartAirDrop");

	ASTExtraPlayerController_LocalStartAirDrop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalStartAirAttackSpecified
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalStartAirAttackSpecified(float X, float Y, float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalStartAirAttackSpecified");

	ASTExtraPlayerController_LocalStartAirAttackSpecified_Params params;
	params.X = X;
	params.Y = Y;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalStartAirAttack
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalStartAirAttack(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalStartAirAttack");

	ASTExtraPlayerController_LocalStartAirAttack_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalSpawnVehicle
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Path                           (Parm, ZeroConstructor)

void ASTExtraPlayerController::LocalSpawnVehicle(const struct FString& Path)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalSpawnVehicle");

	ASTExtraPlayerController_LocalSpawnVehicle_Params params;
	params.Path = Path;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalSpawnAI
// (Final, Exec, Native, Public)
// Parameters:
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalSpawnAI(int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalSpawnAI");

	ASTExtraPlayerController_LocalSpawnAI_Params params;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalSetSpeed
// (Final, Exec, Native, Public)
// Parameters:
// float                          Modifier                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalSetSpeed(float Modifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalSetSpeed");

	ASTExtraPlayerController_LocalSetSpeed_Params params;
	params.Modifier = Modifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalSetMaxHealth
// (Final, Exec, Native, Public)
// Parameters:
// float                          HP                             (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalSetMaxHealth(float HP)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalSetMaxHealth");

	ASTExtraPlayerController_LocalSetMaxHealth_Params params;
	params.HP = HP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalSetAirDropEnable
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalSetAirDropEnable(bool Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalSetAirDropEnable");

	ASTExtraPlayerController_LocalSetAirDropEnable_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalSetAirAttackEnable
// (Final, Exec, Native, Public)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalSetAirAttackEnable(bool Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalSetAirAttackEnable");

	ASTExtraPlayerController_LocalSetAirAttackEnable_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalRemoveAllDoors
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::LocalRemoveAllDoors()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalRemoveAllDoors");

	ASTExtraPlayerController_LocalRemoveAllDoors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalMoveTo
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Z                              (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalMoveTo(float X, float Y, float Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalMoveTo");

	ASTExtraPlayerController_LocalMoveTo_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalKillSomeOne
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 InPlayerName                   (Parm, ZeroConstructor)

void ASTExtraPlayerController::LocalKillSomeOne(const struct FString& InPlayerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalKillSomeOne");

	ASTExtraPlayerController_LocalKillSomeOne_Params params;
	params.InPlayerName = InPlayerName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalKillAll
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::LocalKillAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalKillAll");

	ASTExtraPlayerController_LocalKillAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalGotoFlying
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::LocalGotoFlying()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalGotoFlying");

	ASTExtraPlayerController_LocalGotoFlying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalGetGameStateReconnectInfo
// (Final, Native, Public)

void ASTExtraPlayerController::LocalGetGameStateReconnectInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalGetGameStateReconnectInfo");

	ASTExtraPlayerController_LocalGetGameStateReconnectInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalGameModeGotoNextState
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::LocalGameModeGotoNextState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalGameModeGotoNextState");

	ASTExtraPlayerController_LocalGameModeGotoNextState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalGameModeGotoFightingState
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::LocalGameModeGotoFightingState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalGameModeGotoFightingState");

	ASTExtraPlayerController_LocalGameModeGotoFightingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LocalAddItem
// (Final, Exec, Native, Public)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LocalAddItem(int ID, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LocalAddItem");

	ASTExtraPlayerController_LocalAddItem_Params params;
	params.ID = ID;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LoadAllLand
// (Final, Exec, Native, Public)
// Parameters:
// bool                           bLoadAll                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::LoadAllLand(bool bLoadAll)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LoadAllLand");

	ASTExtraPlayerController_LoadAllLand_Params params;
	params.bLoadAll = bLoadAll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.LerpFPPCamera
// (Final, Native, Public)

void ASTExtraPlayerController::LerpFPPCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.LerpFPPCamera");

	ASTExtraPlayerController_LerpFPPCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.KillSomeOne
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 InPlayerName                   (Parm, ZeroConstructor)

void ASTExtraPlayerController::KillSomeOne(const struct FString& InPlayerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.KillSomeOne");

	ASTExtraPlayerController_KillSomeOne_Params params;
	params.InPlayerName = InPlayerName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.KillSelf
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::KillSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.KillSelf");

	ASTExtraPlayerController_KillSelf_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.KillAll
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::KillAll()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.KillAll");

	ASTExtraPlayerController_KillAll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.JumpWorld
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::JumpWorld(float X, float Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.JumpWorld");

	ASTExtraPlayerController_JumpWorld_Params params;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.JumpFromPlane
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::JumpFromPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.JumpFromPlane");

	ASTExtraPlayerController_JumpFromPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.JoystickTriggerSprint
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsSprint                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::JoystickTriggerSprint(bool bIsSprint)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.JoystickTriggerSprint");

	ASTExtraPlayerController_JoystickTriggerSprint_Params params;
	params.bIsSprint = bIsSprint;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsViewTarget
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  pActor                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsViewTarget(class AActor* pActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsViewTarget");

	ASTExtraPlayerController_IsViewTarget_Params params;
	params.pActor = pActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsUse3DTouch
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsUse3DTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsUse3DTouch");

	ASTExtraPlayerController_IsUse3DTouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsSameTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsSameTeam(class APawn* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsSameTeam");

	ASTExtraPlayerController_IsSameTeam_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsRescueing
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsRescueing()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsRescueing");

	ASTExtraPlayerController_IsRescueing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsMoveable
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsMoveable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsMoveable");

	ASTExtraPlayerController_IsMoveable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsLastBreathOrRescueingOther
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsLastBreathOrRescueingOther()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsLastBreathOrRescueingOther");

	ASTExtraPlayerController_IsLastBreathOrRescueingOther_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsInPlane
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsInPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsInPlane");

	ASTExtraPlayerController_IsInPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsInParachute
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsInParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsInParachute");

	ASTExtraPlayerController_IsInParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsInFreeCameraView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsInFreeCameraView()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsInFreeCameraView");

	ASTExtraPlayerController_IsInFreeCameraView_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsInDeathReplay
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsInDeathReplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsInDeathReplay");

	ASTExtraPlayerController_IsInDeathReplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsAllowActorTouchMove
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsAllowActorTouchMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsAllowActorTouchMove");

	ASTExtraPlayerController_IsAllowActorTouchMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.IsAGMPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::IsAGMPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.IsAGMPlayer");

	ASTExtraPlayerController_IsAGMPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.InsertGrenadeIDToName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            GrenadeID                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::InsertGrenadeIDToName(int GrenadeID, const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.InsertGrenadeIDToName");

	ASTExtraPlayerController_InsertGrenadeIDToName_Params params;
	params.GrenadeID = GrenadeID;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.InsertGrenadeIDInOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            GrenadeID                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::InsertGrenadeIDInOrder(int GrenadeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.InsertGrenadeIDInOrder");

	ASTExtraPlayerController_InsertGrenadeIDInOrder_Params params;
	params.GrenadeID = GrenadeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.InitNewbieComponent
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<int>                    FinishedGuide                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<int>                    FinishedCounts                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            PlayerLevel                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerExperienceType           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::InitNewbieComponent(TArray<int> FinishedGuide, TArray<int> FinishedCounts, int PlayerLevel, int PlayerExperienceType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.InitNewbieComponent");

	ASTExtraPlayerController_InitNewbieComponent_Params params;
	params.FinishedGuide = FinishedGuide;
	params.FinishedCounts = FinishedCounts;
	params.PlayerLevel = PlayerLevel;
	params.PlayerExperienceType = PlayerExperienceType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.InitJoyStickAfterActivation
// (Event, Public, BlueprintEvent)

void ASTExtraPlayerController::InitJoyStickAfterActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.InitJoyStickAfterActivation");

	ASTExtraPlayerController_InitJoyStickAfterActivation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.HideEmoteWheel
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::HideEmoteWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.HideEmoteWheel");

	ASTExtraPlayerController_HideEmoteWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.HandleLandOnGroundEnd
// (Final, Native, Protected)

void ASTExtraPlayerController::HandleLandOnGroundEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.HandleLandOnGroundEnd");

	ASTExtraPlayerController_HandleLandOnGroundEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.HandleClipboard
// (Final, Native, Private)

void ASTExtraPlayerController::HandleClipboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.HandleClipboard");

	ASTExtraPlayerController_HandleClipboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.HandleClientHasReactivated
// (Final, Native, Protected)

void ASTExtraPlayerController::HandleClientHasReactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.HandleClientHasReactivated");

	ASTExtraPlayerController_HandleClientHasReactivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.HandleCameraModeChanged
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EPlayerCameraMode> NewMode                        (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::HandleCameraModeChanged(TEnumAsByte<EPlayerCameraMode> NewMode, class ASTExtraBaseCharacter* InCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.HandleCameraModeChanged");

	ASTExtraPlayerController_HandleCameraModeChanged_Params params;
	params.NewMode = NewMode;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GotoSpectating
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            TeammatePlayerid               (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerController::GotoSpectating(int TeammatePlayerid)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GotoSpectating");

	ASTExtraPlayerController_GotoSpectating_Params params;
	params.TeammatePlayerid = TeammatePlayerid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GotoFlying
// (Final, Exec, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::GotoFlying()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GotoFlying");

	ASTExtraPlayerController_GotoFlying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GMTeleport
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   Teleporter                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::GMTeleport(const struct FName& Teleporter)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GMTeleport");

	ASTExtraPlayerController_GMTeleport_Params params;
	params.Teleporter = Teleporter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GMServerTeleport
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   Teleporter                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::GMServerTeleport(const struct FName& Teleporter)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GMServerTeleport");

	ASTExtraPlayerController_GMServerTeleport_Params params;
	params.Teleporter = Teleporter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetWriteCircleDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerController::GetWriteCircleDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetWriteCircleDistance");

	ASTExtraPlayerController_GetWriteCircleDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetViewPortDPIScale
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraPlayerController::GetViewPortDPIScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetViewPortDPIScale");

	ASTExtraPlayerController_GetViewPortDPIScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetUseMotionControlLog
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::GetUseMotionControlLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetUseMotionControlLog");

	ASTExtraPlayerController_GetUseMotionControlLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetUseMotionControlEnable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::GetUseMotionControlEnable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetUseMotionControlEnable");

	ASTExtraPlayerController_GetUseMotionControlEnable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetTouchForce
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraPlayerController::GetTouchForce(TEnumAsByte<ETouchIndex> FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetTouchForce");

	ASTExtraPlayerController_GetTouchForce_Params params;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetThePlane
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* ASTExtraPlayerController::GetThePlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetThePlane");

	ASTExtraPlayerController_GetThePlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetTargetedSpringArm
// (Final, Native, Public)
// Parameters:
// class USpringArmComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USpringArmComponent* ASTExtraPlayerController::GetTargetedSpringArm()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetTargetedSpringArm");

	ASTExtraPlayerController_GetTargetedSpringArm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetStatTriangles
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerController::GetStatTriangles()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetStatTriangles");

	ASTExtraPlayerController_GetStatTriangles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetStatMemory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASTExtraPlayerController::GetStatMemory()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetStatMemory");

	ASTExtraPlayerController_GetStatMemory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetStatDrawCalls
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerController::GetStatDrawCalls()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetStatDrawCalls");

	ASTExtraPlayerController_GetStatDrawCalls_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetSensibilityRate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           bIsMotionControl               (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ASTExtraPlayerController::GetSensibilityRate(bool bIsMotionControl)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetSensibilityRate");

	ASTExtraPlayerController_GetSensibilityRate_Params params;
	params.bIsMotionControl = bIsMotionControl;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetPlayerCharacterSafety
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* ASTExtraPlayerController::GetPlayerCharacterSafety()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetPlayerCharacterSafety");

	ASTExtraPlayerController_GetPlayerCharacterSafety_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetNewestAirDropBoxPos
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraPlayerController::GetNewestAirDropBoxPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetNewestAirDropBoxPos");

	ASTExtraPlayerController_GetNewestAirDropBoxPos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetNearPlayerList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FPlayerInfoInOB> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPlayerInfoInOB> ASTExtraPlayerController::GetNearPlayerList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetNearPlayerList");

	ASTExtraPlayerController_GetNearPlayerList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetMurderName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASTExtraPlayerController::GetMurderName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetMurderName");

	ASTExtraPlayerController_GetMurderName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetMurderIsAI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::GetMurderIsAI()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetMurderIsAI");

	ASTExtraPlayerController_GetMurderIsAI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetMultiItemFromItemList
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int>                    ItemSpecifiedID                (Parm, ZeroConstructor)
// TArray<struct FBattleItemData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleItemData> ASTExtraPlayerController::GetMultiItemFromItemList(TArray<int> ItemSpecifiedID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetMultiItemFromItemList");

	ASTExtraPlayerController_GetMultiItemFromItemList_Params params;
	params.ItemSpecifiedID = ItemSpecifiedID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetMaxTouchForceFinger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ETouchIndex>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ETouchIndex> ASTExtraPlayerController::GetMaxTouchForceFinger()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetMaxTouchForceFinger");

	ASTExtraPlayerController_GetMaxTouchForceFinger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetKeysForAction
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FInputActionKeyMapping> Bindings                       (Parm, OutParm, ZeroConstructor)

void ASTExtraPlayerController::GetKeysForAction(const struct FName& ActionName, TArray<struct FInputActionKeyMapping>* Bindings)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetKeysForAction");

	ASTExtraPlayerController_GetKeysForAction_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Bindings != nullptr)
		*Bindings = params.Bindings;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetJoyStickVisualSize
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D ASTExtraPlayerController::GetJoyStickVisualSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetJoyStickVisualSize");

	ASTExtraPlayerController_GetJoyStickVisualSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetJoyStickCenter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D ASTExtraPlayerController::GetJoyStickCenter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetJoyStickCenter");

	ASTExtraPlayerController_GetJoyStickCenter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetGameStateReconnectInfoOnServer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraPlayerController::GetGameStateReconnectInfoOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetGameStateReconnectInfoOnServer");

	ASTExtraPlayerController_GetGameStateReconnectInfoOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetGameScreenSize
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::GetGameScreenSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetGameScreenSize");

	ASTExtraPlayerController_GetGameScreenSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetFriendDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerController::GetFriendDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetFriendDistance");

	ASTExtraPlayerController_GetFriendDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetFocalLocation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraPlayerController::GetFocalLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetFocalLocation");

	ASTExtraPlayerController_GetFocalLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetCurrentBuildVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASTExtraPlayerController::STATIC_GetCurrentBuildVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetCurrentBuildVersion");

	ASTExtraPlayerController_GetCurrentBuildVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetCurPlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerState*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerState* ASTExtraPlayerController::GetCurPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetCurPlayerState");

	ASTExtraPlayerController_GetCurPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetCurPlayerId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerController::GetCurPlayerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetCurPlayerId");

	ASTExtraPlayerController_GetCurPlayerId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetCurPawnLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraPlayerController::GetCurPawnLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetCurPawnLocation");

	ASTExtraPlayerController_GetCurPawnLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetCurPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* ASTExtraPlayerController::GetCurPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetCurPawn");

	ASTExtraPlayerController_GetCurPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetCurFPS
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraPlayerController::GetCurFPS()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetCurFPS");

	ASTExtraPlayerController_GetCurFPS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetControlLookRotation
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ASTExtraPlayerController::GetControlLookRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetControlLookRotation");

	ASTExtraPlayerController_GetControlLookRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetControlLookPoint
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// int                            LineTraceRange                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           HitTaget                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraPlayerController::GetControlLookPoint(int LineTraceRange, bool* HitTaget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetControlLookPoint");

	ASTExtraPlayerController_GetControlLookPoint_Params params;
	params.LineTraceRange = LineTraceRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HitTaget != nullptr)
		*HitTaget = params.HitTaget;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetChatComponent
// (Final, Native, Public)
// Parameters:
// class UChatComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UChatComponent* ASTExtraPlayerController::GetChatComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetChatComponent");

	ASTExtraPlayerController_GetChatComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetBackpackComponent
// (Final, Native, Public)
// Parameters:
// class UBackpackComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBackpackComponent* ASTExtraPlayerController::GetBackpackComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetBackpackComponent");

	ASTExtraPlayerController_GetBackpackComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GetAirplaneActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* ASTExtraPlayerController::GetAirplaneActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GetAirplaneActor");

	ASTExtraPlayerController_GetAirplaneActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GenerateAirDropData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            boxId                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FSearchedTombBoxAndWrapperListResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSearchedTombBoxAndWrapperListResult> ASTExtraPlayerController::GenerateAirDropData(int boxId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GenerateAirDropData");

	ASTExtraPlayerController_GenerateAirDropData_Params params;
	params.boxId = boxId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GameModeGotoNextState
// (Final, Exec, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::GameModeGotoNextState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GameModeGotoNextState");

	ASTExtraPlayerController_GameModeGotoNextState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.GameModeGotoFightingState
// (Final, Exec, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::GameModeGotoFightingState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.GameModeGotoFightingState");

	ASTExtraPlayerController_GameModeGotoFightingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.FreeCameraTouchMove
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Loc                            (Parm, IsPlainOldData)
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::FreeCameraTouchMove(const struct FVector& Loc, TEnumAsByte<ETouchIndex> FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.FreeCameraTouchMove");

	ASTExtraPlayerController_FreeCameraTouchMove_Params params;
	params.Loc = Loc;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ForceReleaseCurTouchMoveFinger
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::ForceReleaseCurTouchMoveFinger()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ForceReleaseCurTouchMoveFinger");

	ASTExtraPlayerController_ForceReleaseCurTouchMoveFinger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.FireTakeDamagedEvent
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 CauserLocation                 (Parm, IsPlainOldData)

void ASTExtraPlayerController::FireTakeDamagedEvent(const struct FVector& CauserLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.FireTakeDamagedEvent");

	ASTExtraPlayerController_FireTakeDamagedEvent_Params params;
	params.CauserLocation = CauserLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.Fight
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::Fight()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.Fight");

	ASTExtraPlayerController_Fight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ExitFreeCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsForceReset                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ExitFreeCamera(bool IsForceReset)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ExitFreeCamera");

	ASTExtraPlayerController_ExitFreeCamera_Params params;
	params.IsForceReset = IsForceReset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.EndTouchScreen
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Loc                            (Parm, IsPlainOldData)
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::EndTouchScreen(const struct FVector& Loc, TEnumAsByte<ETouchIndex> FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.EndTouchScreen");

	ASTExtraPlayerController_EndTouchScreen_Params params;
	params.Loc = Loc;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.EnablePlayerInHouse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsIn                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::EnablePlayerInHouse(bool bIsIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.EnablePlayerInHouse");

	ASTExtraPlayerController_EnablePlayerInHouse_Params params;
	params.bIsIn = bIsIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.EnableMyLandscapeDraw
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::EnableMyLandscapeDraw()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.EnableMyLandscapeDraw");

	ASTExtraPlayerController_EnableMyLandscapeDraw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.EmoteWheelCalledWithNumberSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::EmoteWheelCalledWithNumberSelected(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.EmoteWheelCalledWithNumberSelected");

	ASTExtraPlayerController_EmoteWheelCalledWithNumberSelected_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DoUITouchMove
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Loc                            (Parm, IsPlainOldData)

void ASTExtraPlayerController::DoUITouchMove(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DoUITouchMove");

	ASTExtraPlayerController_DoUITouchMove_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DoubleClickCancel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TEnumAsByte<ETouchIndex>       FingerIndex                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::DoubleClickCancel(TEnumAsByte<ETouchIndex> FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DoubleClickCancel");

	ASTExtraPlayerController_DoubleClickCancel_Params params;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DoTouchMove
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Yaw                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Pitch                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::DoTouchMove(float Yaw, float Pitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DoTouchMove");

	ASTExtraPlayerController_DoTouchMove_Params params;
	params.Yaw = Yaw;
	params.Pitch = Pitch;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DisplayGameTipWithMsgIDAndString
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 param1                         (Parm, ZeroConstructor)
// struct FString                 param2                         (Parm, ZeroConstructor)

void ASTExtraPlayerController::DisplayGameTipWithMsgIDAndString(int ID, const struct FString& param1, const struct FString& param2)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DisplayGameTipWithMsgIDAndString");

	ASTExtraPlayerController_DisplayGameTipWithMsgIDAndString_Params params;
	params.ID = ID;
	params.param1 = param1;
	params.param2 = param2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DisplayGameTipWithMsgID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::DisplayGameTipWithMsgID(int ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DisplayGameTipWithMsgID");

	ASTExtraPlayerController_DisplayGameTipWithMsgID_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DisplayGameTipForLowFPSWarning
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 param1                         (Parm, ZeroConstructor)
// struct FString                 param2                         (Parm, ZeroConstructor)

void ASTExtraPlayerController::DisplayGameTipForLowFPSWarning(int ID, const struct FString& param1, const struct FString& param2)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DisplayGameTipForLowFPSWarning");

	ASTExtraPlayerController_DisplayGameTipForLowFPSWarning_Params params;
	params.ID = ID;
	params.param1 = param1;
	params.param2 = param2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DispatchPlayerRespawnedEvent
// (Final, Native, Public)
// Parameters:
// class AUAEPlayerController*    PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::DispatchPlayerRespawnedEvent(class AUAEPlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DispatchPlayerRespawnedEvent");

	ASTExtraPlayerController_DispatchPlayerRespawnedEvent_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DispatchPlayerReconnectedEvent
// (Final, Native, Public)

void ASTExtraPlayerController::DispatchPlayerReconnectedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DispatchPlayerReconnectedEvent");

	ASTExtraPlayerController_DispatchPlayerReconnectedEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DispatchPlayerLostEvent
// (Final, Native, Public)

void ASTExtraPlayerController::DispatchPlayerLostEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DispatchPlayerLostEvent");

	ASTExtraPlayerController_DispatchPlayerLostEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DispatchPlayerExitEvent
// (Final, Native, Public)

void ASTExtraPlayerController::DispatchPlayerExitEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DispatchPlayerExitEvent");

	ASTExtraPlayerController_DispatchPlayerExitEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DispatchPlayerAboutToRespawnEvent
// (Final, Native, Public)
// Parameters:
// class AUAEPlayerController*    PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::DispatchPlayerAboutToRespawnEvent(class AUAEPlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DispatchPlayerAboutToRespawnEvent");

	ASTExtraPlayerController_DispatchPlayerAboutToRespawnEvent_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DisableMyLandscapeDraw
// (Final, Exec, Native, Public)

void ASTExtraPlayerController::DisableMyLandscapeDraw()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DisableMyLandscapeDraw");

	ASTExtraPlayerController_DisableMyLandscapeDraw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DelayForceExitFreeCamera
// (Final, Native, Public)

void ASTExtraPlayerController::DelayForceExitFreeCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DelayForceExitFreeCamera");

	ASTExtraPlayerController_DelayForceExitFreeCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DebugSetUIVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bUIVisibility                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::DebugSetUIVisibility(bool bUIVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DebugSetUIVisibility");

	ASTExtraPlayerController_DebugSetUIVisibility_Params params;
	params.bUIVisibility = bUIVisibility;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DealGetAllNearShotWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          disRate                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::DealGetAllNearShotWeapon(float disRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DealGetAllNearShotWeapon");

	ASTExtraPlayerController_DealGetAllNearShotWeapon_Params params;
	params.disRate = disRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DealGetAllNearMoveVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          checkDis                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          minSpeed                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::DealGetAllNearMoveVehicle(float checkDis, float minSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DealGetAllNearMoveVehicle");

	ASTExtraPlayerController_DealGetAllNearMoveVehicle_Params params;
	params.checkDis = checkDis;
	params.minSpeed = minSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.DealGetAllNearMoveCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          checkDis                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::DealGetAllNearMoveCharacter(float checkDis)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.DealGetAllNearMoveCharacter");

	ASTExtraPlayerController_DealGetAllNearMoveCharacter_Params params;
	params.checkDis = checkDis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.CloseKickPlayerWarningPopup
// (Final, Native, Public)
// Parameters:
// EPopupButtonID                 ButtonID                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::CloseKickPlayerWarningPopup(EPopupButtonID ButtonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.CloseKickPlayerWarningPopup");

	ASTExtraPlayerController_CloseKickPlayerWarningPopup_Params params;
	params.ButtonID = ButtonID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientWasWarnedTobeKickedTP
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FText                   KickReason                     (ConstParm, Parm, ReferenceParm)

void ASTExtraPlayerController::ClientWasWarnedTobeKickedTP(const struct FText& KickReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientWasWarnedTobeKickedTP");

	ASTExtraPlayerController_ClientWasWarnedTobeKickedTP_Params params;
	params.KickReason = KickReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientWasKickedToLobbyTP
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FText                   KickReason                     (ConstParm, Parm, ReferenceParm)

void ASTExtraPlayerController::ClientWasKickedToLobbyTP(const struct FText& KickReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientWasKickedToLobbyTP");

	ASTExtraPlayerController_ClientWasKickedToLobbyTP_Params params;
	params.KickReason = KickReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientWasKickedAndExitTP
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FText                   KickReason                     (ConstParm, Parm, ReferenceParm)

void ASTExtraPlayerController::ClientWasKickedAndExitTP(const struct FText& KickReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientWasKickedAndExitTP");

	ASTExtraPlayerController_ClientWasKickedAndExitTP_Params params;
	params.KickReason = KickReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientStartOnlineGame
// (Net, NetReliable, Native, Event, Public, NetClient)

void ASTExtraPlayerController::ClientStartOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientStartOnlineGame");

	ASTExtraPlayerController_ClientStartOnlineGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientSendRoundEndEvent
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bIsWinner                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ExpendedTimeInSeconds          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ClientSendRoundEndEvent(bool bIsWinner, int ExpendedTimeInSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientSendRoundEndEvent");

	ASTExtraPlayerController_ClientSendRoundEndEvent_Params params;
	params.bIsWinner = bIsWinner;
	params.ExpendedTimeInSeconds = ExpendedTimeInSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientOnMsg
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor)

void ASTExtraPlayerController::ClientOnMsg(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientOnMsg");

	ASTExtraPlayerController_ClientOnMsg_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientOnHurt
// (Net, NetReliable, Native, Event, Public, NetClient)

void ASTExtraPlayerController::ClientOnHurt()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientOnHurt");

	ASTExtraPlayerController_ClientOnHurt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientOnDamageToOther
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          _DamageToOther                 (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ClientOnDamageToOther(float _DamageToOther)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientOnDamageToOther");

	ASTExtraPlayerController_ClientOnDamageToOther_Params params;
	params._DamageToOther = _DamageToOther;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientObserveCharacter
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32_t                       InPlayerKey                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsOnPlane                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ClientObserveCharacter(uint32_t InPlayerKey, bool IsOnPlane)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientObserveCharacter");

	ASTExtraPlayerController_ClientObserveCharacter_Params params;
	params.InPlayerKey = InPlayerKey;
	params.IsOnPlane = IsOnPlane;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientInitIngameUIAfterRespawn
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)

void ASTExtraPlayerController::ClientInitIngameUIAfterRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientInitIngameUIAfterRespawn");

	ASTExtraPlayerController_ClientInitIngameUIAfterRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientHearSound
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// int                            AkEventID                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 AkLocation                     (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ASTExtraPlayerController::ClientHearSound(int AkEventID, const struct FVector& AkLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientHearSound");

	ASTExtraPlayerController_ClientHearSound_Params params;
	params.AkEventID = AkEventID;
	params.AkLocation = AkLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientGameStarted
// (Net, NetReliable, Native, Event, Public, NetClient)

void ASTExtraPlayerController::ClientGameStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientGameStarted");

	ASTExtraPlayerController_ClientGameStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientEnterViewBox
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            boxId                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ClientEnterViewBox(int boxId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientEnterViewBox");

	ASTExtraPlayerController_ClientEnterViewBox_Params params;
	params.boxId = boxId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientEndOnlineGame
// (Net, NetReliable, Native, Event, Public, NetClient)

void ASTExtraPlayerController::ClientEndOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientEndOnlineGame");

	ASTExtraPlayerController_ClientEndOnlineGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClientDisplayGameTipWithMsgID
// (Net, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ClientDisplayGameTipWithMsgID(int ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClientDisplayGameTipWithMsgID");

	ASTExtraPlayerController_ClientDisplayGameTipWithMsgID_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ClampFreeCamIconOffset
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGeometry               MyGeometry                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D ASTExtraPlayerController::ClampFreeCamIconOffset(const struct FGeometry& MyGeometry)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ClampFreeCamIconOffset");

	ASTExtraPlayerController_ClampFreeCamIconOffset_Params params;
	params.MyGeometry = MyGeometry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ChangeSpectatorStateToFreeView
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerController::ChangeSpectatorStateToFreeView()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ChangeSpectatorStateToFreeView");

	ASTExtraPlayerController_ChangeSpectatorStateToFreeView_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.CanTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::CanTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.CanTarget");

	ASTExtraPlayerController_CanTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.CanSeeAllUI
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bUIVisibility                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::CanSeeAllUI(bool bUIVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.CanSeeAllUI");

	ASTExtraPlayerController_CanSeeAllUI_Params params;
	params.bUIVisibility = bUIVisibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.CallTeamMateStateChanged
// (Final, Native, Public, HasDefaults)
// Parameters:
// class ASTExtraPlayerState*     STPlayerState                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, IsPlainOldData)
// float                          Health                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            VoiceID                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::CallTeamMateStateChanged(class ASTExtraPlayerState* STPlayerState, const struct FVector& Location, const struct FRotator& Rotation, float Health, int VoiceID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.CallTeamMateStateChanged");

	ASTExtraPlayerController_CallTeamMateStateChanged_Params params;
	params.STPlayerState = STPlayerState;
	params.Location = Location;
	params.Rotation = Rotation;
	params.Health = Health;
	params.VoiceID = VoiceID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.CallShowTouchInterface
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           InShow                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::CallShowTouchInterface(bool InShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.CallShowTouchInterface");

	ASTExtraPlayerController_CallShowTouchInterface_Params params;
	params.InShow = InShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.CalInputFromRotaionRate
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// float                          OutPitch                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutYaw                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bIsAddPitch                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bIsAddYaw                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 CurMotionData                  (Parm, IsPlainOldData)
// float                          PitchReverce                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          MotionTouchRate_Pitch          (Parm, ZeroConstructor, IsPlainOldData)
// float                          MotionTouchAimRate_Pitch       (Parm, ZeroConstructor, IsPlainOldData)
// float                          MotionRate_Pitch               (Parm, ZeroConstructor, IsPlainOldData)
// float                          MotionAimRate_Pitch            (Parm, ZeroConstructor, IsPlainOldData)
// float                          MotionTouchRate_Yaw            (Parm, ZeroConstructor, IsPlainOldData)
// float                          MotionTouchAimRate_Yaw         (Parm, ZeroConstructor, IsPlainOldData)
// float                          MotionRate_Yaw                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          MotionAimRate_Yaw              (Parm, ZeroConstructor, IsPlainOldData)
// float                          MotionRate_Pitch_Threshold     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MotionRate_Yaw_Threshold       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Left                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          Right                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bLandScapeOrientation          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::CalInputFromRotaionRate(const struct FVector& CurMotionData, float PitchReverce, float MotionTouchRate_Pitch, float MotionTouchAimRate_Pitch, float MotionRate_Pitch, float MotionAimRate_Pitch, float MotionTouchRate_Yaw, float MotionTouchAimRate_Yaw, float MotionRate_Yaw, float MotionAimRate_Yaw, float MotionRate_Pitch_Threshold, float MotionRate_Yaw_Threshold, float Left, float Right, bool bLandScapeOrientation, float* OutPitch, float* OutYaw, bool* bIsAddPitch, bool* bIsAddYaw)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.CalInputFromRotaionRate");

	ASTExtraPlayerController_CalInputFromRotaionRate_Params params;
	params.CurMotionData = CurMotionData;
	params.PitchReverce = PitchReverce;
	params.MotionTouchRate_Pitch = MotionTouchRate_Pitch;
	params.MotionTouchAimRate_Pitch = MotionTouchAimRate_Pitch;
	params.MotionRate_Pitch = MotionRate_Pitch;
	params.MotionAimRate_Pitch = MotionAimRate_Pitch;
	params.MotionTouchRate_Yaw = MotionTouchRate_Yaw;
	params.MotionTouchAimRate_Yaw = MotionTouchAimRate_Yaw;
	params.MotionRate_Yaw = MotionRate_Yaw;
	params.MotionAimRate_Yaw = MotionAimRate_Yaw;
	params.MotionRate_Pitch_Threshold = MotionRate_Pitch_Threshold;
	params.MotionRate_Yaw_Threshold = MotionRate_Yaw_Threshold;
	params.Left = Left;
	params.Right = Right;
	params.bLandScapeOrientation = bLandScapeOrientation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPitch != nullptr)
		*OutPitch = params.OutPitch;
	if (OutYaw != nullptr)
		*OutYaw = params.OutYaw;
	if (bIsAddPitch != nullptr)
		*bIsAddPitch = params.bIsAddPitch;
	if (bIsAddYaw != nullptr)
		*bIsAddYaw = params.bIsAddYaw;
}


// Function ShadowTrackerExtra.STExtraPlayerController.CalcAttactBtnPos
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                          locX                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          locY                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          SizeX                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          SizeY                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D ASTExtraPlayerController::CalcAttactBtnPos(float locX, float locY, float SizeX, float SizeY)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.CalcAttactBtnPos");

	ASTExtraPlayerController_CalcAttactBtnPos_Params params;
	params.locX = locX;
	params.locY = locY;
	params.SizeX = SizeX;
	params.SizeY = SizeY;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.C2S_RequestSkillPrompt
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraPlayerController::C2S_RequestSkillPrompt()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.C2S_RequestSkillPrompt");

	ASTExtraPlayerController_C2S_RequestSkillPrompt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.C2S_RequestBeingRescuedRemainingTime
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ASTExtraPlayerController::C2S_RequestBeingRescuedRemainingTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.C2S_RequestBeingRescuedRemainingTime");

	ASTExtraPlayerController_C2S_RequestBeingRescuedRemainingTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.BroadcastFatalDamageToClient
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 CauserName                     (Parm, ZeroConstructor)
// struct FString                 VictimName                     (Parm, ZeroConstructor)
// int                            DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            AdditionalParam                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadshot                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ResultHealthStatus             (Parm, ZeroConstructor, IsPlainOldData)
// int                            Relationship                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            PreviousHealthStatus           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 realKillerName                 (Parm, ZeroConstructor)
// int                            realKillerNewKillNum           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::BroadcastFatalDamageToClient(const struct FString& CauserName, const struct FString& VictimName, int DamageType, int AdditionalParam, bool IsHeadshot, int ResultHealthStatus, int Relationship, int PreviousHealthStatus, const struct FString& realKillerName, int realKillerNewKillNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.BroadcastFatalDamageToClient");

	ASTExtraPlayerController_BroadcastFatalDamageToClient_Params params;
	params.CauserName = CauserName;
	params.VictimName = VictimName;
	params.DamageType = DamageType;
	params.AdditionalParam = AdditionalParam;
	params.IsHeadshot = IsHeadshot;
	params.ResultHealthStatus = ResultHealthStatus;
	params.Relationship = Relationship;
	params.PreviousHealthStatus = PreviousHealthStatus;
	params.realKillerName = realKillerName;
	params.realKillerNewKillNum = realKillerNewKillNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.BroadcastClientsSpawnExplosionEffect
// (Net, Native, Event, NetMulticast, Public, HasDefaults, NetValidate)
// Parameters:
// class UClass*                  Template                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              Trans                          (Parm, IsPlainOldData)
// class AActor*                  ActorOwner                     (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   InstigatorPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// ESpawnActorCollisionHandlingMethod method                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::BroadcastClientsSpawnExplosionEffect(class UClass* Template, const struct FTransform& Trans, class AActor* ActorOwner, class APawn* InstigatorPawn, ESpawnActorCollisionHandlingMethod method)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.BroadcastClientsSpawnExplosionEffect");

	ASTExtraPlayerController_BroadcastClientsSpawnExplosionEffect_Params params;
	params.Template = Template;
	params.Trans = Trans;
	params.ActorOwner = ActorOwner;
	params.InstigatorPawn = InstigatorPawn;
	params.method = method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.BPGetIsAndroidSimulator
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::BPGetIsAndroidSimulator()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.BPGetIsAndroidSimulator");

	ASTExtraPlayerController_BPGetIsAndroidSimulator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.BP_OceanSideDetected
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 OceansideLocation              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bDetectedRiver                 (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::BP_OceanSideDetected(const struct FVector& OceansideLocation, bool bDetectedRiver)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.BP_OceanSideDetected");

	ASTExtraPlayerController_BP_OceanSideDetected_Params params;
	params.OceansideLocation = OceansideLocation;
	params.bDetectedRiver = bDetectedRiver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.BeginTouchScreen
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Loc                            (Parm, IsPlainOldData)
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::BeginTouchScreen(const struct FVector& Loc, TEnumAsByte<ETouchIndex> FingerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.BeginTouchScreen");

	ASTExtraPlayerController_BeginTouchScreen_Params params;
	params.Loc = Loc;
	params.FingerIndex = FingerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.BackToGameDataRefresh
// (Final, Native, Private)

void ASTExtraPlayerController::BackToGameDataRefresh()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.BackToGameDataRefresh");

	ASTExtraPlayerController_BackToGameDataRefresh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.AutoSelectViewTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerController::AutoSelectViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.AutoSelectViewTarget");

	ASTExtraPlayerController_AutoSelectViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerController.AddTouchMoveFinger
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TEnumAsByte<ETouchIndex>       FingerIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Priority                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TouchLoc                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ASTExtraPlayerController::AddTouchMoveFinger(TEnumAsByte<ETouchIndex> FingerIndex, unsigned char Priority, const struct FVector& TouchLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.AddTouchMoveFinger");

	ASTExtraPlayerController_AddTouchMoveFinger_Params params;
	params.FingerIndex = FingerIndex;
	params.Priority = Priority;
	params.TouchLoc = TouchLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.AddItem
// (Final, Exec, Native, Public)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::AddItem(int ID, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.AddItem");

	ASTExtraPlayerController_AddItem_Params params;
	params.ID = ID;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.AddEmote
// (Final, Exec, Native, Public)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::AddEmote(int ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.AddEmote");

	ASTExtraPlayerController_AddEmote_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.AddAvatar
// (Final, Exec, Native, Public)
// Parameters:
// int                            AvatarID                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::AddAvatar(int AvatarID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.AddAvatar");

	ASTExtraPlayerController_AddAvatar_Params params;
	params.AvatarID = AvatarID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerController.ActivateTouchInterface
// (Native, Public, BlueprintCallable)
// Parameters:
// class UTouchInterface*         NewTouchInterface              (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerController::ActivateTouchInterface(class UTouchInterface* NewTouchInterface)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerController.ActivateTouchInterface");

	ASTExtraPlayerController_ActivateTouchInterface_Params params;
	params.NewTouchInterface = NewTouchInterface;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.ToggleShootVertify
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::ToggleShootVertify()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.ToggleShootVertify");

	UGMCheatManager_ToggleShootVertify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.TogglePawnInfo
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::TogglePawnInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.TogglePawnInfo");

	UGMCheatManager_TogglePawnInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.TestWeaponAttachment
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEquip                         (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::TestWeaponAttachment(bool bEquip)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.TestWeaponAttachment");

	UGMCheatManager_TestWeaponAttachment_Params params;
	params.bEquip = bEquip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.TestLineTrace
// (Final, Exec, Native, Public)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Z                              (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::TestLineTrace(float X, float Y, float Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.TestLineTrace");

	UGMCheatManager_TestLineTrace_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.TestGameplayDataRecord
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            UID                            (Parm, ZeroConstructor, IsPlainOldData)
// int                            RecordType                     (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::TestGameplayDataRecord(int UID, int RecordType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.TestGameplayDataRecord");

	UGMCheatManager_TestGameplayDataRecord_Params params;
	params.UID = UID;
	params.RecordType = RecordType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.TeleportTo
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          Z                              (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::TeleportTo(float X, float Y, float Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.TeleportTo");

	UGMCheatManager_TeleportTo_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.StartMainTriggerClock
// (Final, Exec, Native, Public)

void UGMCheatManager::StartMainTriggerClock()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.StartMainTriggerClock");

	UGMCheatManager_StartMainTriggerClock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SpawnLevelDirector
// (Final, Exec, Native, Public)

void UGMCheatManager::SpawnLevelDirector()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SpawnLevelDirector");

	UGMCheatManager_SpawnLevelDirector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SpawnFakePlayer
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::SpawnFakePlayer(int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SpawnFakePlayer");

	UGMCheatManager_SpawnFakePlayer_Params params;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SpawnBotForTest
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::SpawnBotForTest(int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SpawnBotForTest");

	UGMCheatManager_SpawnBotForTest_Params params;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SetViewFPP
// (Final, Exec, Native, Public)
// Parameters:
// bool                           IsFPP                          (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::SetViewFPP(bool IsFPP)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SetViewFPP");

	UGMCheatManager_SetViewFPP_Params params;
	params.IsFPP = IsFPP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SetTouchMoveLog
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::SetTouchMoveLog(bool Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SetTouchMoveLog");

	UGMCheatManager_SetTouchMoveLog_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SetTouchMoveDelay
// (Final, Exec, Native, Public)
// Parameters:
// int                            DelayFrame                     (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::SetTouchMoveDelay(int DelayFrame)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SetTouchMoveDelay");

	UGMCheatManager_SetTouchMoveDelay_Params params;
	params.DelayFrame = DelayFrame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SetRateScore
// (Final, Exec, Native, Public)
// Parameters:
// float                          RankScore                      (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::SetRateScore(float RankScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SetRateScore");

	UGMCheatManager_SetRateScore_Params params;
	params.RankScore = RankScore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SetGVMemberID
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            memberID                       (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::SetGVMemberID(int memberID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SetGVMemberID");

	UGMCheatManager_SetGVMemberID_Params params;
	params.memberID = memberID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SetDeliver
// (Final, Exec, Native, Public)

void UGMCheatManager::SetDeliver()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SetDeliver");

	UGMCheatManager_SetDeliver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SetCameraLagEnable
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::SetCameraLagEnable(bool Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SetCameraLagEnable");

	UGMCheatManager_SetCameraLagEnable_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SetCacheInputNum
// (Final, Exec, Native, Public)
// Parameters:
// int                            CacheNum                       (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::SetCacheInputNum(int CacheNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SetCacheInputNum");

	UGMCheatManager_SetCacheInputNum_Params params;
	params.CacheNum = CacheNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.SetAnimEnable
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::SetAnimEnable(bool Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.SetAnimEnable");

	UGMCheatManager_SetAnimEnable_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.PrintWeaponAllState
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::PrintWeaponAllState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.PrintWeaponAllState");

	UGMCheatManager_PrintWeaponAllState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.PrintMainCharAllAvatar
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::PrintMainCharAllAvatar()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.PrintMainCharAllAvatar");

	UGMCheatManager_PrintMainCharAllAvatar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.PrintAllAnim
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::PrintAllAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.PrintAllAnim");

	UGMCheatManager_PrintAllAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.PauseAnim
// (Final, Exec, Native, Public)
// Parameters:
// bool                           bPause                         (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::PauseAnim(bool bPause)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.PauseAnim");

	UGMCheatManager_PauseAnim_Params params;
	params.bPause = bPause;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GotoSpectating
// (Final, Exec, Native, Public)

void UGMCheatManager::GotoSpectating()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GotoSpectating");

	UGMCheatManager_GotoSpectating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMSuicide
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::GMSuicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMSuicide");

	UGMCheatManager_GMSuicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMSpeedUp
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::GMSpeedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMSpeedUp");

	UGMCheatManager_GMSpeedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMSetSpeed
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          WalkSpeed                      (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::GMSetSpeed(float WalkSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMSetSpeed");

	UGMCheatManager_GMSetSpeed_Params params;
	params.WalkSpeed = WalkSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMSetJoystickEightDirection
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsNeedEightDirection           (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::GMSetJoystickEightDirection(bool IsNeedEightDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMSetJoystickEightDirection");

	UGMCheatManager_GMSetJoystickEightDirection_Params params;
	params.IsNeedEightDirection = IsNeedEightDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMSetJoystickActivatedRange
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsNeedActivatedRange           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ActivatedRange                 (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::GMSetJoystickActivatedRange(bool IsNeedActivatedRange, float ActivatedRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMSetJoystickActivatedRange");

	UGMCheatManager_GMSetJoystickActivatedRange_Params params;
	params.IsNeedActivatedRange = IsNeedActivatedRange;
	params.ActivatedRange = ActivatedRange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMSetHealth
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::GMSetHealth(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMSetHealth");

	UGMCheatManager_GMSetHealth_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMSetCircleTime
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          CDTime                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          LastTime                       (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::GMSetCircleTime(float CDTime, float LastTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMSetCircleTime");

	UGMCheatManager_GMSetCircleTime_Params params;
	params.CDTime = CDTime;
	params.LastTime = LastTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMIOSFrameRateLock
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            FrameRateLock                  (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::GMIOSFrameRateLock(int FrameRateLock)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMIOSFrameRateLock");

	UGMCheatManager_GMIOSFrameRateLock_Params params;
	params.FrameRateLock = FrameRateLock;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMInvincible
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsInvincible                   (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::GMInvincible(bool IsInvincible)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMInvincible");

	UGMCheatManager_GMInvincible_Params params;
	params.IsInvincible = IsInvincible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMFollow
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 TargetName                     (Parm, ZeroConstructor)

void UGMCheatManager::GMFollow(const struct FString& TargetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMFollow");

	UGMCheatManager_GMFollow_Params params;
	params.TargetName = TargetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GMDecreaseHealth
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::GMDecreaseHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GMDecreaseHealth");

	UGMCheatManager_GMDecreaseHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.GetGVMemberID
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            memberID                       (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::GetGVMemberID(int memberID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.GetGVMemberID");

	UGMCheatManager_GetGVMemberID_Params params;
	params.memberID = memberID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.ForceGC
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::ForceGC()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.ForceGC");

	UGMCheatManager_ForceGC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.ForceEndInputForAppWillDeactivate
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::ForceEndInputForAppWillDeactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.ForceEndInputForAppWillDeactivate");

	UGMCheatManager_ForceEndInputForAppWillDeactivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.FallKill
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            Type                           (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::FallKill(int Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.FallKill");

	UGMCheatManager_FallKill_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.DebugStopCapture
// (Final, Exec, Native, Public, BlueprintCallable)

void UGMCheatManager::DebugStopCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.DebugStopCapture");

	UGMCheatManager_DebugStopCapture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.AutoSetPlayerLocation
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::AutoSetPlayerLocation(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.AutoSetPlayerLocation");

	UGMCheatManager_AutoSetPlayerLocation_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GMCheatManager.AddScore
// (Final, Exec, Native, Public)
// Parameters:
// int                            Score                          (Parm, ZeroConstructor, IsPlainOldData)

void UGMCheatManager::AddScore(int Score)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GMCheatManager.AddScore");

	UGMCheatManager_AddScore_Params params;
	params.Score = Score;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GroundFlagWidget.SetWorldPos
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Loc                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UGroundFlagWidget::SetWorldPos(const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GroundFlagWidget.SetWorldPos");

	UGroundFlagWidget_SetWorldPos_Params params;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STNewbieGuideSuccessListenerBase.ReconnectRecover
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTNewbieGuideSuccessListenerBase::ReconnectRecover()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STNewbieGuideSuccessListenerBase.ReconnectRecover");

	USTNewbieGuideSuccessListenerBase_ReconnectRecover_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STNewbieGuideSuccessListenerBase.GuideFinishedByPlayer
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTNewbieGuideSuccessListenerBase::GuideFinishedByPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STNewbieGuideSuccessListenerBase.GuideFinishedByPlayer");

	USTNewbieGuideSuccessListenerBase_GuideFinishedByPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STNewbieGuideSuccessListenerBase.EnableListener
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTNewbieGuideSuccessListenerBase::EnableListener()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STNewbieGuideSuccessListenerBase.EnableListener");

	USTNewbieGuideSuccessListenerBase_EnableListener_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STNewbieGuideSuccessListenerBase.DisableListener
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTNewbieGuideSuccessListenerBase::DisableListener()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STNewbieGuideSuccessListenerBase.DisableListener");

	USTNewbieGuideSuccessListenerBase_DisableListener_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.GSListener_JoystickActive.ReceiveJoystickInput
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D               JSInput                        (Parm, IsPlainOldData)
// struct FVector2D               Size                           (Parm, IsPlainOldData)

void UGSListener_JoystickActive::ReceiveJoystickInput(const struct FVector2D& JSInput, const struct FVector2D& Size)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GSListener_JoystickActive.ReceiveJoystickInput");

	UGSListener_JoystickActive_ReceiveJoystickInput_Params params;
	params.JSInput = JSInput;
	params.Size = Size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GSListener_PlayerUseRecoverItem.OnPlayerUseRecoverItem
// (Final, Native, Public)

void UGSListener_PlayerUseRecoverItem::OnPlayerUseRecoverItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GSListener_PlayerUseRecoverItem.OnPlayerUseRecoverItem");

	UGSListener_PlayerUseRecoverItem_OnPlayerUseRecoverItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GSListener_ShakeCamera.ReceiveCameraShake
// (Final, Native, Public)

void UGSListener_ShakeCamera::ReceiveCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GSListener_ShakeCamera.ReceiveCameraShake");

	UGSListener_ShakeCamera_ReceiveCameraShake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GSListener_SwitchToMainWeapon.OnCurUsingWeaponChange
// (Final, Native, Public)
// Parameters:
// ESurviveWeaponPropSlot         targetSlot                     (Parm, ZeroConstructor, IsPlainOldData)

void UGSListener_SwitchToMainWeapon::OnCurUsingWeaponChange(ESurviveWeaponPropSlot targetSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GSListener_SwitchToMainWeapon.OnCurUsingWeaponChange");

	UGSListener_SwitchToMainWeapon_OnCurUsingWeaponChange_Params params;
	params.targetSlot = targetSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GuideComponent.SetMaskWidgetOnTop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bTop                           (Parm, ZeroConstructor, IsPlainOldData)

void UGuideComponent::SetMaskWidgetOnTop(bool bTop)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GuideComponent.SetMaskWidgetOnTop");

	UGuideComponent_SetMaskWidgetOnTop_Params params;
	params.bTop = bTop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.GuideComponent.CreateGuideUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGuideComponent::CreateGuideUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.GuideComponent.CreateGuideUI");

	UGuideComponent_CreateGuideUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.HackReporterComponent.ServerOnWallHackDetected
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   Victim                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UHackReporterComponent::ServerOnWallHackDetected(class ASTExtraBaseCharacter* Victim, float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.HackReporterComponent.ServerOnWallHackDetected");

	UHackReporterComponent_ServerOnWallHackDetected_Params params;
	params.Victim = Victim;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.HackReporterComponent.ServerOnTamperDetected
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint64_t                       tp_base                        (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       tp_size                        (Parm, ZeroConstructor, IsPlainOldData)

void UHackReporterComponent::ServerOnTamperDetected(uint64_t tp_base, uint32_t tp_size)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.HackReporterComponent.ServerOnTamperDetected");

	UHackReporterComponent_ServerOnTamperDetected_Params params;
	params.tp_base = tp_base;
	params.tp_size = tp_size;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.HackReporterComponent.ServerOnHookDetected
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ObjectName                     (Parm, ZeroConstructor)

void UHackReporterComponent::ServerOnHookDetected(int Type, int Count, const struct FString& ObjectName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.HackReporterComponent.ServerOnHookDetected");

	UHackReporterComponent_ServerOnHookDetected_Params params;
	params.Type = Type;
	params.Count = Count;
	params.ObjectName = ObjectName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InGameReconnectingInterface.RetriveDataAfterReconnecting
// (Native, Public)

void UInGameReconnectingInterface::RetriveDataAfterReconnecting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InGameReconnectingInterface.RetriveDataAfterReconnecting");

	UInGameReconnectingInterface_RetriveDataAfterReconnecting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InGameReconnectingInterface.RecoverStatusAfterReconnecting
// (Native, Public)

void UInGameReconnectingInterface::RecoverStatusAfterReconnecting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InGameReconnectingInterface.RecoverStatusAfterReconnecting");

	UInGameReconnectingInterface_RecoverStatusAfterReconnecting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnShowSkillPrompt
// (Final, Native, Private)
// Parameters:
// bool                           IsShowPrompt                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          LastTime                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 PromptText                     (Parm, ZeroConstructor)
// float                          TotalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionComponent::OnShowSkillPrompt(bool IsShowPrompt, float LastTime, const struct FString& PromptText, float TotalTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnShowSkillPrompt");

	UInteractionComponent_OnShowSkillPrompt_Params params;
	params.IsShowPrompt = IsShowPrompt;
	params.LastTime = LastTime;
	params.PromptText = PromptText;
	params.TotalTime = TotalTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnRescueTargetChange
// (Final, Native, Private)
// Parameters:
// bool                           HasTarget                      (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionComponent::OnRescueTargetChange(bool HasTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnRescueTargetChange");

	UInteractionComponent_OnRescueTargetChange_Params params;
	params.HasTarget = HasTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnRescueStatusChange
// (Final, Native, Private)
// Parameters:
// class ACharacter*              HelpWho                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsTurnInfo                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          RemainingRescueTime            (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionComponent::OnRescueStatusChange(class ACharacter* HelpWho, bool IsTurnInfo, float RemainingRescueTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnRescueStatusChange");

	UInteractionComponent_OnRescueStatusChange_Params params;
	params.HelpWho = HelpWho;
	params.IsTurnInfo = IsTurnInfo;
	params.RemainingRescueTime = RemainingRescueTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnPlayerEnterParachute
// (Final, Native, Private)

void UInteractionComponent::OnPlayerEnterParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnPlayerEnterParachute");

	UInteractionComponent_OnPlayerEnterParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnPlayerEnterJumping
// (Final, Native, Private)

void UInteractionComponent::OnPlayerEnterJumping()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnPlayerEnterJumping");

	UInteractionComponent_OnPlayerEnterJumping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnPlayerCanOpenParachute
// (Final, Native, Private)

void UInteractionComponent::OnPlayerCanOpenParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnPlayerCanOpenParachute");

	UInteractionComponent_OnPlayerCanOpenParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnPlayerCannotOpenParachute
// (Final, Native, Private)

void UInteractionComponent::OnPlayerCannotOpenParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnPlayerCannotOpenParachute");

	UInteractionComponent_OnPlayerCannotOpenParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnPlayerCannotJump
// (Final, Native, Private)

void UInteractionComponent::OnPlayerCannotJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnPlayerCannotJump");

	UInteractionComponent_OnPlayerCannotJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnPlayerCanJump
// (Final, Native, Private)

void UInteractionComponent::OnPlayerCanJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnPlayerCanJump");

	UInteractionComponent_OnPlayerCanJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnInteractionUnblocked
// (Final, Native, Private)

void UInteractionComponent::OnInteractionUnblocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnInteractionUnblocked");

	UInteractionComponent_OnInteractionUnblocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnInteractableGroundItem
// (Final, Native, Private)
// Parameters:
// struct FSearchedPickUpItemResult InteractableItem               (Parm)

void UInteractionComponent::OnInteractableGroundItem(const struct FSearchedPickUpItemResult& InteractableItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnInteractableGroundItem");

	UInteractionComponent_OnInteractableGroundItem_Params params;
	params.InteractableItem = InteractableItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnExitVehicle
// (Final, Native, Private)

void UInteractionComponent::OnExitVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnExitVehicle");

	UInteractionComponent_OnExitVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnEnterVehicle
// (Final, Native, Private)

void UInteractionComponent::OnEnterVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnEnterVehicle");

	UInteractionComponent_OnEnterVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnDoorInteractable
// (Final, Native, Private)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bShouldOpen                    (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionComponent::OnDoorInteractable(bool bShow, bool bShouldOpen)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnDoorInteractable");

	UInteractionComponent_OnDoorInteractable_Params params;
	params.bShow = bShow;
	params.bShouldOpen = bShouldOpen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.InteractionComponent.OnCurrentClosestVehicleChanged
// (Final, Native, Private)
// Parameters:
// class ASTExtraVehicleBase*     ClosestVehicle                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           CanEnterDriverSeat             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           CanEnterPassengerSeat          (Parm, ZeroConstructor, IsPlainOldData)

void UInteractionComponent::OnCurrentClosestVehicleChanged(class ASTExtraVehicleBase* ClosestVehicle, bool CanEnterDriverSeat, bool CanEnterPassengerSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.InteractionComponent.OnCurrentClosestVehicleChanged");

	UInteractionComponent_OnCurrentClosestVehicleChanged_Params params;
	params.ClosestVehicle = ClosestVehicle;
	params.CanEnterDriverSeat = CanEnterDriverSeat;
	params.CanEnterPassengerSeat = CanEnterPassengerSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ItemGeneratorBase.ForceUpdate
// (Final, Native, Public, BlueprintCallable)

void AItemGeneratorBase::ForceUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ItemGeneratorBase.ForceUpdate");

	AItemGeneratorBase_ForceUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ItemStudio.UpdateComponentToWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*          Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AItemStudio::UpdateComponentToWorld(class UMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ItemStudio.UpdateComponentToWorld");

	AItemStudio_UpdateComponentToWorld_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ItemStudio.SetMeshTransform
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UMeshComponent*          Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AItemStudio::SetMeshTransform(class UMeshComponent* Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ItemStudio.SetMeshTransform");

	AItemStudio_SetMeshTransform_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ItemStudio.SetItem
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASTExtraWeapon*          Item                           (Parm, ZeroConstructor, IsPlainOldData)

void AItemStudio::SetItem(class ASTExtraWeapon* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ItemStudio.SetItem");

	AItemStudio_SetItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LagCompensationComponent.SimulatedCharacterServerTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ULagCompensationComponent::SimulatedCharacterServerTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LagCompensationComponent.SimulatedCharacterServerTime");

	ULagCompensationComponent_SimulatedCharacterServerTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LandScapeLODByHeight.Stop
// (Final, Native, Public, BlueprintCallable)

void ULandScapeLODByHeight::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LandScapeLODByHeight.Stop");

	ULandScapeLODByHeight_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LandScapeLODByHeight.Start
// (Final, Native, Public, BlueprintCallable)

void ULandScapeLODByHeight::Start()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LandScapeLODByHeight.Start");

	ULandScapeLODByHeight_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LandScapeLODByHeight.MappingLODByHeight
// (Final, Native, Private)

void ULandScapeLODByHeight::MappingLODByHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LandScapeLODByHeight.MappingLODByHeight");

	ULandScapeLODByHeight_MappingLODByHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.UpdateEquipedWeapon
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// int                            ItemID                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void ALobbyCharacter::UpdateEquipedWeapon(int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.UpdateEquipedWeapon");

	ALobbyCharacter_UpdateEquipedWeapon_Params params;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.ShowHUD
// (Event, Public, BlueprintEvent)

void ALobbyCharacter::ShowHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.ShowHUD");

	ALobbyCharacter_ShowHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.SetState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyCharacter::SetState(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.SetState");

	ALobbyCharacter_SetState_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.SetReady
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bReady                         (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyCharacter::SetReady(bool bReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.SetReady");

	ALobbyCharacter_SetReady_Params params;
	params.bReady = bReady;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.SetRankEmblem
// (Event, Public, BlueprintEvent)
// Parameters:
// ERatingRankType                NewRankType                    (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyCharacter::SetRankEmblem(ERatingRankType NewRankType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.SetRankEmblem");

	ALobbyCharacter_SetRankEmblem_Params params;
	params.NewRankType = NewRankType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.SetNickName
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 NewNickName                    (Parm, ZeroConstructor)

void ALobbyCharacter::SetNickName(const struct FString& NewNickName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.SetNickName");

	ALobbyCharacter_SetNickName_Params params;
	params.NewNickName = NewNickName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.SetLogout
// (Event, Public, BlueprintEvent)

void ALobbyCharacter::SetLogout()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.SetLogout");

	ALobbyCharacter_SetLogout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.SetHost
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bHost                          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyCharacter::SetHost(bool bHost)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.SetHost");

	ALobbyCharacter_SetHost_Params params;
	params.bHost = bHost;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.ResetAnimPose
// (Event, Public, BlueprintEvent)

void ALobbyCharacter::ResetAnimPose()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.ResetAnimPose");

	ALobbyCharacter_ResetAnimPose_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.OnMontageEnded
// (Final, Native, Public)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyCharacter::OnMontageEnded(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.OnMontageEnded");

	ALobbyCharacter_OnMontageEnded_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.IsLogout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ALobbyCharacter::IsLogout()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.IsLogout");

	ALobbyCharacter_IsLogout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyCharacter.IsInCustomizationScene
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ALobbyCharacter::IsInCustomizationScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.IsInCustomizationScene");

	ALobbyCharacter_IsInCustomizationScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyCharacter.HideHUD
// (Event, Public, BlueprintEvent)

void ALobbyCharacter::HideHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.HideHUD");

	ALobbyCharacter_HideHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.HideEquippedWeapon
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           InVal                          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyCharacter::HideEquippedWeapon(bool InVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.HideEquippedWeapon");

	ALobbyCharacter_HideEquippedWeapon_Params params;
	params.InVal = InVal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyCharacter.GetSlotId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ALobbyCharacter::GetSlotId()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.GetSlotId");

	ALobbyCharacter_GetSlotId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyCharacter.GetRankType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERatingRankType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ERatingRankType ALobbyCharacter::GetRankType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.GetRankType");

	ALobbyCharacter_GetRankType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyCharacter.GetNickName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ALobbyCharacter::GetNickName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.GetNickName");

	ALobbyCharacter_GetNickName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyCharacter.GetNetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ALobbyCharacter::GetNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.GetNetId");

	ALobbyCharacter_GetNetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyCharacter.DestroyLobbyWeapon
// (Event, Public, BlueprintEvent)

void ALobbyCharacter::DestroyLobbyWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyCharacter.DestroyLobbyWeapon");

	ALobbyCharacter_DestroyLobbyWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.WidgetToggle
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)

void ATslBaseHUD::WidgetToggle(const struct FString& WidgetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.WidgetToggle");

	ATslBaseHUD_WidgetToggle_Params params;
	params.WidgetName = WidgetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.WidgetShow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// EWidgetShowType                ShowType                       (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 OptionalParam                  (Parm, ZeroConstructor, IsPlainOldData)

void ATslBaseHUD::WidgetShow(const struct FString& WidgetName, EWidgetShowType ShowType, class UObject* OptionalParam)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.WidgetShow");

	ATslBaseHUD_WidgetShow_Params params;
	params.WidgetName = WidgetName;
	params.ShowType = ShowType;
	params.OptionalParam = OptionalParam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.WidgetCreate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// struct FTslWidgetConfig        Config                         (Parm)

void ATslBaseHUD::WidgetCreate(const struct FString& WidgetName, const struct FTslWidgetConfig& Config)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.WidgetCreate");

	ATslBaseHUD_WidgetCreate_Params params;
	params.WidgetName = WidgetName;
	params.Config = Config;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.UpdateHud
// (Final, Native, Public, BlueprintCallable)

void ATslBaseHUD::UpdateHud()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.UpdateHud");

	ATslBaseHUD_UpdateHud_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.UnbindActionKeyDelegateEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EInputEvent>       InputEvent                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslBaseHUD::UnbindActionKeyDelegateEvent(const struct FName& ActionName, TEnumAsByte<EInputEvent> InputEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.UnbindActionKeyDelegateEvent");

	ATslBaseHUD_UnbindActionKeyDelegateEvent_Params params;
	params.ActionName = ActionName;
	params.InputEvent = InputEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.TestShowDialog
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor)

void ATslBaseHUD::TestShowDialog(const struct FString& Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.TestShowDialog");

	ATslBaseHUD_TestShowDialog_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.ShowDefaultHud
// (Final, Native, Public, BlueprintCallable)

void ATslBaseHUD::ShowDefaultHud()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.ShowDefaultHud");

	ATslBaseHUD_ShowDefaultHud_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.PrintShowWidgetList
// (Final, Exec, Native, Public)

void ATslBaseHUD::PrintShowWidgetList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.PrintShowWidgetList");

	ATslBaseHUD_PrintShowWidgetList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.PrintCreatedWidgetList
// (Final, Exec, Native, Public)

void ATslBaseHUD::PrintCreatedWidgetList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.PrintCreatedWidgetList");

	ATslBaseHUD_PrintCreatedWidgetList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.IsWidgetShow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslBaseHUD::IsWidgetShow(const struct FString& WidgetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.IsWidgetShow");

	ATslBaseHUD_IsWidgetShow_Params params;
	params.WidgetName = WidgetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBaseHUD.IsMouseUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslBaseHUD::IsMouseUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.IsMouseUse");

	ATslBaseHUD_IsMouseUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBaseHUD.HideWidgetByEscape
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslBaseHUD::HideWidgetByEscape()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.HideWidgetByEscape");

	ATslBaseHUD_HideWidgetByEscape_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBaseHUD.HidePopupDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 PopupWidgetName                (Parm, ZeroConstructor)

void ATslBaseHUD::HidePopupDialog(const struct FString& PopupWidgetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.HidePopupDialog");

	ATslBaseHUD_HidePopupDialog_Params params;
	params.PopupWidgetName = PopupWidgetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.GetWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* ATslBaseHUD::GetWidget(const struct FString& WidgetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.GetWidget");

	ATslBaseHUD_GetWidget_Params params;
	params.WidgetName = WidgetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBaseHUD.GetMainUMGHud
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* ATslBaseHUD::GetMainUMGHud()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.GetMainUMGHud");

	ATslBaseHUD_GetMainUMGHud_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBaseHUD.DestroyAllWidgets
// (Final, Native, Public, BlueprintCallable)

void ATslBaseHUD::DestroyAllWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.DestroyAllWidgets");

	ATslBaseHUD_DestroyAllWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseHUD.BindActionKeyDelegateEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EInputEvent>       InputEvent                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate         ActionKeyDelegate              (Parm, ZeroConstructor)

void ATslBaseHUD::BindActionKeyDelegateEvent(const struct FName& ActionName, TEnumAsByte<EInputEvent> InputEvent, const struct FScriptDelegate& ActionKeyDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseHUD.BindActionKeyDelegateEvent");

	ATslBaseHUD_BindActionKeyDelegateEvent_Params params;
	params.ActionName = ActionName;
	params.InputEvent = InputEvent;
	params.ActionKeyDelegate = ActionKeyDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.UpdateStatTrak
// (Final, Exec, Native, Private)
// Parameters:
// uint32_t                       Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            NumKills                       (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::UpdateStatTrak(uint32_t Value, int NumKills)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.UpdateStatTrak");

	ALobbyHUD_UpdateStatTrak_Params params;
	params.Value = Value;
	params.NumKills = NumKills;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TickFadeInOutEffect
// (Final, Native, Private)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TickFadeInOutEffect(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TickFadeInOutEffect");

	ALobbyHUD_TickFadeInOutEffect_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TickCameraTransition
// (Final, Native, Private)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TickCameraTransition(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TickCameraTransition");

	ALobbyHUD_TickCameraTransition_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TestLobbyCharacterReady
// (Final, Exec, Native, Private)
// Parameters:
// uint32_t                       SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bReady                         (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCharacterReady(uint32_t SlotIndex, bool bReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TestLobbyCharacterReady");

	ALobbyHUD_TestLobbyCharacterReady_Params params;
	params.SlotIndex = SlotIndex;
	params.bReady = bReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TestLobbyCharacterHost
// (Final, Exec, Native, Private)
// Parameters:
// uint32_t                       SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCharacterHost(uint32_t SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TestLobbyCharacterHost");

	ALobbyHUD_TestLobbyCharacterHost_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TestLobbyCharacterAddAngle
// (Final, Exec, Native, Private)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          InYawInDegree                  (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCharacterAddAngle(int SlotIndex, float InYawInDegree)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TestLobbyCharacterAddAngle");

	ALobbyHUD_TestLobbyCharacterAddAngle_Params params;
	params.SlotIndex = SlotIndex;
	params.InYawInDegree = InYawInDegree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TestLobbyCamera_TeleportTo
// (Final, Exec, Native, Private)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCamera_TeleportTo(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TestLobbyCamera_TeleportTo");

	ALobbyHUD_TestLobbyCamera_TeleportTo_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TestLobbyCamera_StartTransitionTo
// (Final, Exec, Native, Private)
// Parameters:
// int                            ToIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCamera_StartTransitionTo(int ToIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TestLobbyCamera_StartTransitionTo");

	ALobbyHUD_TestLobbyCamera_StartTransitionTo_Params params;
	params.ToIndex = ToIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TestLobbyCamera_StartTransitionFromTo
// (Final, Exec, Native, Private)
// Parameters:
// int                            FromIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ToIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCamera_StartTransitionFromTo(int FromIndex, int ToIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TestLobbyCamera_StartTransitionFromTo");

	ALobbyHUD_TestLobbyCamera_StartTransitionFromTo_Params params;
	params.FromIndex = FromIndex;
	params.ToIndex = ToIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TestLobbyCamera_SpawnCharacters
// (Final, Exec, Native, Private)
// Parameters:
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TestLobbyCamera_SpawnCharacters(int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TestLobbyCamera_SpawnCharacters");

	ALobbyHUD_TestLobbyCamera_SpawnCharacters_Params params;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TestLobbyCamera_Init
// (Final, Exec, Native, Private)

void ALobbyHUD::TestLobbyCamera_Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TestLobbyCamera_Init");

	ALobbyHUD_TestLobbyCamera_Init_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.Test_UpdateLobbyCharacter
// (Final, Exec, Native, Public)
// Parameters:
// uint32_t                       SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::Test_UpdateLobbyCharacter(uint32_t SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.Test_UpdateLobbyCharacter");

	ALobbyHUD_Test_UpdateLobbyCharacter_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.Test_RemoveLobbyItem
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 ItemID                         (Parm, ZeroConstructor)

void ALobbyHUD::Test_RemoveLobbyItem(const struct FString& ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.Test_RemoveLobbyItem");

	ALobbyHUD_Test_RemoveLobbyItem_Params params;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.Test_RemoveAllLobbyItem
// (Final, Exec, Native, Public)

void ALobbyHUD::Test_RemoveAllLobbyItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.Test_RemoveAllLobbyItem");

	ALobbyHUD_Test_RemoveAllLobbyItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.Test_PrintWeaponItem
// (Final, Exec, Native, Public)
// Parameters:
// uint32_t                       SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::Test_PrintWeaponItem(uint32_t SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.Test_PrintWeaponItem");

	ALobbyHUD_Test_PrintWeaponItem_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.Test_PrintSkinItem
// (Final, Exec, Native, Public)
// Parameters:
// uint32_t                       SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::Test_PrintSkinItem(uint32_t SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.Test_PrintSkinItem");

	ALobbyHUD_Test_PrintSkinItem_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.Test_ForceLodLevel
// (Final, Exec, Native, Public)
// Parameters:
// int                            ForceLodLevel                  (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::Test_ForceLodLevel(int ForceLodLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.Test_ForceLodLevel");

	ALobbyHUD_Test_ForceLodLevel_Params params;
	params.ForceLodLevel = ForceLodLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.Test_AddLobbyItem
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 ItemID                         (Parm, ZeroConstructor)

void ALobbyHUD::Test_AddLobbyItem(const struct FString& ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.Test_AddLobbyItem");

	ALobbyHUD_Test_AddLobbyItem_Params params;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.TeleportCameraTo
// (Final, Native, Public)
// Parameters:
// ELobbyCameraStates             InCameraState                  (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::TeleportCameraTo(ELobbyCameraStates InCameraState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.TeleportCameraTo");

	ALobbyHUD_TeleportCameraTo_Params params;
	params.InCameraState = InCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.StopFadeInOutEffect
// (Final, Native, Private)

void ALobbyHUD::StopFadeInOutEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.StopFadeInOutEffect");

	ALobbyHUD_StopFadeInOutEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.StopCameraTransition
// (Final, Native, Private)

void ALobbyHUD::StopCameraTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.StopCameraTransition");

	ALobbyHUD_StopCameraTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.StartFadeInOutEffect
// (Final, Native, Private)

void ALobbyHUD::StartFadeInOutEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.StartFadeInOutEffect");

	ALobbyHUD_StartFadeInOutEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.StartCameraTransitionTo
// (Final, Native, Public)
// Parameters:
// ELobbyCameraStates             InToCameraState                (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::StartCameraTransitionTo(ELobbyCameraStates InToCameraState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.StartCameraTransitionTo");

	ALobbyHUD_StartCameraTransitionTo_Params params;
	params.InToCameraState = InToCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.StartCameraTransitionFromTo
// (Final, Native, Public)
// Parameters:
// ELobbyCameraStates             InFromCameraState              (Parm, ZeroConstructor, IsPlainOldData)
// ELobbyCameraStates             InToCameraState                (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::StartCameraTransitionFromTo(ELobbyCameraStates InFromCameraState, ELobbyCameraStates InToCameraState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.StartCameraTransitionFromTo");

	ALobbyHUD_StartCameraTransitionFromTo_Params params;
	params.InFromCameraState = InFromCameraState;
	params.InToCameraState = InToCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.SpawnViewModeWeapon
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 WeaponId                       (Parm, ZeroConstructor)
// struct FString                 SkinItemId                     (Parm, ZeroConstructor)

void ALobbyHUD::SpawnViewModeWeapon(const struct FString& WeaponId, const struct FString& SkinItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.SpawnViewModeWeapon");

	ALobbyHUD_SpawnViewModeWeapon_Params params;
	params.WeaponId = WeaponId;
	params.SkinItemId = SkinItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.SpawnViewModeParachute
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 ParachuteId                    (Parm, ZeroConstructor)
// struct FString                 SkinItemId                     (Parm, ZeroConstructor)

void ALobbyHUD::SpawnViewModeParachute(const struct FString& ParachuteId, const struct FString& SkinItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.SpawnViewModeParachute");

	ALobbyHUD_SpawnViewModeParachute_Params params;
	params.ParachuteId = ParachuteId;
	params.SkinItemId = SkinItemId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.ShowWeaponOrGearViewMode
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 SceneName                      (Parm, ZeroConstructor)
// uint32_t                       ViewModeCategory               (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 TargetId                       (Parm, ZeroConstructor)
// struct FString                 SkinItemId                     (Parm, ZeroConstructor)

void ALobbyHUD::ShowWeaponOrGearViewMode(const struct FString& SceneName, uint32_t ViewModeCategory, const struct FString& TargetId, const struct FString& SkinItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.ShowWeaponOrGearViewMode");

	ALobbyHUD_ShowWeaponOrGearViewMode_Params params;
	params.SceneName = SceneName;
	params.ViewModeCategory = ViewModeCategory;
	params.TargetId = TargetId;
	params.SkinItemId = SkinItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.ShowViewMode
// (Final, Exec, Native, Public)
// Parameters:
// uint32_t                       ViewModeCategory               (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 TargetId                       (Parm, ZeroConstructor)
// struct FString                 SkinItemId                     (Parm, ZeroConstructor)

void ALobbyHUD::ShowViewMode(uint32_t ViewModeCategory, const struct FString& TargetId, const struct FString& SkinItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.ShowViewMode");

	ALobbyHUD_ShowViewMode_Params params;
	params.ViewModeCategory = ViewModeCategory;
	params.TargetId = TargetId;
	params.SkinItemId = SkinItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.SetWidgetForBinding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ViewIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class UCoherentUIGTWidget*     Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ALobbyHUD::SetWidgetForBinding(int ViewIndex, class UCoherentUIGTWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.SetWidgetForBinding");

	ALobbyHUD_SetWidgetForBinding_Params params;
	params.ViewIndex = ViewIndex;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.SetViewModeActor
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::SetViewModeActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.SetViewModeActor");

	ALobbyHUD_SetViewModeActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.SetPlayedFirstHUD
// (Final, Native, Static, Protected, BlueprintCallable)

void ALobbyHUD::STATIC_SetPlayedFirstHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.SetPlayedFirstHUD");

	ALobbyHUD_SetPlayedFirstHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.SetLocalUserData
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Key                            (Parm, ZeroConstructor)
// struct FString                 Value                          (Parm, ZeroConstructor)

void ALobbyHUD::SetLocalUserData(const struct FString& Key, const struct FString& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.SetLocalUserData");

	ALobbyHUD_SetLocalUserData_Params params;
	params.Key = Key;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.SetLobbyCharacterHiddenInGame
// (Final, Native, Private)
// Parameters:
// uint32_t                       SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bNewHidden                     (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::SetLobbyCharacterHiddenInGame(uint32_t SlotIndex, bool bNewHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.SetLobbyCharacterHiddenInGame");

	ALobbyHUD_SetLobbyCharacterHiddenInGame_Params params;
	params.SlotIndex = SlotIndex;
	params.bNewHidden = bNewHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.SetLobbyCharacterBlur
// (Final, Exec, Native, Public)
// Parameters:
// bool                           bBlur                          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::SetLobbyCharacterBlur(bool bBlur)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.SetLobbyCharacterBlur");

	ALobbyHUD_SetLobbyCharacterBlur_Params params;
	params.bBlur = bBlur;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.ResetViewMode
// (Final, Exec, Native, Public, BlueprintCallable)

void ALobbyHUD::ResetViewMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.ResetViewMode");

	ALobbyHUD_ResetViewMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.RequestSystemMenu
// (Final, Native, Public)

void ALobbyHUD::RequestSystemMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.RequestSystemMenu");

	ALobbyHUD_RequestSystemMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.PlayEmoteAnimation
// (Final, Exec, Native, Public)
// Parameters:
// struct FName                   InEmoteName                    (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::PlayEmoteAnimation(const struct FName& InEmoteName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.PlayEmoteAnimation");

	ALobbyHUD_PlayEmoteAnimation_Params params;
	params.InEmoteName = InEmoteName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.OnViewModeStudioSpawnCallback
// (Final, Native, Public)
// Parameters:
// class AActor*                  ViewModeStudio                 (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::OnViewModeStudioSpawnCallback(class AActor* ViewModeStudio)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.OnViewModeStudioSpawnCallback");

	ALobbyHUD_OnViewModeStudioSpawnCallback_Params params;
	params.ViewModeStudio = ViewModeStudio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.OnStartRotation
// (Final, Exec, Native, Public, BlueprintCallable)

void ALobbyHUD::OnStartRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.OnStartRotation");

	ALobbyHUD_OnStartRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.NotifyLobbySceneChanged
// (Final, Native, Private)
// Parameters:
// bool                           bIsCustomizationScene          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::NotifyLobbySceneChanged(bool bIsCustomizationScene)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.NotifyLobbySceneChanged");

	ALobbyHUD_NotifyLobbySceneChanged_Params params;
	params.bIsCustomizationScene = bIsCustomizationScene;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.NotifyLobbyConnecting
// (Final, Exec, Native, Public, BlueprintCallable)

void ALobbyHUD::NotifyLobbyConnecting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.NotifyLobbyConnecting");

	ALobbyHUD_NotifyLobbyConnecting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.NotifyLobbyCharacterCreated
// (Final, Native, Private)
// Parameters:
// int                            InSlotIndex                    (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::NotifyLobbyCharacterCreated(int InSlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.NotifyLobbyCharacterCreated");

	ALobbyHUD_NotifyLobbyCharacterCreated_Params params;
	params.InSlotIndex = InSlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.LeaveCustomizationMenu
// (Final, Native, Private)
// Parameters:
// ELobbyCameraStates             InFromCameraState              (Parm, ZeroConstructor, IsPlainOldData)
// ELobbyCameraStates             InToCameraState                (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::LeaveCustomizationMenu(ELobbyCameraStates InFromCameraState, ELobbyCameraStates InToCameraState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.LeaveCustomizationMenu");

	ALobbyHUD_LeaveCustomizationMenu_Params params;
	params.InFromCameraState = InFromCameraState;
	params.InToCameraState = InToCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.IsPlayedFirstHUD
// (Final, Native, Static, Protected, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ALobbyHUD::STATIC_IsPlayedFirstHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.IsPlayedFirstHUD");

	ALobbyHUD_IsPlayedFirstHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.IsCameraHasBlurEffect
// (Final, Native, Private, Const)
// Parameters:
// ELobbyCameraStates             InLobbyCameraState             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ALobbyHUD::IsCameraHasBlurEffect(ELobbyCameraStates InLobbyCameraState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.IsCameraHasBlurEffect");

	ALobbyHUD_IsCameraHasBlurEffect_Params params;
	params.InLobbyCameraState = InLobbyCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.IsAlone
// (Final, Native, Private, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ALobbyHUD::IsAlone()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.IsAlone");

	ALobbyHUD_IsAlone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.InitLobbyTransition
// (Final, Native, Public)

void ALobbyHUD::InitLobbyTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.InitLobbyTransition");

	ALobbyHUD_InitLobbyTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.InitFadeInOutEffect
// (Final, Native, Private)

void ALobbyHUD::InitFadeInOutEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.InitFadeInOutEffect");

	ALobbyHUD_InitFadeInOutEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.InitCameraTransition
// (Final, Native, Private)

void ALobbyHUD::InitCameraTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.InitCameraTransition");

	ALobbyHUD_InitCameraTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.HideViewMode
// (Final, Exec, Native, Public)

void ALobbyHUD::HideViewMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.HideViewMode");

	ALobbyHUD_HideViewMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.HideCharacterPreview
// (Final, Exec, Native, Public)

void ALobbyHUD::HideCharacterPreview()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.HideCharacterPreview");

	ALobbyHUD_HideCharacterPreview_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.GetViewModeCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EViewModeCategory              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EViewModeCategory ALobbyHUD::GetViewModeCategory()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetViewModeCategory");

	ALobbyHUD_GetViewModeCategory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.GetUsableViewIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ALobbyHUD::GetUsableViewIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetUsableViewIndex");

	ALobbyHUD_GetUsableViewIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.GetTeamNickName
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ALobbyHUD::GetTeamNickName(int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetTeamNickName");

	ALobbyHUD_GetTeamNickName_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.GetStartUrl
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ALobbyHUD::GetStartUrl()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetStartUrl");

	ALobbyHUD_GetStartUrl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.GetMainLobbyCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ALobbyCharacter*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ALobbyCharacter* ALobbyHUD::GetMainLobbyCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetMainLobbyCharacter");

	ALobbyHUD_GetMainLobbyCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.GetLobbyCharacterNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ALobbyHUD::GetLobbyCharacterNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetLobbyCharacterNum");

	ALobbyHUD_GetLobbyCharacterNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.GetLobbyCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class ALobbyCharacter*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ALobbyCharacter* ALobbyHUD::GetLobbyCharacter(int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetLobbyCharacter");

	ALobbyHUD_GetLobbyCharacter_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.GetLobbyCameraState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ELobbyCameraStates             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ELobbyCameraStates ALobbyHUD::GetLobbyCameraState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetLobbyCameraState");

	ALobbyHUD_GetLobbyCameraState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.GetLobbyCamera
// (Final, Native, Private)
// Parameters:
// ELobbyCameraStates             InLobbyCameraState             (Parm, ZeroConstructor, IsPlainOldData)
// class ACameraActor*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ACameraActor* ALobbyHUD::GetLobbyCamera(ELobbyCameraStates InLobbyCameraState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetLobbyCamera");

	ALobbyHUD_GetLobbyCamera_Params params;
	params.InLobbyCameraState = InLobbyCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.GetHostNickName
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ALobbyHUD::GetHostNickName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetHostNickName");

	ALobbyHUD_GetHostNickName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.GetCurveDuration
// (Final, Native, Private, Const)
// Parameters:
// class UCurveFloat*             InCurve                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ALobbyHUD::GetCurveDuration(class UCurveFloat* InCurve)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.GetCurveDuration");

	ALobbyHUD_GetCurveDuration_Params params;
	params.InCurve = InCurve;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.EnterCustomizationMenu
// (Final, Native, Private)
// Parameters:
// ELobbyCameraStates             InFromCameraState              (Parm, ZeroConstructor, IsPlainOldData)
// ELobbyCameraStates             InToCameraState                (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::EnterCustomizationMenu(ELobbyCameraStates InFromCameraState, ELobbyCameraStates InToCameraState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.EnterCustomizationMenu");

	ALobbyHUD_EnterCustomizationMenu_Params params;
	params.InFromCameraState = InFromCameraState;
	params.InToCameraState = InToCameraState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.EnableSystemMenuButton
// (Final, Exec, Native, Public)

void ALobbyHUD::EnableSystemMenuButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.EnableSystemMenuButton");

	ALobbyHUD_EnableSystemMenuButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.DisableSystemMenuButton
// (Final, Exec, Native, Public)

void ALobbyHUD::DisableSystemMenuButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.DisableSystemMenuButton");

	ALobbyHUD_DisableSystemMenuButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.DecideBlurChangingState
// (Final, Native, Private, Const)
// Parameters:
// ELobbyCameraStates             InFromState                    (Parm, ZeroConstructor, IsPlainOldData)
// ELobbyCameraStates             InToState                      (Parm, ZeroConstructor, IsPlainOldData)
// ELobbyBlurChangingStates       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ELobbyBlurChangingStates ALobbyHUD::DecideBlurChangingState(ELobbyCameraStates InFromState, ELobbyCameraStates InToState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.DecideBlurChangingState");

	ALobbyHUD_DecideBlurChangingState_Params params;
	params.InFromState = InFromState;
	params.InToState = InToState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.LobbyHUD.CreateTestCharacter
// (Final, Native, Public, BlueprintCallable)

void ALobbyHUD::CreateTestCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.CreateTestCharacter");

	ALobbyHUD_CreateTestCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.ClearWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::ClearWidget(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.ClearWidget");

	ALobbyHUD_ClearWidget_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.ClearForSolo
// (Final, Native, Private)

void ALobbyHUD::ClearForSolo()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.ClearForSolo");

	ALobbyHUD_ClearForSolo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.ClearAllWidget
// (Final, Native, Public, BlueprintCallable)

void ALobbyHUD::ClearAllWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.ClearAllWidget");

	ALobbyHUD_ClearAllWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.ChangeSceneFromName
// (Final, Exec, Native, Private)
// Parameters:
// struct FString                 SceneName                      (Parm, ZeroConstructor)

void ALobbyHUD::ChangeSceneFromName(const struct FString& SceneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.ChangeSceneFromName");

	ALobbyHUD_ChangeSceneFromName_Params params;
	params.SceneName = SceneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.CacheSubLevelNames
// (Final, Native, Private)

void ALobbyHUD::CacheSubLevelNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.CacheSubLevelNames");

	ALobbyHUD_CacheSubLevelNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.CachePostProcessEffectFromLevel
// (Final, Native, Private)

void ALobbyHUD::CachePostProcessEffectFromLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.CachePostProcessEffectFromLevel");

	ALobbyHUD_CachePostProcessEffectFromLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.CacheMainCameraFromLevel
// (Final, Native, Private)

void ALobbyHUD::CacheMainCameraFromLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.CacheMainCameraFromLevel");

	ALobbyHUD_CacheMainCameraFromLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.CacheLobbyCharacterTransforms
// (Final, Native, Private)

void ALobbyHUD::CacheLobbyCharacterTransforms()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.CacheLobbyCharacterTransforms");

	ALobbyHUD_CacheLobbyCharacterTransforms_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.CacheLobbyCamarasFromLevel
// (Final, Native, Private)

void ALobbyHUD::CacheLobbyCamarasFromLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.CacheLobbyCamarasFromLevel");

	ALobbyHUD_CacheLobbyCamarasFromLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.AddLobbyViewModeScale
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            ViewModeCategory               (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::AddLobbyViewModeScale(int ViewModeCategory, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.AddLobbyViewModeScale");

	ALobbyHUD_AddLobbyViewModeScale_Params params;
	params.ViewModeCategory = ViewModeCategory;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.AddLobbyViewModeAngleXYFromEnum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EViewModeCategory              ViewModeCategory               (Parm, ZeroConstructor, IsPlainOldData)
// float                          XAngleInDegree                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          YAngleInDegree                 (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::AddLobbyViewModeAngleXYFromEnum(EViewModeCategory ViewModeCategory, float XAngleInDegree, float YAngleInDegree)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.AddLobbyViewModeAngleXYFromEnum");

	ALobbyHUD_AddLobbyViewModeAngleXYFromEnum_Params params;
	params.ViewModeCategory = ViewModeCategory;
	params.XAngleInDegree = XAngleInDegree;
	params.YAngleInDegree = YAngleInDegree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.AddLobbyViewModeAngleXY
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            ViewModeCategory               (Parm, ZeroConstructor, IsPlainOldData)
// float                          XAngleInDegree                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          YAngleInDegree                 (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::AddLobbyViewModeAngleXY(int ViewModeCategory, float XAngleInDegree, float YAngleInDegree)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.AddLobbyViewModeAngleXY");

	ALobbyHUD_AddLobbyViewModeAngleXY_Params params;
	params.ViewModeCategory = ViewModeCategory;
	params.XAngleInDegree = XAngleInDegree;
	params.YAngleInDegree = YAngleInDegree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.AddLobbyViewModeAngle
// (Final, Exec, Native, Public)
// Parameters:
// uint32_t                       ViewModeCategory               (Parm, ZeroConstructor, IsPlainOldData)
// float                          AngleInDegree                  (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::AddLobbyViewModeAngle(uint32_t ViewModeCategory, float AngleInDegree)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.AddLobbyViewModeAngle");

	ALobbyHUD_AddLobbyViewModeAngle_Params params;
	params.ViewModeCategory = ViewModeCategory;
	params.AngleInDegree = AngleInDegree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbyHUD.AddLobbyCharacterAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          AngleInDegree                  (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyHUD::AddLobbyCharacterAngle(int SlotIndex, float AngleInDegree)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbyHUD.AddLobbyCharacterAngle");

	ALobbyHUD_AddLobbyCharacterAngle_Params params;
	params.SlotIndex = SlotIndex;
	params.AngleInDegree = AngleInDegree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbySceneManagerComponent.OnUpdateWhenSceneVisibility
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FTslLobbySceneDataPair  SceneDataPair                  (ConstParm, Parm, OutParm, ReferenceParm)

void ULobbySceneManagerComponent::OnUpdateWhenSceneVisibility(const struct FTslLobbySceneDataPair& SceneDataPair)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbySceneManagerComponent.OnUpdateWhenSceneVisibility");

	ULobbySceneManagerComponent_OnUpdateWhenSceneVisibility_Params params;
	params.SceneDataPair = SceneDataPair;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbySceneManagerComponent.OnUpdateScene
// (Final, Native, Private)
// Parameters:
// class ATslBaseLobbySceneTravel* TslBaseLobbySceneTravel        (Parm, ZeroConstructor, IsPlainOldData)

void ULobbySceneManagerComponent::OnUpdateScene(class ATslBaseLobbySceneTravel* TslBaseLobbySceneTravel)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbySceneManagerComponent.OnUpdateScene");

	ULobbySceneManagerComponent_OnUpdateScene_Params params;
	params.TslBaseLobbySceneTravel = TslBaseLobbySceneTravel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.LobbySceneManagerComponent.OnFinishTravel
// (Final, Native, Private)
// Parameters:
// class ATslBaseLobbySceneTravel* TslBaseLobbySceneTravel        (Parm, ZeroConstructor, IsPlainOldData)

void ULobbySceneManagerComponent::OnFinishTravel(class ATslBaseLobbySceneTravel* TslBaseLobbySceneTravel)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.LobbySceneManagerComponent.OnFinishTravel");

	ULobbySceneManagerComponent_OnFinishTravel_Params params;
	params.TslBaseLobbySceneTravel = TslBaseLobbySceneTravel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.MeleeWeaponToSkillInterface.GetSkillEntryForMeleeWeapon
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           IsPressed                      (Parm, ZeroConstructor, IsPlainOldData)
// EUTSkillEntry                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EUTSkillEntry UMeleeWeaponToSkillInterface::GetSkillEntryForMeleeWeapon(bool IsPressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.MeleeWeaponToSkillInterface.GetSkillEntryForMeleeWeapon");

	UMeleeWeaponToSkillInterface_GetSkillEntryForMeleeWeapon_Params params;
	params.IsPressed = IsPressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.MissionManager.OnRedZoneStarted
// (Final, Native, Public)

void AMissionManager::OnRedZoneStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.MissionManager.OnRedZoneStarted");

	AMissionManager_OnRedZoneStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.MissionManager.OnRedZoneEnded
// (Final, Native, Public)

void AMissionManager::OnRedZoneEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.MissionManager.OnRedZoneEnded");

	AMissionManager_OnRedZoneEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.MissionManager.CheckIfDrivingInRedZone
// (Final, Native, Public)

void AMissionManager::CheckIfDrivingInRedZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.MissionManager.CheckIfDrivingInRedZone");

	AMissionManager_CheckIfDrivingInRedZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.MoveAntiCheatComponent.Ping2Server
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          ServerTime                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ClientTime                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ClientLoc                      (ConstParm, Parm, ReferenceParm)
// float                          MaxSpeed                       (Parm, ZeroConstructor, IsPlainOldData)

void UMoveAntiCheatComponent::Ping2Server(float ServerTime, float ClientTime, const struct FVector_NetQuantize100& ClientLoc, float MaxSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.MoveAntiCheatComponent.Ping2Server");

	UMoveAntiCheatComponent_Ping2Server_Params params;
	params.ServerTime = ServerTime;
	params.ClientTime = ClientTime;
	params.ClientLoc = ClientLoc;
	params.MaxSpeed = MaxSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.MoveAntiCheatComponent.Ping2Client
// (Net, Native, Event, Public, NetClient)
// Parameters:
// float                          ServerTime                     (Parm, ZeroConstructor, IsPlainOldData)

void UMoveAntiCheatComponent::Ping2Client(float ServerTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.MoveAntiCheatComponent.Ping2Client");

	UMoveAntiCheatComponent_Ping2Client_Params params;
	params.ServerTime = ServerTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.MoveAntiCheatComponent.OnPreReconnectOnServer
// (Final, Native, Public)

void UMoveAntiCheatComponent::OnPreReconnectOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.MoveAntiCheatComponent.OnPreReconnectOnServer");

	UMoveAntiCheatComponent_OnPreReconnectOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.MoveAntiCheatComponent.DebugDrawLine
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                 Start                          (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 End                            (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void UMoveAntiCheatComponent::DebugDrawLine(const struct FVector& Start, const struct FVector& End)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.MoveAntiCheatComponent.DebugDrawLine");

	UMoveAntiCheatComponent_DebugDrawLine_Params params;
	params.Start = Start;
	params.End = End;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.MyLandscape.GameEventFighting
// (Final, Native, Private)

void AMyLandscape::GameEventFighting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.MyLandscape.GameEventFighting");

	AMyLandscape_GameEventFighting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.MyLandscape.AboutToSwitchViewTargetPlayer
// (Final, Native, Private)

void AMyLandscape::AboutToSwitchViewTargetPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.MyLandscape.AboutToSwitchViewTargetPlayer");

	AMyLandscape_AboutToSwitchViewTargetPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.NetworkOnlineDriver.SwitchPoseStateServer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESTEPoseState>     PoseState                      (Parm, ZeroConstructor, IsPlainOldData)

void ANetworkOnlineDriver::SwitchPoseStateServer(class ASTExtraBaseCharacter* TargetCharacter, TEnumAsByte<ESTEPoseState> PoseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NetworkOnlineDriver.SwitchPoseStateServer");

	ANetworkOnlineDriver_SwitchPoseStateServer_Params params;
	params.TargetCharacter = TargetCharacter;
	params.PoseState = PoseState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.NetworkOnlineDriver.SwitchPoseStateClient
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESTEPoseState>     PoseState                      (Parm, ZeroConstructor, IsPlainOldData)

void ANetworkOnlineDriver::SwitchPoseStateClient(class ASTExtraBaseCharacter* TargetCharacter, TEnumAsByte<ESTEPoseState> PoseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NetworkOnlineDriver.SwitchPoseStateClient");

	ANetworkOnlineDriver_SwitchPoseStateClient_Params params;
	params.TargetCharacter = TargetCharacter;
	params.PoseState = PoseState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.NetworkOnlineDriver.ServerStopFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// int                            CurrentBullet                  (Parm, ZeroConstructor, IsPlainOldData)

void ANetworkOnlineDriver::ServerStopFire(class ASTExtraBaseCharacter* TargetCharacter, int CurrentBullet)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NetworkOnlineDriver.ServerStopFire");

	ANetworkOnlineDriver_ServerStopFire_Params params;
	params.TargetCharacter = TargetCharacter;
	params.CurrentBullet = CurrentBullet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.NetworkOnlineDriver.ServerStartFire
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// int                            BurstShootBulletsLimit         (Parm, ZeroConstructor, IsPlainOldData)
// float                          BurstShootTimeLimit            (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EShootWeaponShootMode> ShootMode                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SimpleShootTarget              (Parm, IsPlainOldData)
// struct FVector2D               ClientScreenSize               (Parm, IsPlainOldData)

void ANetworkOnlineDriver::ServerStartFire(class ASTExtraBaseCharacter* TargetCharacter, int BurstShootBulletsLimit, float BurstShootTimeLimit, TEnumAsByte<EShootWeaponShootMode> ShootMode, const struct FVector& SimpleShootTarget, const struct FVector2D& ClientScreenSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NetworkOnlineDriver.ServerStartFire");

	ANetworkOnlineDriver_ServerStartFire_Params params;
	params.TargetCharacter = TargetCharacter;
	params.BurstShootBulletsLimit = BurstShootBulletsLimit;
	params.BurstShootTimeLimit = BurstShootTimeLimit;
	params.ShootMode = ShootMode;
	params.SimpleShootTarget = SimpleShootTarget;
	params.ClientScreenSize = ClientScreenSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.NetworkOnlineDriver.ServerStartBarrel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)

void ANetworkOnlineDriver::ServerStartBarrel(class ASTExtraBaseCharacter* TargetCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NetworkOnlineDriver.ServerStartBarrel");

	ANetworkOnlineDriver_ServerStartBarrel_Params params;
	params.TargetCharacter = TargetCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.NetworkOnlineDriver.ServerSetReloadMethod
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EWeaponReloadMethod> reloadMethod                   (Parm, ZeroConstructor, IsPlainOldData)

void ANetworkOnlineDriver::ServerSetReloadMethod(class ASTExtraBaseCharacter* TargetCharacter, TEnumAsByte<EWeaponReloadMethod> reloadMethod)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NetworkOnlineDriver.ServerSetReloadMethod");

	ANetworkOnlineDriver_ServerSetReloadMethod_Params params;
	params.TargetCharacter = TargetCharacter;
	params.reloadMethod = reloadMethod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.NetworkOnlineDriver.ServerSetFireMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// EGunFireMode                   FireMode                       (Parm, ZeroConstructor, IsPlainOldData)

void ANetworkOnlineDriver::ServerSetFireMode(class ASTExtraBaseCharacter* TargetCharacter, EGunFireMode FireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NetworkOnlineDriver.ServerSetFireMode");

	ANetworkOnlineDriver_ServerSetFireMode_Params params;
	params.TargetCharacter = TargetCharacter;
	params.FireMode = FireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.NetworkOnlineDriver.ServerReplicateExplosionEffect
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class UClass*                  Template                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              Trans                          (Parm, IsPlainOldData)
// class AActor*                  ActorOwner                     (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   InstigatorPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// ESpawnActorCollisionHandlingMethod method                         (Parm, ZeroConstructor, IsPlainOldData)

void ANetworkOnlineDriver::ServerReplicateExplosionEffect(class UClass* Template, const struct FTransform& Trans, class AActor* ActorOwner, class APawn* InstigatorPawn, ESpawnActorCollisionHandlingMethod method)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NetworkOnlineDriver.ServerReplicateExplosionEffect");

	ANetworkOnlineDriver_ServerReplicateExplosionEffect_Params params;
	params.Template = Template;
	params.Trans = Trans;
	params.ActorOwner = ActorOwner;
	params.InstigatorPawn = InstigatorPawn;
	params.method = method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.NetworkOnlineDriver.BroadcastClientsSpawnExplosionEffect
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, NetValidate)
// Parameters:
// class UClass*                  Template                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              Trans                          (Parm, IsPlainOldData)
// class AActor*                  ActorOwner                     (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   InstigatorPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// ESpawnActorCollisionHandlingMethod method                         (Parm, ZeroConstructor, IsPlainOldData)

void ANetworkOnlineDriver::BroadcastClientsSpawnExplosionEffect(class UClass* Template, const struct FTransform& Trans, class AActor* ActorOwner, class APawn* InstigatorPawn, ESpawnActorCollisionHandlingMethod method)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NetworkOnlineDriver.BroadcastClientsSpawnExplosionEffect");

	ANetworkOnlineDriver_BroadcastClientsSpawnExplosionEffect_Params params;
	params.Template = Template;
	params.Trans = Trans;
	params.ActorOwner = ActorOwner;
	params.InstigatorPawn = InstigatorPawn;
	params.method = method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STNewbieGuideConditionBase.ReconnectRecover
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTNewbieGuideConditionBase::ReconnectRecover()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STNewbieGuideConditionBase.ReconnectRecover");

	USTNewbieGuideConditionBase_ReconnectRecover_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STNewbieGuideConditionBase.IsOK
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTNewbieGuideConditionBase::IsOK()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STNewbieGuideConditionBase.IsOK");

	USTNewbieGuideConditionBase_IsOK_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.NewbieGuideComponent.SendNewbieMsg
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            tipsID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isStart                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            tipsIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UNewbieGuideComponent::SendNewbieMsg(int tipsID, bool isStart, int tipsIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NewbieGuideComponent.SendNewbieMsg");

	UNewbieGuideComponent_SendNewbieMsg_Params params;
	params.tipsID = tipsID;
	params.isStart = isStart;
	params.tipsIndex = tipsIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.NewbieGuideComponent.InitComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerController* _OwnerController               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    _FinishedTips                  (Parm, ZeroConstructor)
// TArray<int>                    _FinishedCounts                (Parm, ZeroConstructor)
// TEnumAsByte<ENewbieGuidePlayerCategory> curPlayerCategory              (Parm, ZeroConstructor, IsPlainOldData)

void UNewbieGuideComponent::InitComponent(class ASTExtraPlayerController* _OwnerController, TArray<int> _FinishedTips, TArray<int> _FinishedCounts, TEnumAsByte<ENewbieGuidePlayerCategory> curPlayerCategory)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.NewbieGuideComponent.InitComponent");

	UNewbieGuideComponent_InitComponent_Params params;
	params._OwnerController = _OwnerController;
	params._FinishedTips = _FinishedTips;
	params._FinishedCounts = _FinishedCounts;
	params.curPlayerCategory = curPlayerCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.OBModePositionWidget.SetPlayerCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerController* Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)

void UOBModePositionWidget::SetPlayerCharacter(class ASTExtraPlayerController* Controller, int idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.OBModePositionWidget.SetPlayerCharacter");

	UOBModePositionWidget_SetPlayerCharacter_Params params;
	params.Controller = Controller;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.OBModePositionWidget.RefreshPlayerHealth
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          hpRatio                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          breathRatio                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsNearDeath                    (Parm, ZeroConstructor, IsPlainOldData)

void UOBModePositionWidget::RefreshPlayerHealth(float hpRatio, float breathRatio, bool IsNearDeath)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.OBModePositionWidget.RefreshPlayerHealth");

	UOBModePositionWidget_RefreshPlayerHealth_Params params;
	params.hpRatio = hpRatio;
	params.breathRatio = breathRatio;
	params.IsNearDeath = IsNearDeath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.OBModePositionWidget.OnItemClicked
// (Final, Native, Public, BlueprintCallable)

void UOBModePositionWidget::OnItemClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.OBModePositionWidget.OnItemClicked");

	UOBModePositionWidget_OnItemClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ObserverCameraComponent.GetCameraView
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FMinimalViewInfo        DesiredView                    (Parm, OutParm)

void UObserverCameraComponent::GetCameraView(float DeltaTime, struct FMinimalViewInfo* DesiredView)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ObserverCameraComponent.GetCameraView");

	UObserverCameraComponent_GetCameraView_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (DesiredView != nullptr)
		*DesiredView = params.DesiredView;
}


// Function ShadowTrackerExtra.OnTimeSpawnChallengeLevelRules.SpawnLevelDirector
// (Native, Public)
// Parameters:
// class UClass*                  LevelDirectorClass             (Parm, ZeroConstructor, IsPlainOldData)

void UOnTimeSpawnChallengeLevelRules::SpawnLevelDirector(class UClass* LevelDirectorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.OnTimeSpawnChallengeLevelRules.SpawnLevelDirector");

	UOnTimeSpawnChallengeLevelRules_SpawnLevelDirector_Params params;
	params.LevelDirectorClass = LevelDirectorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.OnTimeSpawnChallengeLevelRules.OnReceiveTriggerMsg
// (Native, Public)
// Parameters:
// class UTriggerAction*          TriggerAction                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 Msg                            (Parm, ZeroConstructor)

void UOnTimeSpawnChallengeLevelRules::OnReceiveTriggerMsg(class UTriggerAction* TriggerAction, const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.OnTimeSpawnChallengeLevelRules.OnReceiveTriggerMsg");

	UOnTimeSpawnChallengeLevelRules_OnReceiveTriggerMsg_Params params;
	params.TriggerAction = TriggerAction;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.OnTimeSpawnChallengeLevelRules.InitLevel
// (Native, Public)

void UOnTimeSpawnChallengeLevelRules::InitLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.OnTimeSpawnChallengeLevelRules.InitLevel");

	UOnTimeSpawnChallengeLevelRules_InitLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.OBModeAirDropWidget.SetAirDrop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AAirDropBoxActor*        DropBox                        (Parm, ZeroConstructor, IsPlainOldData)

void UOBModeAirDropWidget::SetAirDrop(class AAirDropBoxActor* DropBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.OBModeAirDropWidget.SetAirDrop");

	UOBModeAirDropWidget_SetAirDrop_Params params;
	params.DropBox = DropBox;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.OBModeAirDropWidget.OnItemClicked
// (Final, Native, Public, BlueprintCallable)

void UOBModeAirDropWidget::OnItemClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.OBModeAirDropWidget.OnItemClicked");

	UOBModeAirDropWidget_OnItemClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.ShowMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void APickUpWrapperActor::ShowMesh(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.ShowMesh");

	APickUpWrapperActor_ShowMesh_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.ShowActor
// (Final, Native, Protected)

void APickUpWrapperActor::ShowActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.ShowActor");

	APickUpWrapperActor_ShowActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.SetDefineID
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DID                            (ConstParm, Parm, OutParm, ReferenceParm)

void APickUpWrapperActor::SetDefineID(const struct FItemDefineID& DID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.SetDefineID");

	APickUpWrapperActor_SetDefineID_Params params;
	params.DID = DID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.SetCountOnServerAfterSpawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            _Count                         (Parm, ZeroConstructor, IsPlainOldData)

void APickUpWrapperActor::SetCountOnServerAfterSpawn(int _Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.SetCountOnServerAfterSpawn");

	APickUpWrapperActor_SetCountOnServerAfterSpawn_Params params;
	params._Count = _Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.RPC_Broadcast_NotifyAllClientsModifySavedAdditionalDataList
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable, NetValidate)
// Parameters:
// TArray<struct FBattleItemAdditionalData> DataList                       (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void APickUpWrapperActor::RPC_Broadcast_NotifyAllClientsModifySavedAdditionalDataList(TArray<struct FBattleItemAdditionalData> DataList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.RPC_Broadcast_NotifyAllClientsModifySavedAdditionalDataList");

	APickUpWrapperActor_RPC_Broadcast_NotifyAllClientsModifySavedAdditionalDataList_Params params;
	params.DataList = DataList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.RPC_Broadcast_NotifyAllClientsHideActorForSomeTime
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable, NetValidate)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void APickUpWrapperActor::RPC_Broadcast_NotifyAllClientsHideActorForSomeTime(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.RPC_Broadcast_NotifyAllClientsHideActorForSomeTime");

	APickUpWrapperActor_RPC_Broadcast_NotifyAllClientsHideActorForSomeTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.OnRep_AvaterID
// (Final, Native, Public)

void APickUpWrapperActor::OnRep_AvaterID()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.OnRep_AvaterID");

	APickUpWrapperActor_OnRep_AvaterID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.OnRep_AttachmentReplication
// (Native, Public)

void APickUpWrapperActor::OnRep_AttachmentReplication()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.OnRep_AttachmentReplication");

	APickUpWrapperActor_OnRep_AttachmentReplication_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.OnRep_AttachedActor
// (Final, Native, Protected)

void APickUpWrapperActor::OnRep_AttachedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.OnRep_AttachedActor");

	APickUpWrapperActor_OnRep_AttachedActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.ModifyData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            _Count                         (Parm, ZeroConstructor, IsPlainOldData)

void APickUpWrapperActor::ModifyData(int _Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.ModifyData");

	APickUpWrapperActor_ModifyData_Params params;
	params._Count = _Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.MarkIsDropedByPlayerOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Ret                            (Parm, ZeroConstructor, IsPlainOldData)

void APickUpWrapperActor::MarkIsDropedByPlayerOnServer(bool Ret)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.MarkIsDropedByPlayerOnServer");

	APickUpWrapperActor_MarkIsDropedByPlayerOnServer_Params params;
	params.Ret = Ret;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.InitData
// (Final, Native, Public)
// Parameters:
// class USpotSceneComponent*     GenerateSpotComponent          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            ItemCount                      (Parm, ZeroConstructor, IsPlainOldData)

void APickUpWrapperActor::InitData(class USpotSceneComponent* GenerateSpotComponent, int ItemCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.InitData");

	APickUpWrapperActor_InitData_Params params;
	params.GenerateSpotComponent = GenerateSpotComponent;
	params.ItemCount = ItemCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.GetNetGUIDOffsetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int APickUpWrapperActor::GetNetGUIDOffsetValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.GetNetGUIDOffsetValue");

	APickUpWrapperActor_GetNetGUIDOffsetValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.GetDataList
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FPickUpItemData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPickUpItemData> APickUpWrapperActor::GetDataList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.GetDataList");

	APickUpWrapperActor_GetDataList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.ForceNetUpdate
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APickUpWrapperActor::ForceNetUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.ForceNetUpdate");

	APickUpWrapperActor_ForceNetUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.FinishPickedUp
// (Native, Protected)
// Parameters:
// class AActor*                  OwnerTarget                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            AdditionalParam                (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   EquipSlotName                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            PickUpCount                    (Parm, ZeroConstructor, IsPlainOldData)

void APickUpWrapperActor::FinishPickedUp(class AActor* OwnerTarget, int AdditionalParam, const struct FName& EquipSlotName, int PickUpCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.FinishPickedUp");

	APickUpWrapperActor_FinishPickedUp_Params params;
	params.OwnerTarget = OwnerTarget;
	params.AdditionalParam = AdditionalParam;
	params.EquipSlotName = EquipSlotName;
	params.PickUpCount = PickUpCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.CheckPickUpDataIsWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APickUpWrapperActor::CheckPickUpDataIsWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.CheckPickUpDataIsWeapon");

	APickUpWrapperActor_CheckPickUpDataIsWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.BroadcastDataToAllClients
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable, NetValidate)
// Parameters:
// int                            Count_New                      (Parm, ZeroConstructor, IsPlainOldData)

void APickUpWrapperActor::BroadcastDataToAllClients(int Count_New)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.BroadcastDataToAllClients");

	APickUpWrapperActor_BroadcastDataToAllClients_Params params;
	params.Count_New = Count_New;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpWrapperActor.AddAdditionalDataListOnServerAfterSpawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FBattleItemAdditionalData> DataList                       (Parm, ZeroConstructor)

void APickUpWrapperActor::AddAdditionalDataListOnServerAfterSpawn(TArray<struct FBattleItemAdditionalData> DataList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpWrapperActor.AddAdditionalDataListOnServerAfterSpawn");

	APickUpWrapperActor_AddAdditionalDataListOnServerAfterSpawn_Params params;
	params.DataList = DataList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpListWrapperActor.RPC_Broadcast_NotifyAllClientsModifyCount
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable, NetValidate)
// Parameters:
// int                            ItemInstanceID                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            RetCount                       (Parm, ZeroConstructor, IsPlainOldData)

void APickUpListWrapperActor::RPC_Broadcast_NotifyAllClientsModifyCount(int ItemInstanceID, int RetCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpListWrapperActor.RPC_Broadcast_NotifyAllClientsModifyCount");

	APickUpListWrapperActor_RPC_Broadcast_NotifyAllClientsModifyCount_Params params;
	params.ItemInstanceID = ItemInstanceID;
	params.RetCount = RetCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpListWrapperActor.RPC_Broadcast_ForceSyncAllData
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable, NetValidate)
// Parameters:
// TArray<struct FPickUpItemData> DataList                       (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void APickUpListWrapperActor::RPC_Broadcast_ForceSyncAllData(TArray<struct FPickUpItemData> DataList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpListWrapperActor.RPC_Broadcast_ForceSyncAllData");

	APickUpListWrapperActor_RPC_Broadcast_ForceSyncAllData_Params params;
	params.DataList = DataList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.PickUpListWrapperActor.OnBoxEmptyDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int                            boxId                          (Parm, ZeroConstructor, IsPlainOldData)

void APickUpListWrapperActor::OnBoxEmptyDelegate__DelegateSignature(int boxId)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.PickUpListWrapperActor.OnBoxEmptyDelegate__DelegateSignature");

	APickUpListWrapperActor_OnBoxEmptyDelegate__DelegateSignature_Params params;
	params.boxId = boxId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickUpListWrapperActor.GetDataList
// (Native, Public)
// Parameters:
// TArray<struct FPickUpItemData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPickUpItemData> APickUpListWrapperActor::GetDataList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpListWrapperActor.GetDataList");

	APickUpListWrapperActor_GetDataList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.PickUpListWrapperActor.FinishPickedUp
// (Native, Protected)
// Parameters:
// class AActor*                  OwnerTarget                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            AdditionalParam                (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   EquipSlotName                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            PickUpCount                    (Parm, ZeroConstructor, IsPlainOldData)

void APickUpListWrapperActor::FinishPickedUp(class AActor* OwnerTarget, int AdditionalParam, const struct FName& EquipSlotName, int PickUpCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickUpListWrapperActor.FinishPickedUp");

	APickUpListWrapperActor_FinishPickedUp_Params params;
	params.OwnerTarget = OwnerTarget;
	params.AdditionalParam = AdditionalParam;
	params.EquipSlotName = EquipSlotName;
	params.PickUpCount = PickUpCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerGunCollosionComp.SetEffect
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// bool                           Visbile                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 EffectLoc                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPlayerGunCollosionComp::SetEffect(bool Visbile, const struct FVector& EffectLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerGunCollosionComp.SetEffect");

	UPlayerGunCollosionComp_SetEffect_Params params;
	params.Visbile = Visbile;
	params.EffectLoc = EffectLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerGunCollosionComp.CheckCollision
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// int                            InFoldFactor                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 FoldPoint                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 FoldNormal                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UPlayerGunCollosionComp::CheckCollision(int InFoldFactor, const struct FVector& FoldPoint, const struct FVector& FoldNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerGunCollosionComp.CheckCollision");

	UPlayerGunCollosionComp_CheckCollision_Params params;
	params.InFoldFactor = InFoldFactor;
	params.FoldPoint = FoldPoint;
	params.FoldNormal = FoldNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.StartOnPlane
// (Final, Native, Public, BlueprintCallable)

void UPlayerSecurityInfoCollector::StartOnPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.StartOnPlane");

	UPlayerSecurityInfoCollector_StartOnPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.PlayerCanJump
// (Final, Native, Public, BlueprintCallable)

void UPlayerSecurityInfoCollector::PlayerCanJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.PlayerCanJump");

	UPlayerSecurityInfoCollector_PlayerCanJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleSyncCircleInfo
// (Final, Native, Protected)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerSecurityInfoCollector::HandleSyncCircleInfo(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleSyncCircleInfo");

	UPlayerSecurityInfoCollector_HandleSyncCircleInfo_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterSafeZoneTips
// (Final, Native, Protected)
// Parameters:
// float                          SafeZoneTime                   (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerSecurityInfoCollector::HandleCharacterSafeZoneTips(float SafeZoneTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterSafeZoneTips");

	UPlayerSecurityInfoCollector_HandleCharacterSafeZoneTips_Params params;
	params.SafeZoneTime = SafeZoneTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterCircleWaveOver
// (Final, Native, Protected)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerSecurityInfoCollector::HandleCharacterCircleWaveOver(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterCircleWaveOver");

	UPlayerSecurityInfoCollector_HandleCharacterCircleWaveOver_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterCircleSizeAndPosition
// (Final, Native, Protected, HasDefaults)
// Parameters:
// struct FVector                 BlueCircleSync                 (Parm, IsPlainOldData)
// struct FVector                 WhiteCircleSync                (Parm, IsPlainOldData)
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerSecurityInfoCollector::HandleCharacterCircleSizeAndPosition(const struct FVector& BlueCircleSync, const struct FVector& WhiteCircleSync, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterCircleSizeAndPosition");

	UPlayerSecurityInfoCollector_HandleCharacterCircleSizeAndPosition_Params params;
	params.BlueCircleSync = BlueCircleSync;
	params.WhiteCircleSync = WhiteCircleSync;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterBlueCircleRun
// (Final, Native, Protected)
// Parameters:
// float                          BlueCircleRunTime              (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerSecurityInfoCollector::HandleCharacterBlueCircleRun(float BlueCircleRunTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterBlueCircleRun");

	UPlayerSecurityInfoCollector_HandleCharacterBlueCircleRun_Params params;
	params.BlueCircleRunTime = BlueCircleRunTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterBlueCirclePreWarning
// (Final, Native, Protected)
// Parameters:
// float                          BlueCirclePreWarningTime       (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerSecurityInfoCollector::HandleCharacterBlueCirclePreWarning(float BlueCirclePreWarningTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterBlueCirclePreWarning");

	UPlayerSecurityInfoCollector_HandleCharacterBlueCirclePreWarning_Params params;
	params.BlueCirclePreWarningTime = BlueCirclePreWarningTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterAttrChangedWithDetail
// (Final, Native, Protected)
// Parameters:
// class AActor*                  nowActor                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 AttrName                       (Parm, ZeroConstructor)
// float                          ValueDelta                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ResultValue                    (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerSecurityInfoCollector::HandleCharacterAttrChangedWithDetail(class AActor* nowActor, const struct FString& AttrName, float ValueDelta, float ResultValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.HandleCharacterAttrChangedWithDetail");

	UPlayerSecurityInfoCollector_HandleCharacterAttrChangedWithDetail_Params params;
	params.nowActor = nowActor;
	params.AttrName = AttrName;
	params.ValueDelta = ValueDelta;
	params.ResultValue = ResultValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.ExitParachute
// (Final, Native, Public, BlueprintCallable)

void UPlayerSecurityInfoCollector::ExitParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.ExitParachute");

	UPlayerSecurityInfoCollector_ExitParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.EnterParachute
// (Final, Native, Public, BlueprintCallable)

void UPlayerSecurityInfoCollector::EnterParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.EnterParachute");

	UPlayerSecurityInfoCollector_EnterParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSecurityInfoCollector.EnterJumping
// (Final, Native, Public, BlueprintCallable)

void UPlayerSecurityInfoCollector::EnterJumping()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSecurityInfoCollector.EnterJumping");

	UPlayerSecurityInfoCollector_EnterJumping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.ServerPutDownTargetWithLocation
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (Parm, IsPlainOldData)

void UPickupManagerComponent::ServerPutDownTargetWithLocation(class AActor* Target, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.ServerPutDownTargetWithLocation");

	UPickupManagerComponent_ServerPutDownTargetWithLocation_Params params;
	params.Target = Target;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.ServerPutDownTarget
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UPickupManagerComponent::ServerPutDownTarget(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.ServerPutDownTarget");

	UPickupManagerComponent_ServerPutDownTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.ServerPickUpTarget
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            AdditionalParam                (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   EquipSlotName                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            PickUpCount                    (Parm, ZeroConstructor, IsPlainOldData)

void UPickupManagerComponent::ServerPickUpTarget(class AActor* Target, int AdditionalParam, const struct FName& EquipSlotName, int PickUpCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.ServerPickUpTarget");

	UPickupManagerComponent_ServerPickUpTarget_Params params;
	params.Target = Target;
	params.AdditionalParam = AdditionalParam;
	params.EquipSlotName = EquipSlotName;
	params.PickUpCount = PickUpCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.PutDownTargetWithLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (Parm, IsPlainOldData)

void UPickupManagerComponent::PutDownTargetWithLocation(class AActor* Target, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.PutDownTargetWithLocation");

	UPickupManagerComponent_PutDownTargetWithLocation_Params params;
	params.Target = Target;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.PutDownTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UPickupManagerComponent::PutDownTarget(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.PutDownTarget");

	UPickupManagerComponent_PutDownTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.PickUpTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            AdditionalParam                (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   EquipSlotName                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            PickUpCount                    (Parm, ZeroConstructor, IsPlainOldData)

void UPickupManagerComponent::PickUpTarget(class AActor* Target, int AdditionalParam, const struct FName& EquipSlotName, int PickUpCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.PickUpTarget");

	UPickupManagerComponent_PickUpTarget_Params params;
	params.Target = Target;
	params.AdditionalParam = AdditionalParam;
	params.EquipSlotName = EquipSlotName;
	params.PickUpCount = PickUpCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.NotifyMissPickupAvailableActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UPickupManagerComponent::NotifyMissPickupAvailableActor(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.NotifyMissPickupAvailableActor");

	UPickupManagerComponent_NotifyMissPickupAvailableActor_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.NotifyMeetPickupAvailableActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UPickupManagerComponent::NotifyMeetPickupAvailableActor(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.NotifyMeetPickupAvailableActor");

	UPickupManagerComponent_NotifyMeetPickupAvailableActor_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.GetRandomPutDownLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                          OverrideFindPutDownPointZThreshold (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UPickupManagerComponent::GetRandomPutDownLocation(float OverrideFindPutDownPointZThreshold)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.GetRandomPutDownLocation");

	UPickupManagerComponent_GetRandomPutDownLocation_Params params;
	params.OverrideFindPutDownPointZThreshold = OverrideFindPutDownPointZThreshold;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.PickupManagerComponent.GetConfirmedPickupAvailableActors
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)

void UPickupManagerComponent::GetConfirmedPickupAvailableActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.GetConfirmedPickupAvailableActors");

	UPickupManagerComponent_GetConfirmedPickupAvailableActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.ControlClientPutDownTargetWithLocation
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient, NetValidate)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Loc                            (Parm, IsPlainOldData)

void UPickupManagerComponent::ControlClientPutDownTargetWithLocation(class AActor* Target, const struct FVector& Loc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.ControlClientPutDownTargetWithLocation");

	UPickupManagerComponent_ControlClientPutDownTargetWithLocation_Params params;
	params.Target = Target;
	params.Loc = Loc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.ControlClientPutDownTarget
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)

void UPickupManagerComponent::ControlClientPutDownTarget(class AActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.ControlClientPutDownTarget");

	UPickupManagerComponent_ControlClientPutDownTarget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.ControlClientPickUpTarget
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            AdditionalParam                (Parm, ZeroConstructor, IsPlainOldData)

void UPickupManagerComponent::ControlClientPickUpTarget(class AActor* Target, int AdditionalParam)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.ControlClientPickUpTarget");

	UPickupManagerComponent_ControlClientPickUpTarget_Params params;
	params.Target = Target;
	params.AdditionalParam = AdditionalParam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PickupManagerComponent.ClampWorldLocation
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 OutVector                      (Parm, OutParm, IsPlainOldData)

void UPickupManagerComponent::ClampWorldLocation(struct FVector* OutVector)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PickupManagerComponent.ClampWorldLocation");

	UPickupManagerComponent_ClampWorldLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutVector != nullptr)
		*OutVector = params.OutVector;
}


// Function ShadowTrackerExtra.PlayerSwimComponent.UpdateSwimMove_BluePrint
// (Native, Event, Public, BlueprintEvent)

void UPlayerSwimComponent::UpdateSwimMove_BluePrint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSwimComponent.UpdateSwimMove_BluePrint");

	UPlayerSwimComponent_UpdateSwimMove_BluePrint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSwimComponent.UpdatePlayerState_BluePrint
// (Native, Event, Public, BlueprintEvent)

void UPlayerSwimComponent::UpdatePlayerState_BluePrint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSwimComponent.UpdatePlayerState_BluePrint");

	UPlayerSwimComponent_UpdatePlayerState_BluePrint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSwimComponent.UpdateCameraState_BluePrint
// (Native, Event, Public, BlueprintEvent)

void UPlayerSwimComponent::UpdateCameraState_BluePrint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSwimComponent.UpdateCameraState_BluePrint");

	UPlayerSwimComponent_UpdateCameraState_BluePrint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSwimComponent.UpdateBreath_BluePrint
// (Native, Event, Public, BlueprintEvent)

void UPlayerSwimComponent::UpdateBreath_BluePrint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSwimComponent.UpdateBreath_BluePrint");

	UPlayerSwimComponent_UpdateBreath_BluePrint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSwimComponent.SyncWaterObject_BluePrint
// (Native, Event, Public, BlueprintEvent)

void UPlayerSwimComponent::SyncWaterObject_BluePrint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSwimComponent.SyncWaterObject_BluePrint");

	UPlayerSwimComponent_SyncWaterObject_BluePrint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSwimComponent.SetDeltTime_BluePrint
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UPlayerSwimComponent::SetDeltTime_BluePrint(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSwimComponent.SetDeltTime_BluePrint");

	UPlayerSwimComponent_SetDeltTime_BluePrint_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PlayerSwimComponent.GetWaterObject
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UPlayerSwimComponent::GetWaterObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerSwimComponent.GetWaterObject");

	UPlayerSwimComponent_GetWaterObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.PlayerVaultComponent.VaultFromCPP
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UPlayerVaultComponent::VaultFromCPP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerVaultComponent.VaultFromCPP");

	UPlayerVaultComponent_VaultFromCPP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.PlayerVaultComponent.UpdateVault_BluePrint
// (Native, Event, Public, BlueprintEvent)

void UPlayerVaultComponent::UpdateVault_BluePrint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PlayerVaultComponent.UpdateVault_BluePrint");

	UPlayerVaultComponent_UpdateVault_BluePrint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.SetDoorBroken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bExtraDoor                     (Parm, ZeroConstructor, IsPlainOldData)

void APUBGDoor::SetDoorBroken(bool bExtraDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.SetDoorBroken");

	APUBGDoor_SetDoorBroken_Params params;
	params.bExtraDoor = bExtraDoor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.RefreshUIOnClient
// (Final, Native, Public, BlueprintCallable)

void APUBGDoor::RefreshUIOnClient()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.RefreshUIOnClient");

	APUBGDoor_RefreshUIOnClient_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.OpenDoorBy
// (Final, Native, Public)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           extraDoor                      (Parm, ZeroConstructor, IsPlainOldData)

void APUBGDoor::OpenDoorBy(class ACharacter* Character, bool extraDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.OpenDoorBy");

	APUBGDoor_OpenDoorBy_Params params;
	params.Character = Character;
	params.extraDoor = extraDoor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.OnRep_RepDoorStateEx
// (Final, Native, Public)

void APUBGDoor::OnRep_RepDoorStateEx()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.OnRep_RepDoorStateEx");

	APUBGDoor_OnRep_RepDoorStateEx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.OnRep_RepDoorState
// (Final, Native, Public)

void APUBGDoor::OnRep_RepDoorState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.OnRep_RepDoorState");

	APUBGDoor_OnRep_RepDoorState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.OnRep_RepDoorBrokenEx
// (Final, Native, Public)

void APUBGDoor::OnRep_RepDoorBrokenEx()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.OnRep_RepDoorBrokenEx");

	APUBGDoor_OnRep_RepDoorBrokenEx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.OnRep_RepDoorBroken
// (Final, Native, Public)

void APUBGDoor::OnRep_RepDoorBroken()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.OnRep_RepDoorBroken");

	APUBGDoor_OnRep_RepDoorBroken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.OnEndOverlapEx
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*     activatedComp                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void APUBGDoor::OnEndOverlapEx(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.OnEndOverlapEx");

	APUBGDoor_OnEndOverlapEx_Params params;
	params.activatedComp = activatedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.OnEndOverlap
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*     activatedComp                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void APUBGDoor::OnEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.OnEndOverlap");

	APUBGDoor_OnEndOverlap_Params params;
	params.activatedComp = activatedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.OnDoorRPC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAimingExtraDoor               (Parm, ZeroConstructor, IsPlainOldData)

void APUBGDoor::OnDoorRPC(class ACharacter* Character, bool bAimingExtraDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.OnDoorRPC");

	APUBGDoor_OnDoorRPC_Params params;
	params.Character = Character;
	params.bAimingExtraDoor = bAimingExtraDoor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.OnBeginOverlapEx
// (Final, Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     activatedComp                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APUBGDoor::OnBeginOverlapEx(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.OnBeginOverlapEx");

	APUBGDoor_OnBeginOverlapEx_Params params;
	params.activatedComp = activatedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.OnBeginOverlap
// (Final, Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     activatedComp                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void APUBGDoor::OnBeginOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.OnBeginOverlap");

	APUBGDoor_OnBeginOverlap_Params params;
	params.activatedComp = activatedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.IsAimingExtraDoor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool APUBGDoor::IsAimingExtraDoor(class ACharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.IsAimingExtraDoor");

	APUBGDoor_IsAimingExtraDoor_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.PUBGDoor.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBoxComponent*           interactionBox                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStaticMeshComponent*    doorMesh                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           inDoubleDoor                   (Parm, ZeroConstructor, IsPlainOldData)
// class UBoxComponent*           interactionBoxEx               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UStaticMeshComponent*    doorMeshEx                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void APUBGDoor::Init(class UBoxComponent* interactionBox, class UStaticMeshComponent* doorMesh, bool inDoubleDoor, class UBoxComponent* interactionBoxEx, class UStaticMeshComponent* doorMeshEx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.Init");

	APUBGDoor_Init_Params params;
	params.interactionBox = interactionBox;
	params.doorMesh = doorMesh;
	params.inDoubleDoor = inDoubleDoor;
	params.interactionBoxEx = interactionBoxEx;
	params.doorMeshEx = doorMeshEx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.ForceNetUpdate
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void APUBGDoor::ForceNetUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.ForceNetUpdate");

	APUBGDoor_ForceNetUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.CloseDoorBy
// (Final, Native, Public)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           extraDoor                      (Parm, ZeroConstructor, IsPlainOldData)

void APUBGDoor::CloseDoorBy(class ACharacter* Character, bool extraDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.CloseDoorBy");

	APUBGDoor_CloseDoorBy_Params params;
	params.Character = Character;
	params.extraDoor = extraDoor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.BP_DoorBroken
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           isBeginPlay                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bExtraDoor                     (Parm, ZeroConstructor, IsPlainOldData)

void APUBGDoor::BP_DoorBroken(bool isBeginPlay, bool bExtraDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.BP_DoorBroken");

	APUBGDoor_BP_DoorBroken_Params params;
	params.isBeginPlay = isBeginPlay;
	params.bExtraDoor = bExtraDoor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.ActionDoorOnClient
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            doorStateDst                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bExtraDoor                     (Parm, ZeroConstructor, IsPlainOldData)

void APUBGDoor::ActionDoorOnClient(int doorStateDst, bool bExtraDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.ActionDoorOnClient");

	APUBGDoor_ActionDoorOnClient_Params params;
	params.doorStateDst = doorStateDst;
	params.bExtraDoor = bExtraDoor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.PUBGDoor.ActionDoorImmediatly
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            doorStateDst                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bExtraDoor                     (Parm, ZeroConstructor, IsPlainOldData)

void APUBGDoor::ActionDoorImmediatly(int doorStateDst, bool bExtraDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.PUBGDoor.ActionDoorImmediatly");

	APUBGDoor_ActionDoorImmediatly_Params params;
	params.doorStateDst = doorStateDst;
	params.bExtraDoor = bExtraDoor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.RadiationCircle.InitRadiationCircle
// (Final, Native, Public)

void ARadiationCircle::InitRadiationCircle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.RadiationCircle.InitRadiationCircle");

	ARadiationCircle_InitRadiationCircle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.RadiationCircle.HandleOnSafeZoneTips
// (Final, Native, Public)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ARadiationCircle::HandleOnSafeZoneTips(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.RadiationCircle.HandleOnSafeZoneTips");

	ARadiationCircle_HandleOnSafeZoneTips_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ReticlePostprocessData.GetPostprocessData
// (Final, Native, Public, Const)
// Parameters:
// struct FWeaponPPSettings       ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FWeaponPPSettings UReticlePostprocessData::GetPostprocessData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ReticlePostprocessData.GetPostprocessData");

	UReticlePostprocessData_GetPostprocessData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SceneCaptureCharacter.SpawnAndBackpackWeaponOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Template                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ID                             (Parm)
// struct FName                   LogicSocket                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoUse                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bResetBulletNum                (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraWeapon*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraWeapon* ASceneCaptureCharacter::SpawnAndBackpackWeaponOnServer(class UClass* Template, const struct FItemDefineID& ID, const struct FName& LogicSocket, bool bAutoUse, bool bResetBulletNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SceneCaptureCharacter.SpawnAndBackpackWeaponOnServer");

	ASceneCaptureCharacter_SpawnAndBackpackWeaponOnServer_Params params;
	params.Template = Template;
	params.ID = ID;
	params.LogicSocket = LogicSocket;
	params.bAutoUse = bAutoUse;
	params.bResetBulletNum = bResetBulletNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SceneCaptureCharacter.GetWeaponManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWeaponManagerComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWeaponManagerComponent* ASceneCaptureCharacter::GetWeaponManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SceneCaptureCharacter.GetWeaponManager");

	ASceneCaptureCharacter_GetWeaponManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SceneCaptureCharacter.GetSlotId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASceneCaptureCharacter::GetSlotId()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SceneCaptureCharacter.GetSlotId");

	ASceneCaptureCharacter_GetSlotId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SceneCaptureCharacter.GetNickName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASceneCaptureCharacter::GetNickName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SceneCaptureCharacter.GetNickName");

	ASceneCaptureCharacter_GetNickName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SceneCaptureCharacter.GetNetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASceneCaptureCharacter::GetNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SceneCaptureCharacter.GetNetId");

	ASceneCaptureCharacter_GetNetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SecurityLogWeaponCollector.OnCharacterWeaponShootHit
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FShootWeaponDamageEvent DamageDetail                   (ConstParm, Parm, OutParm, ReferenceParm)
// struct FBulletHitInfoUploadData HitData                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FLocalShootHitData      LocalHitData                   (ConstParm, Parm, OutParm, ReferenceParm)

void USecurityLogWeaponCollector::OnCharacterWeaponShootHit(const struct FShootWeaponDamageEvent& DamageDetail, const struct FBulletHitInfoUploadData& HitData, const struct FLocalShootHitData& LocalHitData)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecurityLogWeaponCollector.OnCharacterWeaponShootHit");

	USecurityLogWeaponCollector_OnCharacterWeaponShootHit_Params params;
	params.DamageDetail = DamageDetail;
	params.HitData = HitData;
	params.LocalHitData = LocalHitData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecurityLogWeaponCollector.OnCharacterUsingWeaponChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// ESurviveWeaponPropSlot         TargetChangeSlot               (Parm, ZeroConstructor, IsPlainOldData)

void USecurityLogWeaponCollector::OnCharacterUsingWeaponChanged(ESurviveWeaponPropSlot TargetChangeSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecurityLogWeaponCollector.OnCharacterUsingWeaponChanged");

	USecurityLogWeaponCollector_OnCharacterUsingWeaponChanged_Params params;
	params.TargetChangeSlot = TargetChangeSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecurityLogWeaponCollector.OnCharacterShootTarget
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class AActor*                  InHitActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FSecurityLogHitTargetInfo TargetInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void USecurityLogWeaponCollector::OnCharacterShootTarget(class AActor* InHitActor, const struct FSecurityLogHitTargetInfo& TargetInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecurityLogWeaponCollector.OnCharacterShootTarget");

	USecurityLogWeaponCollector_OnCharacterShootTarget_Params params;
	params.InHitActor = InHitActor;
	params.TargetInfo = TargetInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecurityLogWeaponCollector.OnCharacterAimModeChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// TEnumAsByte<EPlayerCameraMode> Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void USecurityLogWeaponCollector::OnCharacterAimModeChanged(TEnumAsByte<EPlayerCameraMode> Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecurityLogWeaponCollector.OnCharacterAimModeChanged");

	USecurityLogWeaponCollector_OnCharacterAimModeChanged_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecurityLogWeaponCollector.IsInADSAimState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USecurityLogWeaponCollector::IsInADSAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecurityLogWeaponCollector.IsInADSAimState");

	USecurityLogWeaponCollector_IsInADSAimState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SecuryInfoComponent.ReportJumpFlow
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FClientJumpFlow         JumpFlow                       (ConstParm, Parm, ReferenceParm)

void USecuryInfoComponent::ReportJumpFlow(const struct FClientJumpFlow& JumpFlow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecuryInfoComponent.ReportJumpFlow");

	USecuryInfoComponent_ReportJumpFlow_Params params;
	params.JumpFlow = JumpFlow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecuryInfoComponent.ReportHurtFlow
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FHurtFlow               HurtFlow                       (ConstParm, Parm, ReferenceParm)

void USecuryInfoComponent::ReportHurtFlow(const struct FHurtFlow& HurtFlow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecuryInfoComponent.ReportHurtFlow");

	USecuryInfoComponent_ReportHurtFlow_Params params;
	params.HurtFlow = HurtFlow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecuryInfoComponent.ReportGameStartFlow
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FClientGameStartFlow    GameStartFlow                  (ConstParm, Parm, ReferenceParm)

void USecuryInfoComponent::ReportGameStartFlow(const struct FClientGameStartFlow& GameStartFlow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecuryInfoComponent.ReportGameStartFlow");

	USecuryInfoComponent_ReportGameStartFlow_Params params;
	params.GameStartFlow = GameStartFlow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecuryInfoComponent.ReportGameEndFlow
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FClientGameEndFlow      GameEndFlow                    (ConstParm, Parm, ReferenceParm)

void USecuryInfoComponent::ReportGameEndFlow(const struct FClientGameEndFlow& GameEndFlow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecuryInfoComponent.ReportGameEndFlow");

	USecuryInfoComponent_ReportGameEndFlow_Params params;
	params.GameEndFlow = GameEndFlow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecuryInfoComponent.ReportGameBaseInfo
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FGameBaseInfo           BaseInfo                       (ConstParm, Parm, ReferenceParm)

void USecuryInfoComponent::ReportGameBaseInfo(const struct FGameBaseInfo& BaseInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecuryInfoComponent.ReportGameBaseInfo");

	USecuryInfoComponent_ReportGameBaseInfo_Params params;
	params.BaseInfo = BaseInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecuryInfoComponent.ReportCircleFlow
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FClientCircleFlow       CircleFlow                     (ConstParm, Parm, ReferenceParm)

void USecuryInfoComponent::ReportCircleFlow(const struct FClientCircleFlow& CircleFlow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecuryInfoComponent.ReportCircleFlow");

	USecuryInfoComponent_ReportCircleFlow_Params params;
	params.CircleFlow = CircleFlow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecuryInfoComponent.ReportAttackFlow
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FAttackFlow             AttackFlow                     (ConstParm, Parm, ReferenceParm)

void USecuryInfoComponent::ReportAttackFlow(const struct FAttackFlow& AttackFlow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecuryInfoComponent.ReportAttackFlow");

	USecuryInfoComponent_ReportAttackFlow_Params params;
	params.AttackFlow = AttackFlow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SecuryInfoComponent.ReportAimFlow
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FAimFlow                AimFlow                        (ConstParm, Parm, ReferenceParm)

void USecuryInfoComponent::ReportAimFlow(const struct FAimFlow& AimFlow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SecuryInfoComponent.ReportAimFlow");

	USecuryInfoComponent_ReportAimFlow_Params params;
	params.AimFlow = AimFlow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ServerSwitchComponent.RequireConfigRPC
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UServerSwitchComponent::RequireConfigRPC()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ServerSwitchComponent.RequireConfigRPC");

	UServerSwitchComponent_RequireConfigRPC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ServerSwitchComponent.OnUserQualitySettingChanged
// (Final, Native, Private)
// Parameters:
// int                            renderlevel                    (Parm, ZeroConstructor, IsPlainOldData)

void UServerSwitchComponent::OnUserQualitySettingChanged(int renderlevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ServerSwitchComponent.OnUserQualitySettingChanged");

	UServerSwitchComponent_OnUserQualitySettingChanged_Params params;
	params.renderlevel = renderlevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ServerSwitchComponent.CountingDown
// (Final, Native, Private)

void UServerSwitchComponent::CountingDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ServerSwitchComponent.CountingDown");

	UServerSwitchComponent_CountingDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ServerSwitchComponent.AnswerconfigRPC
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FFPSMonitorConfigSwitch configswitch                   (Parm)

void UServerSwitchComponent::AnswerconfigRPC(const struct FFPSMonitorConfigSwitch& configswitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ServerSwitchComponent.AnswerconfigRPC");

	UServerSwitchComponent_AnswerconfigRPC_Params params;
	params.configswitch = configswitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootingPracticeTarget.SetUpOrDownOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bUp                            (Parm, ZeroConstructor, IsPlainOldData)

void AShootingPracticeTarget::SetUpOrDownOnServer(bool bUp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootingPracticeTarget.SetUpOrDownOnServer");

	AShootingPracticeTarget_SetUpOrDownOnServer_Params params;
	params.bUp = bUp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootingPracticeTarget.RPC_NetMulticast_SetUpOrDownOnServer
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// bool                           bUp                            (Parm, ZeroConstructor, IsPlainOldData)

void AShootingPracticeTarget::RPC_NetMulticast_SetUpOrDownOnServer(bool bUp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootingPracticeTarget.RPC_NetMulticast_SetUpOrDownOnServer");

	AShootingPracticeTarget_RPC_NetMulticast_SetUpOrDownOnServer_Params params;
	params.bUp = bUp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootingPracticeTarget.RPC_NetMulticast_NotifyBroken
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)

void AShootingPracticeTarget::RPC_NetMulticast_NotifyBroken()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootingPracticeTarget.RPC_NetMulticast_NotifyBroken");

	AShootingPracticeTarget_RPC_NetMulticast_NotifyBroken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootingPracticeTarget.ResetAndGetUpOnServer
// (Final, Native, Public, BlueprintCallable)

void AShootingPracticeTarget::ResetAndGetUpOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootingPracticeTarget.ResetAndGetUpOnServer");

	AShootingPracticeTarget_ResetAndGetUpOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootingPracticeTarget.OnRep_bIsUp
// (Final, Native, Protected)

void AShootingPracticeTarget::OnRep_bIsUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootingPracticeTarget.OnRep_bIsUp");

	AShootingPracticeTarget_OnRep_bIsUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootingPracticeTarget.OnRep_bHasActivatedMove
// (Final, Native, Protected)

void AShootingPracticeTarget::OnRep_bHasActivatedMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootingPracticeTarget.OnRep_bHasActivatedMove");

	AShootingPracticeTarget_OnRep_bHasActivatedMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootingPracticeTarget.HandleBroken
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           bFromClientBeginPlay           (Parm, ZeroConstructor, IsPlainOldData)

void AShootingPracticeTarget::HandleBroken(bool bFromClientBeginPlay)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootingPracticeTarget.HandleBroken");

	AShootingPracticeTarget_HandleBroken_Params params;
	params.bFromClientBeginPlay = bFromClientBeginPlay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponEffectComponent.HandleWeaponAction
// (Native, Protected)
// Parameters:
// TEnumAsByte<EWeaponAction>     Action                         (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponEffectComponent::HandleWeaponAction(TEnumAsByte<EWeaponAction> Action)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponEffectComponent.HandleWeaponAction");

	UWeaponEffectComponent_HandleWeaponAction_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootWeaponEffectComponent.OnWeaponUnEquiped
// (Final, Native, Protected, BlueprintCallable)

void UShootWeaponEffectComponent::OnWeaponUnEquiped()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootWeaponEffectComponent.OnWeaponUnEquiped");

	UShootWeaponEffectComponent_OnWeaponUnEquiped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootWeaponEffectComponent.OnWeaponEuiped
// (Final, Native, Protected, BlueprintCallable)

void UShootWeaponEffectComponent::OnWeaponEuiped()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootWeaponEffectComponent.OnWeaponEuiped");

	UShootWeaponEffectComponent_OnWeaponEuiped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootWeaponEffectComponent.HandleWeaponAction
// (Native, Protected)
// Parameters:
// TEnumAsByte<EWeaponAction>     Action                         (Parm, ZeroConstructor, IsPlainOldData)

void UShootWeaponEffectComponent::HandleWeaponAction(TEnumAsByte<EWeaponAction> Action)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootWeaponEffectComponent.HandleWeaponAction");

	UShootWeaponEffectComponent_HandleWeaponAction_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.ShootWeaponEffectComponent.ActiveLocalShellDropFX
// (Final, Native, Public, BlueprintCallable)

void UShootWeaponEffectComponent::ActiveLocalShellDropFX()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.ShootWeaponEffectComponent.ActiveLocalShellDropFX");

	UShootWeaponEffectComponent_ActiveLocalShellDropFX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponEntity.HasPlugComponentSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EWeaponComponentType> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponEntity::HasPlugComponentSlot(TEnumAsByte<EWeaponComponentType> Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponEntity.HasPlugComponentSlot");

	UWeaponEntity_HasPlugComponentSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponEntity.GetWeaponType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWeaponType UWeaponEntity::GetWeaponType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponEntity.GetWeaponType");

	UWeaponEntity_GetWeaponType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponEntity.GetWeaponHoldType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EWeaponHoldType>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EWeaponHoldType> UWeaponEntity::GetWeaponHoldType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponEntity.GetWeaponHoldType");

	UWeaponEntity_GetWeaponHoldType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponStateManager.GetCurrentState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWeaponStateBase*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWeaponStateBase* UWeaponStateManager::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponStateManager.GetCurrentState");

	UWeaponStateManager_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponStateManager.GetCurrentFreshWeaponStateType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EFreshWeaponStateType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EFreshWeaponStateType> UWeaponStateManager::GetCurrentFreshWeaponStateType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponStateManager.GetCurrentFreshWeaponStateType");

	UWeaponStateManager_GetCurrentFreshWeaponStateType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SkillUtils.IsCurUseGrenade
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   pChar                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USkillUtils::STATIC_IsCurUseGrenade(class ASTExtraBaseCharacter* pChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SkillUtils.IsCurUseGrenade");

	USkillUtils_IsCurUseGrenade_Params params;
	params.pChar = pChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SkillUtils.GetPlayerController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APawn*                   OwnerPawn                      (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerController* USkillUtils::STATIC_GetPlayerController(class APawn* OwnerPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SkillUtils.GetPlayerController");

	USkillUtils_GetPlayerController_Params params;
	params.OwnerPawn = OwnerPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SkillUtils.GetParticleComps
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  UserActor                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ParticleTagName                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UParticleSystemComponent*> OutParArr                      (Parm, OutParm, ZeroConstructor)

void USkillUtils::STATIC_GetParticleComps(class AActor* UserActor, const struct FName& ParticleTagName, TArray<class UParticleSystemComponent*>* OutParArr)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SkillUtils.GetParticleComps");

	USkillUtils_GetParticleComps_Params params;
	params.UserActor = UserActor;
	params.ParticleTagName = ParticleTagName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutParArr != nullptr)
		*OutParArr = params.OutParArr;
}


// Function ShadowTrackerExtra.SkillUtils.GetMeshCompFromCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   pChar                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   MeshTagName                    (Parm, ZeroConstructor, IsPlainOldData)
// class UMeshComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMeshComponent* USkillUtils::STATIC_GetMeshCompFromCharacter(class ASTExtraBaseCharacter* pChar, const struct FName& MeshTagName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SkillUtils.GetMeshCompFromCharacter");

	USkillUtils_GetMeshCompFromCharacter_Params params;
	params.pChar = pChar;
	params.MeshTagName = MeshTagName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SmoothActorMoveComponent.StopMove
// (Final, Native, Public, BlueprintCallable)

void USmoothActorMoveComponent::StopMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SmoothActorMoveComponent.StopMove");

	USmoothActorMoveComponent_StopMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SmoothActorMoveComponent.StartMove
// (Final, Native, Public, BlueprintCallable)

void USmoothActorMoveComponent::StartMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SmoothActorMoveComponent.StartMove");

	USmoothActorMoveComponent_StartMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SRadarChartUserWidget.OnHide
// (Final, Native, Public, BlueprintCallable)

void USRadarChartUserWidget::OnHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SRadarChartUserWidget.OnHide");

	USRadarChartUserWidget_OnHide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SRadarChartUserWidget.FreshChartDataToContent
// (Final, Native, Public, BlueprintCallable)

void USRadarChartUserWidget::FreshChartDataToContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SRadarChartUserWidget.FreshChartDataToContent");

	USRadarChartUserWidget_FreshChartDataToContent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.WaitingConfirmState_IsConditionSatisfied
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterFollowComp::WaitingConfirmState_IsConditionSatisfied()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.WaitingConfirmState_IsConditionSatisfied");

	USTCharacterFollowComp_WaitingConfirmState_IsConditionSatisfied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.WaitingConfirmState_ActOnUnsatisfied
// (Final, Native, Public)

void USTCharacterFollowComp::WaitingConfirmState_ActOnUnsatisfied()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.WaitingConfirmState_ActOnUnsatisfied");

	USTCharacterFollowComp_WaitingConfirmState_ActOnUnsatisfied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.WaitingConfirmState_ActOnSatisfied
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterFollowComp::WaitingConfirmState_ActOnSatisfied(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.WaitingConfirmState_ActOnSatisfied");

	USTCharacterFollowComp_WaitingConfirmState_ActOnSatisfied_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.TargetStartVault
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 vaultStartPos                  (Parm, IsPlainOldData)
// class UTargetJumpOperation*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTargetJumpOperation* USTCharacterFollowComp::TargetStartVault(const struct FVector& vaultStartPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.TargetStartVault");

	USTCharacterFollowComp_TargetStartVault_Params params;
	params.vaultStartPos = vaultStartPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.SetInterruptAutoFollowByInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InterrupteReason               (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterFollowComp::SetInterruptAutoFollowByInput(int InterrupteReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.SetInterruptAutoFollowByInput");

	USTCharacterFollowComp_SetInterruptAutoFollowByInput_Params params;
	params.InterrupteReason = InterrupteReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.SelectedPickedTargetChangeNotifyHUD
// (Final, Native, Public)
// Parameters:
// class APawn*                   previousTarget                 (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterFollowComp::SelectedPickedTargetChangeNotifyHUD(class APawn* previousTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.SelectedPickedTargetChangeNotifyHUD");

	USTCharacterFollowComp_SelectedPickedTargetChangeNotifyHUD_Params params;
	params.previousTarget = previousTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.PlayerStopFollow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterFollowComp::PlayerStopFollow()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.PlayerStopFollow");

	USTCharacterFollowComp_PlayerStopFollow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.PlayerConfirmToFollow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterFollowComp::PlayerConfirmToFollow()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.PlayerConfirmToFollow");

	USTCharacterFollowComp_PlayerConfirmToFollow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.InitializeOwner
// (Final, Native, Public)
// Parameters:
// class APawn*                   _TempPawn                      (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterFollowComp::InitializeOwner(class APawn* _TempPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.InitializeOwner");

	USTCharacterFollowComp_InitializeOwner_Params params;
	params._TempPawn = _TempPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.FollowingTargetChangeNotifyHUD
// (Final, Native, Public)
// Parameters:
// class APawn*                   previousTarget                 (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterFollowComp::FollowingTargetChangeNotifyHUD(class APawn* previousTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.FollowingTargetChangeNotifyHUD");

	USTCharacterFollowComp_FollowingTargetChangeNotifyHUD_Params params;
	params.previousTarget = previousTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.FollowingState_IsConditionSatisfied
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterFollowComp::FollowingState_IsConditionSatisfied()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.FollowingState_IsConditionSatisfied");

	USTCharacterFollowComp_FollowingState_IsConditionSatisfied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.FollowingState_ActOnUnsatisfied
// (Final, Native, Public)

void USTCharacterFollowComp::FollowingState_ActOnUnsatisfied()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.FollowingState_ActOnUnsatisfied");

	USTCharacterFollowComp_FollowingState_ActOnUnsatisfied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterFollowComp.FollowingState_ActOnSatisfied
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterFollowComp::FollowingState_ActOnSatisfied(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterFollowComp.FollowingState_ActOnSatisfied");

	USTCharacterFollowComp_FollowingState_ActOnSatisfied_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.UpdateMovementState_Server
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FMovementStates         Src                            (Parm, IsPlainOldData)
// struct FStanceUpdateCaller     Caller                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void USTCharacterMovementComponent::UpdateMovementState_Server(const struct FMovementStates& Src, const struct FStanceUpdateCaller& Caller)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.UpdateMovementState_Server");

	USTCharacterMovementComponent_UpdateMovementState_Server_Params params;
	params.Src = Src;
	params.Caller = Caller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.ToggleUserCmdDelta
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterMovementComponent::ToggleUserCmdDelta(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.ToggleUserCmdDelta");

	USTCharacterMovementComponent_ToggleUserCmdDelta_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.TimeSpeedCheck
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterMovementComponent::TimeSpeedCheck(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.TimeSpeedCheck");

	USTCharacterMovementComponent_TimeSpeedCheck_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.SpeedHackDetected
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EStance                        Stance                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EMovementMode>     MoveMode                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EMovementMode>     PrevMovementMode               (Parm, ZeroConstructor, IsPlainOldData)
// float                          OverAvgSpeed                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          DetectionTime                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxContinuousTime              (Parm, ZeroConstructor, IsPlainOldData)
// int                            Ping                           (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterMovementComponent::SpeedHackDetected(EStance Stance, TEnumAsByte<EMovementMode> MoveMode, TEnumAsByte<EMovementMode> PrevMovementMode, float OverAvgSpeed, float DetectionTime, float MaxContinuousTime, int Ping)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.SpeedHackDetected");

	USTCharacterMovementComponent_SpeedHackDetected_Params params;
	params.Stance = Stance;
	params.MoveMode = MoveMode;
	params.PrevMovementMode = PrevMovementMode;
	params.OverAvgSpeed = OverAvgSpeed;
	params.DetectionTime = DetectionTime;
	params.MaxContinuousTime = MaxContinuousTime;
	params.Ping = Ping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.SeverAddRotationVelocity
// (Net, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 RotationVelocity               (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void USTCharacterMovementComponent::SeverAddRotationVelocity(const struct FVector& RotationVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.SeverAddRotationVelocity");

	USTCharacterMovementComponent_SeverAddRotationVelocity_Params params;
	params.RotationVelocity = RotationVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.SetProneFloorZ
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InProneFloorZ                  (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterMovementComponent::SetProneFloorZ(float InProneFloorZ)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.SetProneFloorZ");

	USTCharacterMovementComponent_SetProneFloorZ_Params params;
	params.InProneFloorZ = InProneFloorZ;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.SetProneFloorAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InProneFloorAngle              (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterMovementComponent::SetProneFloorAngle(float InProneFloorAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.SetProneFloorAngle");

	USTCharacterMovementComponent_SetProneFloorAngle_Params params;
	params.InProneFloorAngle = InProneFloorAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.SetJumpFloorZ
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InJumpFloorZ                   (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterMovementComponent::SetJumpFloorZ(float InJumpFloorZ)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.SetJumpFloorZ");

	USTCharacterMovementComponent_SetJumpFloorZ_Params params;
	params.InJumpFloorZ = InJumpFloorZ;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.SetJumpFloorAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InJumpFloorAngle               (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterMovementComponent::SetJumpFloorAngle(float InJumpFloorAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.SetJumpFloorAngle");

	USTCharacterMovementComponent_SetJumpFloorAngle_Params params;
	params.InJumpFloorAngle = InJumpFloorAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.ServerUserMoveCmdOld
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            ClientApplySequence            (Parm, ZeroConstructor, IsPlainOldData)
// TArray<unsigned char>          UserCmdDelta                   (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void USTCharacterMovementComponent::ServerUserMoveCmdOld(int ClientApplySequence, TArray<unsigned char> UserCmdDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.ServerUserMoveCmdOld");

	USTCharacterMovementComponent_ServerUserMoveCmdOld_Params params;
	params.ClientApplySequence = ClientApplySequence;
	params.UserCmdDelta = UserCmdDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.ServerUserMoveCmdDual
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint32_t                       Sequence                       (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       Checksum                       (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ClientMovementBase             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<unsigned char>          UserCmd                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// TArray<unsigned char>          UserCmdDelta                   (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void USTCharacterMovementComponent::ServerUserMoveCmdDual(uint32_t Sequence, uint32_t Checksum, class UPrimitiveComponent* ClientMovementBase, TArray<unsigned char> UserCmd, TArray<unsigned char> UserCmdDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.ServerUserMoveCmdDual");

	USTCharacterMovementComponent_ServerUserMoveCmdDual_Params params;
	params.Sequence = Sequence;
	params.Checksum = Checksum;
	params.ClientMovementBase = ClientMovementBase;
	params.UserCmd = UserCmd;
	params.UserCmdDelta = UserCmdDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.ServerUserMoveCmd
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint32_t                       Sequence                       (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       Checksum                       (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ClientMovementBase             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<unsigned char>          UserCmd                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void USTCharacterMovementComponent::ServerUserMoveCmd(uint32_t Sequence, uint32_t Checksum, class UPrimitiveComponent* ClientMovementBase, TArray<unsigned char> UserCmd)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.ServerUserMoveCmd");

	USTCharacterMovementComponent_ServerUserMoveCmd_Params params;
	params.Sequence = Sequence;
	params.Checksum = Checksum;
	params.ClientMovementBase = ClientMovementBase;
	params.UserCmd = UserCmd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.Ping2Server
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          ServerTime                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ClientTime                     (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterMovementComponent::Ping2Server(float ServerTime, float ClientTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.Ping2Server");

	USTCharacterMovementComponent_Ping2Server_Params params;
	params.ServerTime = ServerTime;
	params.ClientTime = ClientTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.Ping2Client
// (Net, Native, Event, Public, NetClient)
// Parameters:
// float                          ServerTime                     (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterMovementComponent::Ping2Client(float ServerTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.Ping2Client");

	USTCharacterMovementComponent_Ping2Client_Params params;
	params.ServerTime = ServerTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.PhysicsFlyDistance
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 flyVelocity                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void USTCharacterMovementComponent::PhysicsFlyDistance(float DeltaTime, const struct FVector& flyVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.PhysicsFlyDistance");

	USTCharacterMovementComponent_PhysicsFlyDistance_Params params;
	params.DeltaTime = DeltaTime;
	params.flyVelocity = flyVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.OnRecoverOnServer
// (Native, Public)

void USTCharacterMovementComponent::OnRecoverOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.OnRecoverOnServer");

	USTCharacterMovementComponent_OnRecoverOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.OnPreReconnectOnServer
// (Final, Native, Public)

void USTCharacterMovementComponent::OnPreReconnectOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.OnPreReconnectOnServer");

	USTCharacterMovementComponent_OnPreReconnectOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.OnClientCloseUserCmdDelta
// (Net, NetReliable, Native, Event, Public, NetClient)

void USTCharacterMovementComponent::OnClientCloseUserCmdDelta()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.OnClientCloseUserCmdDelta");

	USTCharacterMovementComponent_OnClientCloseUserCmdDelta_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.K2_GetProneFloorZ
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTCharacterMovementComponent::K2_GetProneFloorZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.K2_GetProneFloorZ");

	USTCharacterMovementComponent_K2_GetProneFloorZ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.K2_GetProneFloorAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTCharacterMovementComponent::K2_GetProneFloorAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.K2_GetProneFloorAngle");

	USTCharacterMovementComponent_K2_GetProneFloorAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.K2_GetJumpFloorZ
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTCharacterMovementComponent::K2_GetJumpFloorZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.K2_GetJumpFloorZ");

	USTCharacterMovementComponent_K2_GetJumpFloorZ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.K2_GetJumpFloorAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTCharacterMovementComponent::K2_GetJumpFloorAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.K2_GetJumpFloorAngle");

	USTCharacterMovementComponent_K2_GetJumpFloorAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.IsWalkable
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterMovementComponent::IsWalkable(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.IsWalkable");

	USTCharacterMovementComponent_IsWalkable_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.IsVaulting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterMovementComponent::IsVaulting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.IsVaulting");

	USTCharacterMovementComponent_IsVaulting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.GetLastServerMoveTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTCharacterMovementComponent::GetLastServerMoveTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.GetLastServerMoveTime");

	USTCharacterMovementComponent_GetLastServerMoveTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.DragOnGround
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterMovementComponent::DragOnGround(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.DragOnGround");

	USTCharacterMovementComponent_DragOnGround_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterMovementComponent.ClientUserMoveCmdAck
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            Sequence                       (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterMovementComponent::ClientUserMoveCmdAck(int Sequence)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterMovementComponent.ClientUserMoveCmdAck");

	USTCharacterMovementComponent_ClientUserMoveCmdAck_Params params;
	params.Sequence = Sequence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.WaitingConfirmState_IsConditionSatisfied
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterRescueOtherComp::WaitingConfirmState_IsConditionSatisfied()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.WaitingConfirmState_IsConditionSatisfied");

	USTCharacterRescueOtherComp_WaitingConfirmState_IsConditionSatisfied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.WaitingConfirmState_ActOnUnsatisfied
// (Final, Native, Public)

void USTCharacterRescueOtherComp::WaitingConfirmState_ActOnUnsatisfied()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.WaitingConfirmState_ActOnUnsatisfied");

	USTCharacterRescueOtherComp_WaitingConfirmState_ActOnUnsatisfied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.WaitingConfirmState_ActOnSatisfied
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterRescueOtherComp::WaitingConfirmState_ActOnSatisfied(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.WaitingConfirmState_ActOnSatisfied");

	USTCharacterRescueOtherComp_WaitingConfirmState_ActOnSatisfied_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.TickAsHelper
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterRescueOtherComp::TickAsHelper(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.TickAsHelper");

	USTCharacterRescueOtherComp_TickAsHelper_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.ServerPlayerConfirm
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   _RescueWho                     (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterRescueOtherComp::ServerPlayerConfirm(class ASTExtraBaseCharacter* _RescueWho)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.ServerPlayerConfirm");

	USTCharacterRescueOtherComp_ServerPlayerConfirm_Params params;
	params._RescueWho = _RescueWho;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.SelectedPickedTargetChangeNotifyHUD
// (Final, Native, Public)
// Parameters:
// class APawn*                   previousTarget                 (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterRescueOtherComp::SelectedPickedTargetChangeNotifyHUD(class APawn* previousTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.SelectedPickedTargetChangeNotifyHUD");

	USTCharacterRescueOtherComp_SelectedPickedTargetChangeNotifyHUD_Params params;
	params.previousTarget = previousTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.RescueingState_IsConditionSatisfied
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterRescueOtherComp::RescueingState_IsConditionSatisfied()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.RescueingState_IsConditionSatisfied");

	USTCharacterRescueOtherComp_RescueingState_IsConditionSatisfied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.RescueingState_ActOnUnsatisfied
// (Final, Native, Public)

void USTCharacterRescueOtherComp::RescueingState_ActOnUnsatisfied()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.RescueingState_ActOnUnsatisfied");

	USTCharacterRescueOtherComp_RescueingState_ActOnUnsatisfied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.RescueingState_ActOnSatisfied
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterRescueOtherComp::RescueingState_ActOnSatisfied(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.RescueingState_ActOnSatisfied");

	USTCharacterRescueOtherComp_RescueingState_ActOnSatisfied_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.RescueingProcessFinished
// (Final, Native, Private)

void USTCharacterRescueOtherComp::RescueingProcessFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.RescueingProcessFinished");

	USTCharacterRescueOtherComp_RescueingProcessFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.PlayerConfirmToRescueClientSide
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterRescueOtherComp::PlayerConfirmToRescueClientSide()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.PlayerConfirmToRescueClientSide");

	USTCharacterRescueOtherComp_PlayerConfirmToRescueClientSide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.PickTargetsAsHelper
// (Final, Native, Private, HasOutParms)
// Parameters:
// TArray<class ASTExtraBaseCharacter*> pickedTargets                  (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterRescueOtherComp::PickTargetsAsHelper(TArray<class ASTExtraBaseCharacter*>* pickedTargets)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.PickTargetsAsHelper");

	USTCharacterRescueOtherComp_PickTargetsAsHelper_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (pickedTargets != nullptr)
		*pickedTargets = params.pickedTargets;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.OnRep_IsRescueingOtherStatusChange
// (Final, Native, Public)

void USTCharacterRescueOtherComp::OnRep_IsRescueingOtherStatusChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.OnRep_IsRescueingOtherStatusChange");

	USTCharacterRescueOtherComp_OnRep_IsRescueingOtherStatusChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.IsInRescueingStatus
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterRescueOtherComp::IsInRescueingStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.IsInRescueingStatus");

	USTCharacterRescueOtherComp_IsInRescueingStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.InitializeOwner
// (Final, Native, Public)
// Parameters:
// class APawn*                   _TempPawn                      (Parm, ZeroConstructor, IsPlainOldData)
// class USTCharacterNearDeathComp* _Outer                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void USTCharacterRescueOtherComp::InitializeOwner(class APawn* _TempPawn, class USTCharacterNearDeathComp* _Outer)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.InitializeOwner");

	USTCharacterRescueOtherComp_InitializeOwner_Params params;
	params._TempPawn = _TempPawn;
	params._Outer = _Outer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.GetRestoringDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTCharacterRescueOtherComp::GetRestoringDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.GetRestoringDuration");

	USTCharacterRescueOtherComp_GetRestoringDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterRescueOtherComp.DrawDebugFan
// (Final, Native, Private)

void USTCharacterRescueOtherComp::DrawDebugFan()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterRescueOtherComp.DrawDebugFan");

	USTCharacterRescueOtherComp_DrawDebugFan_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STEActorCacheComponent.PushActorToPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EActorCacheID>     ID                             (Parm, ZeroConstructor, IsPlainOldData)
// class ASTECachableActor*       Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTEActorCacheComponent::PushActorToPool(TEnumAsByte<EActorCacheID> ID, class ASTECachableActor* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STEActorCacheComponent.PushActorToPool");

	USTEActorCacheComponent_PushActorToPool_Params params;
	params.ID = ID;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STEActorCacheComponent.GetActorFromPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EActorCacheID>     ID                             (Parm, ZeroConstructor, IsPlainOldData)
// class ASTECachableActor*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTECachableActor* USTEActorCacheComponent::GetActorFromPool(TEnumAsByte<EActorCacheID> ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STEActorCacheComponent.GetActorFromPool");

	USTEActorCacheComponent_GetActorFromPool_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STECachableActor.RegisterCachePool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USTEActorCacheComponent* Pool                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ASTECachableActor::RegisterCachePool(class USTEActorCacheComponent* Pool)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STECachableActor.RegisterCachePool");

	ASTECachableActor_RegisterCachePool_Params params;
	params.Pool = Pool;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STECachableActor.PushToPool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EActorCacheID>     ID                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTECachableActor::PushToPool(TEnumAsByte<EActorCacheID> ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STECachableActor.PushToPool");

	ASTECachableActor_PushToPool_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeaponComponent.ShootDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USTExtraShootWeaponComponent::ShootDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeaponComponent.ShootDelegate__DelegateSignature");

	USTExtraShootWeaponComponent_ShootDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeaponComponent.OnWeaponClipMaxBulletChanged
// (Final, Native, Public)

void USTExtraShootWeaponComponent::OnWeaponClipMaxBulletChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeaponComponent.OnWeaponClipMaxBulletChanged");

	USTExtraShootWeaponComponent_OnWeaponClipMaxBulletChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeaponComponent.OnWeaponBulletChanged
// (Final, Native, Protected)

void USTExtraShootWeaponComponent::OnWeaponBulletChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeaponComponent.OnWeaponBulletChanged");

	USTExtraShootWeaponComponent_OnWeaponBulletChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeaponComponent.OnContinuousShootStateChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                           bIsContinuousShooting          (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraShootWeaponComponent::OnContinuousShootStateChangedDelegate__DelegateSignature(bool bIsContinuousShooting)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeaponComponent.OnContinuousShootStateChangedDelegate__DelegateSignature");

	USTExtraShootWeaponComponent_OnContinuousShootStateChangedDelegate__DelegateSignature_Params params;
	params.bIsContinuousShooting = bIsContinuousShooting;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeaponComponent.OnContinuousShootDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int                            BulletsNum                     (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraShootWeaponComponent::OnContinuousShootDelegate__DelegateSignature(int BulletsNum)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeaponComponent.OnContinuousShootDelegate__DelegateSignature");

	USTExtraShootWeaponComponent_OnContinuousShootDelegate__DelegateSignature_Params params;
	params.BulletsNum = BulletsNum;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.SwitchCameraFromBP
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FCameraSettings         CameraSetting                  (Parm, OutParm)

void ASTExtraAirborne::SwitchCameraFromBP(struct FCameraSettings* CameraSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.SwitchCameraFromBP");

	ASTExtraAirborne_SwitchCameraFromBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (CameraSetting != nullptr)
		*CameraSetting = params.CameraSetting;
}


// Function ShadowTrackerExtra.STExtraAirborne.StateChangeServerFromBP
// (Final, Native, Public)

void ASTExtraAirborne::StateChangeServerFromBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.StateChangeServerFromBP");

	ASTExtraAirborne_StateChangeServerFromBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.StateChangeClientFromBP
// (Final, Native, Public)

void ASTExtraAirborne::StateChangeClientFromBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.StateChangeClientFromBP");

	ASTExtraAirborne_StateChangeClientFromBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.ServerSetStateFromBP
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TEnumAsByte<EAirborne2>        AirborneStateBP                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraAirborne::ServerSetStateFromBP(TEnumAsByte<EAirborne2> AirborneStateBP)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.ServerSetStateFromBP");

	ASTExtraAirborne_ServerSetStateFromBP_Params params;
	params.AirborneStateBP = AirborneStateBP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.ServerAndAirbornAfterLand
// (Event, Public, BlueprintEvent)

void ASTExtraAirborne::ServerAndAirbornAfterLand()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.ServerAndAirbornAfterLand");

	ASTExtraAirborne_ServerAndAirbornAfterLand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.RotateMulticastFromBP
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FRotator                Rotator                        (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ASTExtraAirborne::RotateMulticastFromBP(const struct FRotator& Rotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.RotateMulticastFromBP");

	ASTExtraAirborne_RotateMulticastFromBP_Params params;
	params.Rotator = Rotator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.OnStateChangeServerFromBP
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraAirborne::OnStateChangeServerFromBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.OnStateChangeServerFromBP");

	ASTExtraAirborne_OnStateChangeServerFromBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.OnStateChangeMultiCastFromBP
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ASTExtraAirborne::OnStateChangeMultiCastFromBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.OnStateChangeMultiCastFromBP");

	ASTExtraAirborne_OnStateChangeMultiCastFromBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.OnRep_AirbornStateChange
// (Final, Native, Public, BlueprintCallable)

void ASTExtraAirborne::OnRep_AirbornStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.OnRep_AirbornStateChange");

	ASTExtraAirborne_OnRep_AirbornStateChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.OnCameraSettingLerp
// (Final, Native, Public)
// Parameters:
// float                          LerpAlpha                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraAirborne::OnCameraSettingLerp(float LerpAlpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.OnCameraSettingLerp");

	ASTExtraAirborne_OnCameraSettingLerp_Params params;
	params.LerpAlpha = LerpAlpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.NormalSpeedFromBP
// (Final, Native, Private, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraAirborne::NormalSpeedFromBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.NormalSpeedFromBP");

	ASTExtraAirborne_NormalSpeedFromBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraAirborne.MoveRight
// (Native, Public)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraAirborne::MoveRight(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.MoveRight");

	ASTExtraAirborne_MoveRight_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.MoveForward
// (Native, Public)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraAirborne::MoveForward(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.MoveForward");

	ASTExtraAirborne_MoveForward_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.IsAutonomousFromBP
// (Final, Native, Private)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraAirborne::IsAutonomousFromBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.IsAutonomousFromBP");

	ASTExtraAirborne_IsAutonomousFromBP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraAirborne.GetVerticalSpeed2
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraAirborne::GetVerticalSpeed2()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.GetVerticalSpeed2");

	ASTExtraAirborne_GetVerticalSpeed2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraAirborne.GetAirborneVelocity2
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraAirborne::GetAirborneVelocity2()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.GetAirborneVelocity2");

	ASTExtraAirborne_GetAirborneVelocity2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraAirborne.DoMoveRight
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraAirborne::DoMoveRight(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.DoMoveRight");

	ASTExtraAirborne_DoMoveRight_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.DoMoveForward
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraAirborne::DoMoveForward(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.DoMoveForward");

	ASTExtraAirborne_DoMoveForward_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAirborne.ChangeCurForwardSpeedVFromBP
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Speed                          (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ASTExtraAirborne::ChangeCurForwardSpeedVFromBP(const struct FVector& Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAirborne.ChangeCurForwardSpeedVFromBP");

	ASTExtraAirborne_ChangeCurForwardSpeedVFromBP_Params params;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraWeapon.WeaponNotifyChangeStateDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// TEnumAsByte<EFreshWeaponStateType> State                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraWeapon::WeaponNotifyChangeStateDelegate__DelegateSignature(TEnumAsByte<EFreshWeaponStateType> State)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraWeapon.WeaponNotifyChangeStateDelegate__DelegateSignature");

	ASTExtraWeapon_WeaponNotifyChangeStateDelegate__DelegateSignature_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraWeapon.WeaponEffectActionDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// TEnumAsByte<EWeaponAction>     Action                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraWeapon::WeaponEffectActionDelegate__DelegateSignature(TEnumAsByte<EWeaponAction> Action)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraWeapon.WeaponEffectActionDelegate__DelegateSignature");

	ASTExtraWeapon_WeaponEffectActionDelegate__DelegateSignature_Params params;
	params.Action = Action;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.SetWeaponAvatarMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstance*       InAvatarMaterial               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraWeapon::SetWeaponAvatarMaterial(class UMaterialInstance* InAvatarMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.SetWeaponAvatarMaterial");

	ASTExtraWeapon_SetWeaponAvatarMaterial_Params params;
	params.InAvatarMaterial = InAvatarMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.ServerUpdateAvatar
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ASTExtraWeapon::ServerUpdateAvatar()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.ServerUpdateAvatar");

	ASTExtraWeapon_ServerUpdateAvatar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.ServerLogFireWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FAttackId               AttackId                       (ConstParm, Parm, ReferenceParm)

void ASTExtraWeapon::ServerLogFireWeapon(const struct FAttackId& AttackId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.ServerLogFireWeapon");

	ASTExtraWeapon_ServerLogFireWeapon_Params params;
	params.AttackId = AttackId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.ServerCleanAvatar
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ASTExtraWeapon::ServerCleanAvatar()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.ServerCleanAvatar");

	ASTExtraWeapon_ServerCleanAvatar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.RPC_ClientSyncPostFireHandledTime
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          InPostFireHandledTime          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraWeapon::RPC_ClientSyncPostFireHandledTime(float InPostFireHandledTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.RPC_ClientSyncPostFireHandledTime");

	ASTExtraWeapon_RPC_ClientSyncPostFireHandledTime_Params params;
	params.InPostFireHandledTime = InPostFireHandledTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.RPC_ClientChangeFreshWeaponState
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// TEnumAsByte<EFreshWeaponStateType> State                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraWeapon::RPC_ClientChangeFreshWeaponState(TEnumAsByte<EFreshWeaponStateType> State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.RPC_ClientChangeFreshWeaponState");

	ASTExtraWeapon_RPC_ClientChangeFreshWeaponState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.PlayLocalShellDropFX
// (Event, Public, BlueprintEvent)

void ASTExtraWeapon::PlayLocalShellDropFX()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.PlayLocalShellDropFX");

	ASTExtraWeapon_PlayLocalShellDropFX_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraWeapon.OnWeaponMeshChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraWeapon::OnWeaponMeshChangedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraWeapon.OnWeaponMeshChangedDelegate__DelegateSignature");

	ASTExtraWeapon_OnWeaponMeshChangedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.OnUserQualitySettingChanged
// (Final, Native, Private)
// Parameters:
// int                            renderlevel                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraWeapon::OnUserQualitySettingChanged(int renderlevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.OnUserQualitySettingChanged");

	ASTExtraWeapon_OnUserQualitySettingChanged_Params params;
	params.renderlevel = renderlevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraWeapon.OnShootWeaponChangeStateDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// TEnumAsByte<EFreshWeaponStateType> State                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraWeapon::OnShootWeaponChangeStateDelegate__DelegateSignature(TEnumAsByte<EFreshWeaponStateType> State)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraWeapon.OnShootWeaponChangeStateDelegate__DelegateSignature");

	ASTExtraWeapon_OnShootWeaponChangeStateDelegate__DelegateSignature_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.OnRep_WeaponReconnectReplicateData
// (Final, Native, Protected)

void ASTExtraWeapon::OnRep_WeaponReconnectReplicateData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.OnRep_WeaponReconnectReplicateData");

	ASTExtraWeapon_OnRep_WeaponReconnectReplicateData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.OnRep_WeaponAvatarID
// (Final, Native, Public)

void ASTExtraWeapon::OnRep_WeaponAvatarID()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.OnRep_WeaponAvatarID");

	ASTExtraWeapon_OnRep_WeaponAvatarID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.OnRep_SimulatedOwnerPawn
// (Final, Native, Protected)

void ASTExtraWeapon::OnRep_SimulatedOwnerPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.OnRep_SimulatedOwnerPawn");

	ASTExtraWeapon_OnRep_SimulatedOwnerPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.OnRep_OwnerClientCreateWeaponData
// (Final, Native, Protected)

void ASTExtraWeapon::OnRep_OwnerClientCreateWeaponData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.OnRep_OwnerClientCreateWeaponData");

	ASTExtraWeapon_OnRep_OwnerClientCreateWeaponData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.OnRep_AttachmentReplication
// (Native, Public)

void ASTExtraWeapon::OnRep_AttachmentReplication()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.OnRep_AttachmentReplication");

	ASTExtraWeapon_OnRep_AttachmentReplication_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.OnReleaseTrigger
// (Native, Public, BlueprintCallable)

void ASTExtraWeapon::OnReleaseTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.OnReleaseTrigger");

	ASTExtraWeapon_OnReleaseTrigger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.OnPushTrigger
// (Native, Public, BlueprintCallable)

void ASTExtraWeapon::OnPushTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.OnPushTrigger");

	ASTExtraWeapon_OnPushTrigger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWeapon.JudgeHasEquipedComponentSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EWeaponComponentType> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraWeapon::JudgeHasEquipedComponentSlot(TEnumAsByte<EWeaponComponentType> Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.JudgeHasEquipedComponentSlot");

	ASTExtraWeapon_JudgeHasEquipedComponentSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.HasComponentSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EWeaponComponentType> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraWeapon::HasComponentSlot(TEnumAsByte<EWeaponComponentType> Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.HasComponentSlot");

	ASTExtraWeapon_HasComponentSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetWeaponStaticMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStaticMeshComponent* ASTExtraWeapon::GetWeaponStaticMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetWeaponStaticMeshComponent");

	ASTExtraWeapon_GetWeaponStaticMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetWeaponSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* ASTExtraWeapon::GetWeaponSkeletalMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetWeaponSkeletalMeshComponent");

	ASTExtraWeapon_GetWeaponSkeletalMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetWeaponName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASTExtraWeapon::GetWeaponName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetWeaponName");

	ASTExtraWeapon_GetWeaponName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetWeaponMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMeshComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMeshComponent* ASTExtraWeapon::GetWeaponMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetWeaponMeshComponent");

	ASTExtraWeapon_GetWeaponMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetWeaponEntityComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWeaponEntity*           ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWeaponEntity* ASTExtraWeapon::GetWeaponEntityComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetWeaponEntityComponent");

	ASTExtraWeapon_GetWeaponEntityComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetWeaponAttachSocket
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ASTExtraWeapon::GetWeaponAttachSocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetWeaponAttachSocket");

	ASTExtraWeapon_GetWeaponAttachSocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetSpecificHandler
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWeaponSpecificHandler*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWeaponSpecificHandler* ASTExtraWeapon::GetSpecificHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetSpecificHandler");

	ASTExtraWeapon_GetSpecificHandler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetOwnerPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerController* ASTExtraWeapon::GetOwnerPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetOwnerPlayerController");

	ASTExtraWeapon_GetOwnerPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetOwnerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* ASTExtraWeapon::GetOwnerPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetOwnerPawn");

	ASTExtraWeapon_GetOwnerPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetOwnerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASTExtraWeapon::GetOwnerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetOwnerName");

	ASTExtraWeapon_GetOwnerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetOwnerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* ASTExtraWeapon::GetOwnerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetOwnerController");

	ASTExtraWeapon_GetOwnerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetOwnerActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* ASTExtraWeapon::GetOwnerActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetOwnerActor");

	ASTExtraWeapon_GetOwnerActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetItemDefineID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FItemDefineID ASTExtraWeapon::GetItemDefineID()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetItemDefineID");

	ASTExtraWeapon_GetItemDefineID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetComponentSlotTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EWeaponComponentType> Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponComponentItemData ReturnValue                    (Parm, OutParm, ReturnParm)

struct FWeaponComponentItemData ASTExtraWeapon::GetComponentSlotTarget(TEnumAsByte<EWeaponComponentType> Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetComponentSlotTarget");

	ASTExtraWeapon_GetComponentSlotTarget_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.GetBackpackItemHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UItemHandleBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemHandleBase* ASTExtraWeapon::GetBackpackItemHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.GetBackpackItemHandle");

	ASTExtraWeapon_GetBackpackItemHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWeapon.ChangeSequenceState
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EFreshWeaponStateType> StateType                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraWeapon::ChangeSequenceState(TEnumAsByte<EFreshWeaponStateType> StateType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWeapon.ChangeSequenceState");

	ASTExtraWeapon_ChangeSequenceState_Params params;
	params.StateType = StateType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.ZeroingLevelUp
// (Final, Native, Public, BlueprintCallable)

void ASTExtraShootWeapon::ZeroingLevelUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.ZeroingLevelUp");

	ASTExtraShootWeapon_ZeroingLevelUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.ZeroingLevelDown
// (Final, Native, Public, BlueprintCallable)

void ASTExtraShootWeapon::ZeroingLevelDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.ZeroingLevelDown");

	ASTExtraShootWeapon_ZeroingLevelDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.StopFireFilter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraShootWeapon::StopFireFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.StopFireFilter");

	ASTExtraShootWeapon_StopFireFilter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.StopFire
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EFreshWeaponStateType> ToState                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::StopFire(TEnumAsByte<EFreshWeaponStateType> ToState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.StopFire");

	ASTExtraShootWeapon_StopFire_Params params;
	params.ToState = ToState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.StartReload
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraShootWeapon::StartReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.StartReload");

	ASTExtraShootWeapon_StartReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.StartFireFilter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraShootWeapon::StartFireFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.StartFireFilter");

	ASTExtraShootWeapon_StartFireFilter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.StartFire
// (Native, Public, BlueprintCallable)

void ASTExtraShootWeapon::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.StartFire");

	ASTExtraShootWeapon_StartFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.StartDoPreBarrel
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          HandledTime                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::StartDoPreBarrel(float HandledTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.StartDoPreBarrel");

	ASTExtraShootWeapon_StartDoPreBarrel_Params params;
	params.HandledTime = HandledTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.StartDoBarrel
// (Native, Public, BlueprintCallable)

void ASTExtraShootWeapon::StartDoBarrel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.StartDoBarrel");

	ASTExtraShootWeapon_StartDoBarrel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.ShowDefaultScope
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bShow                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::ShowDefaultScope(bool bShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.ShowDefaultScope");

	ASTExtraShootWeapon_ShowDefaultScope_Params params;
	params.bShow = bShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.ShowDefaultAttachmentComponentByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWeaponAttachmentSocketType    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::ShowDefaultAttachmentComponentByType(EWeaponAttachmentSocketType Type, bool bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.ShowDefaultAttachmentComponentByType");

	ASTExtraShootWeapon_ShowDefaultAttachmentComponentByType_Params params;
	params.Type = Type;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.SetWeaponAttrModifierEnable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 AttrModifierID                 (Parm, ZeroConstructor)
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::SetWeaponAttrModifierEnable(const struct FString& AttrModifierID, bool Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.SetWeaponAttrModifierEnable");

	ASTExtraShootWeapon_SetWeaponAttrModifierEnable_Params params;
	params.AttrModifierID = AttrModifierID;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.SetFireMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGunFireMode                   NewFireMode                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraShootWeapon::SetFireMode(EGunFireMode NewFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.SetFireMode");

	ASTExtraShootWeapon_SetFireMode_Params params;
	params.NewFireMode = NewFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.SetCurrentBulletNumInClipOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::SetCurrentBulletNumInClipOnServer(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.SetCurrentBulletNumInClipOnServer");

	ASTExtraShootWeapon_SetCurrentBulletNumInClipOnServer_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.SetCurrentBulletNumInClipOnClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::SetCurrentBulletNumInClipOnClient(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.SetCurrentBulletNumInClipOnClient");

	ASTExtraShootWeapon_SetCurrentBulletNumInClipOnClient_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.SetCurReloadMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EWeaponReloadMethod> method                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::SetCurReloadMethod(TEnumAsByte<EWeaponReloadMethod> method)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.SetCurReloadMethod");

	ASTExtraShootWeapon_SetCurReloadMethod_Params params;
	params.method = method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.SetAvailableWeaponAttachmentSocketTypeList
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<EWeaponAttachmentSocketType> List                           (Parm, OutParm, ZeroConstructor)

void ASTExtraShootWeapon::SetAvailableWeaponAttachmentSocketTypeList(TArray<EWeaponAttachmentSocketType>* List)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.SetAvailableWeaponAttachmentSocketTypeList");

	ASTExtraShootWeapon_SetAvailableWeaponAttachmentSocketTypeList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (List != nullptr)
		*List = params.List;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.RPC_ClientSetCurReloadMethod
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// TEnumAsByte<EWeaponReloadMethod> method                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::RPC_ClientSetCurReloadMethod(TEnumAsByte<EWeaponReloadMethod> method)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.RPC_ClientSetCurReloadMethod");

	ASTExtraShootWeapon_RPC_ClientSetCurReloadMethod_Params params;
	params.method = method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.RPC_Client_SetBulletNumInClip
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::RPC_Client_SetBulletNumInClip(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.RPC_Client_SetBulletNumInClip");

	ASTExtraShootWeapon_RPC_Client_SetBulletNumInClip_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.ResetZeroingLevel
// (Final, Native, Public, BlueprintCallable)

void ASTExtraShootWeapon::ResetZeroingLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.ResetZeroingLevel");

	ASTExtraShootWeapon_ResetZeroingLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.ResetInitialBulletNumInClip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bSetZero                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::ResetInitialBulletNumInClip(bool bSetZero)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.ResetInitialBulletNumInClip");

	ASTExtraShootWeapon_ResetInitialBulletNumInClip_Params params;
	params.bSetZero = bSetZero;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.ResetGunAimingParameters
// (Final, Native, Public, BlueprintCallable)

void ASTExtraShootWeapon::ResetGunAimingParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.ResetGunAimingParameters");

	ASTExtraShootWeapon_ResetGunAimingParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponUnEquipDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnWeaponUnEquipDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponUnEquipDelegate__DelegateSignature");

	ASTExtraShootWeapon_OnWeaponUnEquipDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponShootHitDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FShootWeaponDamageEvent DamageDetail                   (ConstParm, Parm, OutParm, ReferenceParm)
// struct FBulletHitInfoUploadData HitData                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FLocalShootHitData      LocalHitData                   (ConstParm, Parm, OutParm, ReferenceParm)

void ASTExtraShootWeapon::OnWeaponShootHitDelegate__DelegateSignature(const struct FShootWeaponDamageEvent& DamageDetail, const struct FBulletHitInfoUploadData& HitData, const struct FLocalShootHitData& LocalHitData)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponShootHitDelegate__DelegateSignature");

	ASTExtraShootWeapon_OnWeaponShootHitDelegate__DelegateSignature_Params params;
	params.DamageDetail = DamageDetail;
	params.HitData = HitData;
	params.LocalHitData = LocalHitData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponShootDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnWeaponShootDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponShootDelegate__DelegateSignature");

	ASTExtraShootWeapon_OnWeaponShootDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponSecurityLogShootActorDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// class AActor*                  InHitActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FSecurityLogHitTargetInfo TargetInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void ASTExtraShootWeapon::OnWeaponSecurityLogShootActorDelegate__DelegateSignature(class AActor* InHitActor, const struct FSecurityLogHitTargetInfo& TargetInfo)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponSecurityLogShootActorDelegate__DelegateSignature");

	ASTExtraShootWeapon_OnWeaponSecurityLogShootActorDelegate__DelegateSignature_Params params;
	params.InHitActor = InHitActor;
	params.TargetInfo = TargetInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponReloadStartDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnWeaponReloadStartDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponReloadStartDelegate__DelegateSignature");

	ASTExtraShootWeapon_OnWeaponReloadStartDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponReloadEndDelegage__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnWeaponReloadEndDelegage__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponReloadEndDelegage__DelegateSignature");

	ASTExtraShootWeapon_OnWeaponReloadEndDelegage__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponEquipDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnWeaponEquipDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnWeaponEquipDelegate__DelegateSignature");

	ASTExtraShootWeapon_OnWeaponEquipDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnStopFireDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnStopFireDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnStopFireDelegate__DelegateSignature");

	ASTExtraShootWeapon_OnStopFireDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnStartFireDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnStartFireDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnStartFireDelegate__DelegateSignature");

	ASTExtraShootWeapon_OnStartFireDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnShootWeaponAutoReloadDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnShootWeaponAutoReloadDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnShootWeaponAutoReloadDelegate__DelegateSignature");

	ASTExtraShootWeapon_OnShootWeaponAutoReloadDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.OnRep_HitDataArray
// (Final, Native, Public)

void ASTExtraShootWeapon::OnRep_HitDataArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.OnRep_HitDataArray");

	ASTExtraShootWeapon_OnRep_HitDataArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.OnRep_CurMaxBulletNumChange
// (Final, Native, Public)

void ASTExtraShootWeapon::OnRep_CurMaxBulletNumChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.OnRep_CurMaxBulletNumChange");

	ASTExtraShootWeapon_OnRep_CurMaxBulletNumChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.OnRep_CurBulletNumInClipOnSimulatedClients
// (Final, Native, Protected)

void ASTExtraShootWeapon::OnRep_CurBulletNumInClipOnSimulatedClients()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.OnRep_CurBulletNumInClipOnSimulatedClients");

	ASTExtraShootWeapon_OnRep_CurBulletNumInClipOnSimulatedClients_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.OnRep_AvatarMeshChanged
// (Final, Native, Public)

void ASTExtraShootWeapon::OnRep_AvatarMeshChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.OnRep_AvatarMeshChanged");

	ASTExtraShootWeapon_OnRep_AvatarMeshChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnMaxBulletChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnMaxBulletChange__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnMaxBulletChange__DelegateSignature");

	ASTExtraShootWeapon_OnMaxBulletChange__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnCurBulletChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnCurBulletChange__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnCurBulletChange__DelegateSignature");

	ASTExtraShootWeapon_OnCurBulletChange__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnBulletNumChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeapon::OnBulletNumChangeDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeapon.OnBulletNumChangeDelegate__DelegateSignature");

	ASTExtraShootWeapon_OnBulletNumChangeDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.NotifyServerNoneShootAction
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraShootWeapon::NotifyServerNoneShootAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.NotifyServerNoneShootAction");

	ASTExtraShootWeapon_NotifyServerNoneShootAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.NotifyClientNoneShootAction
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ASTExtraShootWeapon::NotifyClientNoneShootAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.NotifyClientNoneShootAction");

	ASTExtraShootWeapon_NotifyClientNoneShootAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.LocalSetBulletNumInClip
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::LocalSetBulletNumInClip(int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.LocalSetBulletNumInClip");

	ASTExtraShootWeapon_LocalSetBulletNumInClip_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.IsInPreFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraShootWeapon::IsInPreFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.IsInPreFire");

	ASTExtraShootWeapon_IsInPreFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.IsAttachmentSlotAlreadyAttachedToWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWeaponAttachmentSlotID        slotID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraShootWeapon::IsAttachmentSlotAlreadyAttachedToWeapon(EWeaponAttachmentSlotID slotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.IsAttachmentSlotAlreadyAttachedToWeapon");

	ASTExtraShootWeapon_IsAttachmentSlotAlreadyAttachedToWeapon_Params params;
	params.slotID = slotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetWeaponReloadType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EWeaponReloadType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EWeaponReloadType> ASTExtraShootWeapon::GetWeaponReloadType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetWeaponReloadType");

	ASTExtraShootWeapon_GetWeaponReloadType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetWeaponPostprocessSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWeaponPPSettings       ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FWeaponPPSettings ASTExtraShootWeapon::GetWeaponPostprocessSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetWeaponPostprocessSettings");

	ASTExtraShootWeapon_GetWeaponPostprocessSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetWeaponOrScopePostprocessSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWeaponPPSettings       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FWeaponPPSettings ASTExtraShootWeapon::GetWeaponOrScopePostprocessSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetWeaponOrScopePostprocessSettings");

	ASTExtraShootWeapon_GetWeaponOrScopePostprocessSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetWeaponID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraShootWeapon::GetWeaponID()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetWeaponID");

	ASTExtraShootWeapon_GetWeaponID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetWeaponBodyLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetWeaponBodyLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetWeaponBodyLength");

	ASTExtraShootWeapon_GetWeaponBodyLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetTraceDistanceFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetTraceDistanceFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetTraceDistanceFromEntity");

	ASTExtraShootWeapon_GetTraceDistanceFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetSilencerSocketNameFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ASTExtraShootWeapon::GetSilencerSocketNameFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetSilencerSocketNameFromEntity");

	ASTExtraShootWeapon_GetSilencerSocketNameFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetShootWeaponEntityComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UShootWeaponEntity*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UShootWeaponEntity* ASTExtraShootWeapon::GetShootWeaponEntityComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetShootWeaponEntityComponent");

	ASTExtraShootWeapon_GetShootWeaponEntityComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetShootIntervalFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetShootIntervalFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetShootIntervalFromEntity");

	ASTExtraShootWeapon_GetShootIntervalFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetShellDropSocketNameFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ASTExtraShootWeapon::GetShellDropSocketNameFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetShellDropSocketNameFromEntity");

	ASTExtraShootWeapon_GetShellDropSocketNameFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetScopeID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraShootWeapon::GetScopeID()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetScopeID");

	ASTExtraShootWeapon_GetScopeID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetScopeAimCameraTransform
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   SocketName                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            SocketIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// class UMeshComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMeshComponent* ASTExtraShootWeapon::GetScopeAimCameraTransform(const struct FName& SocketName, int SocketIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetScopeAimCameraTransform");

	ASTExtraShootWeapon_GetScopeAimCameraTransform_Params params;
	params.SocketName = SocketName;
	params.SocketIndex = SocketIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadTimeMagOutFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetReloadTimeMagOutFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadTimeMagOutFromEntity");

	ASTExtraShootWeapon_GetReloadTimeMagOutFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadTimeFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetReloadTimeFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadTimeFromEntity");

	ASTExtraShootWeapon_GetReloadTimeFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadTIDName
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EWeaponReloadMethod> method                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ASTExtraShootWeapon::GetReloadTIDName(TEnumAsByte<EWeaponReloadMethod> method)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadTIDName");

	ASTExtraShootWeapon_GetReloadTIDName_Params params;
	params.method = method;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadTacticalTimeFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetReloadTacticalTimeFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadTacticalTimeFromEntity");

	ASTExtraShootWeapon_GetReloadTacticalTimeFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadDurationStartFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetReloadDurationStartFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadDurationStartFromEntity");

	ASTExtraShootWeapon_GetReloadDurationStartFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadDurationLoopFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetReloadDurationLoopFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetReloadDurationLoopFromEntity");

	ASTExtraShootWeapon_GetReloadDurationLoopFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetRelativeMuzzleTransform
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform ASTExtraShootWeapon::GetRelativeMuzzleTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetRelativeMuzzleTransform");

	ASTExtraShootWeapon_GetRelativeMuzzleTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetReferenceDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetReferenceDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetReferenceDistance");

	ASTExtraShootWeapon_GetReferenceDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetRangeModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetRangeModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetRangeModifier");

	ASTExtraShootWeapon_GetRangeModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetRangeAttenuateFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FSRangeAttenuateConfig> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSRangeAttenuateConfig> ASTExtraShootWeapon::GetRangeAttenuateFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetRangeAttenuateFromEntity");

	ASTExtraShootWeapon_GetRangeAttenuateFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetPreFireTimeFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetPreFireTimeFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetPreFireTimeFromEntity");

	ASTExtraShootWeapon_GetPreFireTimeFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetPostFireTimeFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetPostFireTimeFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetPostFireTimeFromEntity");

	ASTExtraShootWeapon_GetPostFireTimeFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetMuzzleTransform
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform ASTExtraShootWeapon::GetMuzzleTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetMuzzleTransform");

	ASTExtraShootWeapon_GetMuzzleTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetMuzzleSocketNameFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ASTExtraShootWeapon::GetMuzzleSocketNameFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetMuzzleSocketNameFromEntity");

	ASTExtraShootWeapon_GetMuzzleSocketNameFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetMaxValidHitTimeFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetMaxValidHitTimeFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetMaxValidHitTimeFromEntity");

	ASTExtraShootWeapon_GetMaxValidHitTimeFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetMaxImpactEffectSkipTimeFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetMaxImpactEffectSkipTimeFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetMaxImpactEffectSkipTimeFromEntity");

	ASTExtraShootWeapon_GetMaxImpactEffectSkipTimeFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetMaxBulletNumInOneClipFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraShootWeapon::GetMaxBulletNumInOneClipFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetMaxBulletNumInOneClipFromEntity");

	ASTExtraShootWeapon_GetMaxBulletNumInOneClipFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetImpactEffectSkipDistanceFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetImpactEffectSkipDistanceFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetImpactEffectSkipDistanceFromEntity");

	ASTExtraShootWeapon_GetImpactEffectSkipDistanceFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetHitPartCoff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWeaponHitPartCoff      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FWeaponHitPartCoff ASTExtraShootWeapon::GetHitPartCoff()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetHitPartCoff");

	ASTExtraShootWeapon_GetHitPartCoff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetGameDeviationFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetGameDeviationFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetGameDeviationFactor");

	ASTExtraShootWeapon_GetGameDeviationFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetFiringSuppressorSocketNameFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ASTExtraShootWeapon::GetFiringSuppressorSocketNameFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetFiringSuppressorSocketNameFromEntity");

	ASTExtraShootWeapon_GetFiringSuppressorSocketNameFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetFireSensitiveYawRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetFireSensitiveYawRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetFireSensitiveYawRate");

	ASTExtraShootWeapon_GetFireSensitiveYawRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetFireSensitivePitchRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetFireSensitivePitchRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetFireSensitivePitchRate");

	ASTExtraShootWeapon_GetFireSensitivePitchRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetFireModeFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunFireMode                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EGunFireMode ASTExtraShootWeapon::GetFireModeFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetFireModeFromEntity");

	ASTExtraShootWeapon_GetFireModeFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetDefaultAttachmentComponentByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWeaponAttachmentSocketType    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMeshComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStaticMeshComponent* ASTExtraShootWeapon::GetDefaultAttachmentComponentByType(EWeaponAttachmentSocketType Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetDefaultAttachmentComponentByType");

	ASTExtraShootWeapon_GetDefaultAttachmentComponentByType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetDefaultADSFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetDefaultADSFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetDefaultADSFOV");

	ASTExtraShootWeapon_GetDefaultADSFOV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetCurSightType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ESightType>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ESightType> ASTExtraShootWeapon::GetCurSightType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetCurSightType");

	ASTExtraShootWeapon_GetCurSightType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetCurrentZeroingLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraShootWeapon::GetCurrentZeroingLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetCurrentZeroingLevel");

	ASTExtraShootWeapon_GetCurrentZeroingLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetCurrentZeroingDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraShootWeapon::GetCurrentZeroingDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetCurrentZeroingDistance");

	ASTExtraShootWeapon_GetCurrentZeroingDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetCurReloadTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetCurReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetCurReloadTime");

	ASTExtraShootWeapon_GetCurReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetCurReloadMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EWeaponReloadMethod> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EWeaponReloadMethod> ASTExtraShootWeapon::GetCurReloadMethod()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetCurReloadMethod");

	ASTExtraShootWeapon_GetCurReloadMethod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetCrossHairInitSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetCrossHairInitSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetCrossHairInitSize");

	ASTExtraShootWeapon_GetCrossHairInitSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetCrossHairBurstSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetCrossHairBurstSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetCrossHairBurstSpeed");

	ASTExtraShootWeapon_GetCrossHairBurstSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetCrossHairBurstIncreaseSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetCrossHairBurstIncreaseSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetCrossHairBurstIncreaseSpeed");

	ASTExtraShootWeapon_GetCrossHairBurstIncreaseSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetClipHasInfiniteBulletsFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraShootWeapon::GetClipHasInfiniteBulletsFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetClipHasInfiniteBulletsFromEntity");

	ASTExtraShootWeapon_GetClipHasInfiniteBulletsFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetChildMeshComp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   compTag                        (Parm, ZeroConstructor, IsPlainOldData)
// class UMeshComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMeshComponent* ASTExtraShootWeapon::GetChildMeshComp(const struct FName& compTag)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetChildMeshComp");

	ASTExtraShootWeapon_GetChildMeshComp_Params params;
	params.compTag = compTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetBurstShootIntervalFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetBurstShootIntervalFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetBurstShootIntervalFromEntity");

	ASTExtraShootWeapon_GetBurstShootIntervalFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetBurstShootBulletsNumFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraShootWeapon::GetBurstShootBulletsNumFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetBurstShootBulletsNumFromEntity");

	ASTExtraShootWeapon_GetBurstShootBulletsNumFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetBulletTypeFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemDefineID           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FItemDefineID ASTExtraShootWeapon::GetBulletTypeFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetBulletTypeFromEntity");

	ASTExtraShootWeapon_GetBulletTypeFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetBulletRangeEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetBulletRangeEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetBulletRangeEntity");

	ASTExtraShootWeapon_GetBulletRangeEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetBulletNumSingleShotFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char ASTExtraShootWeapon::GetBulletNumSingleShotFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetBulletNumSingleShotFromEntity");

	ASTExtraShootWeapon_GetBulletNumSingleShotFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetBulletFireSpeedFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetBulletFireSpeedFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetBulletFireSpeedFromEntity");

	ASTExtraShootWeapon_GetBulletFireSpeedFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetBaseImpactDamageEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetBaseImpactDamageEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetBaseImpactDamageEntity");

	ASTExtraShootWeapon_GetBaseImpactDamageEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetAvailableWeaponAttachmentSocketTypeList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<EWeaponAttachmentSocketType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<EWeaponAttachmentSocketType> ASTExtraShootWeapon::GetAvailableWeaponAttachmentSocketTypeList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetAvailableWeaponAttachmentSocketTypeList");

	ASTExtraShootWeapon_GetAvailableWeaponAttachmentSocketTypeList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetAutoReloadFromEntity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraShootWeapon::GetAutoReloadFromEntity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetAutoReloadFromEntity");

	ASTExtraShootWeapon_GetAutoReloadFromEntity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetADSManualStop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraShootWeapon::GetADSManualStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetADSManualStop");

	ASTExtraShootWeapon_GetADSManualStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetAccessoriesVRecoilFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetAccessoriesVRecoilFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetAccessoriesVRecoilFactor");

	ASTExtraShootWeapon_GetAccessoriesVRecoilFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetAccessoriesRecoveryFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetAccessoriesRecoveryFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetAccessoriesRecoveryFactor");

	ASTExtraShootWeapon_GetAccessoriesRecoveryFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetAccessoriesHRecoilFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetAccessoriesHRecoilFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetAccessoriesHRecoilFactor");

	ASTExtraShootWeapon_GetAccessoriesHRecoilFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.GetAccessoriesDeviationFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraShootWeapon::GetAccessoriesDeviationFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.GetAccessoriesDeviationFactor");

	ASTExtraShootWeapon_GetAccessoriesDeviationFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.EnableInfiniteBullets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraShootWeapon::EnableInfiniteBullets(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.EnableInfiniteBullets");

	ASTExtraShootWeapon_EnableInfiniteBullets_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeapon.ClearWeaponAttrModifier
// (Final, Native, Public, BlueprintCallable)

void ASTExtraShootWeapon::ClearWeaponAttrModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeapon.ClearWeaponAttrModifier");

	ASTExtraShootWeapon_ClearWeaponAttrModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.TryToFireFlareGun
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::TryToFireFlareGun()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.TryToFireFlareGun");

	USTExtraAnimInstance_TryToFireFlareGun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.StanceSwitch
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::StanceSwitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.StanceSwitch");

	USTExtraAnimInstance_StanceSwitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.SetUseFlareGun
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           IsCanFire                      (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraAnimInstance::SetUseFlareGun(bool IsCanFire)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.SetUseFlareGun");

	USTExtraAnimInstance_SetUseFlareGun_Params params;
	params.IsCanFire = IsCanFire;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.SetCharacterVehParamList
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FAnimVehParamList       NewAnimVehParamList            (Parm)

void USTExtraAnimInstance::SetCharacterVehParamList(const struct FAnimVehParamList& NewAnimVehParamList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.SetCharacterVehParamList");

	USTExtraAnimInstance_SetCharacterVehParamList_Params params;
	params.NewAnimVehParamList = NewAnimVehParamList;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.SetC_ViewRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                NewRotator                     (Parm, IsPlainOldData)

void USTExtraAnimInstance::SetC_ViewRotation(const struct FRotator& NewRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.SetC_ViewRotation");

	USTExtraAnimInstance_SetC_ViewRotation_Params params;
	params.NewRotator = NewRotator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.SetC_PoseType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECharacterPoseType             NewECharacterPoseType          (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraAnimInstance::SetC_PoseType(ECharacterPoseType NewECharacterPoseType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.SetC_PoseType");

	USTExtraAnimInstance_SetC_PoseType_Params params;
	params.NewECharacterPoseType = NewECharacterPoseType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.SetC_IsonVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           NewIsonVehicle                 (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraAnimInstance::SetC_IsonVehicle(bool NewIsonVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.SetC_IsonVehicle");

	USTExtraAnimInstance_SetC_IsonVehicle_Params params;
	params.NewIsonVehicle = NewIsonVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.ResetIdle
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::ResetIdle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.ResetIdle");

	USTExtraAnimInstance_ResetIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.RandomizeIdleIndex_CP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ExludeLastIndex                (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraAnimInstance::RandomizeIdleIndex_CP(bool ExludeLastIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.RandomizeIdleIndex_CP");

	USTExtraAnimInstance_RandomizeIdleIndex_CP_Params params;
	params.ExludeLastIndex = ExludeLastIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.OnHitReaction
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// EAnimWeaponType                WeaponType                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Direction                      (Parm, IsPlainOldData)

void USTExtraAnimInstance::OnHitReaction(EAnimWeaponType WeaponType, const struct FName& BoneName, const struct FVector& Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.OnHitReaction");

	USTExtraAnimInstance_OnHitReaction_Params params;
	params.WeaponType = WeaponType;
	params.BoneName = BoneName;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.LpcPlayMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*            MontageToPlay                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          InPlayRate                     (Parm, ZeroConstructor, IsPlainOldData)
// EMontagePlayReturnType         ReturnValueType                (Parm, ZeroConstructor, IsPlainOldData)
// float                          InTimeToStartMontageAt         (Parm, ZeroConstructor, IsPlainOldData)
// float                          InBlendIn                      (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraAnimInstance::LpcPlayMontage(class UAnimMontage* MontageToPlay, float InPlayRate, EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt, float InBlendIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.LpcPlayMontage");

	USTExtraAnimInstance_LpcPlayMontage_Params params;
	params.MontageToPlay = MontageToPlay;
	params.InPlayRate = InPlayRate;
	params.ReturnValueType = ReturnValueType;
	params.InTimeToStartMontageAt = InTimeToStartMontageAt;
	params.InBlendIn = InBlendIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.HandleWeaponOnShot
// (Final, Native, Public)

void USTExtraAnimInstance::HandleWeaponOnShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.HandleWeaponOnShot");

	USTExtraAnimInstance_HandleWeaponOnShot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.HandleOwnerAnimEvent
// (Final, Native, Public)
// Parameters:
// struct FName                   EventMsg                       (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraAnimInstance::HandleOwnerAnimEvent(const struct FName& EventMsg)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.HandleOwnerAnimEvent");

	USTExtraAnimInstance_HandleOwnerAnimEvent_Params params;
	params.EventMsg = EventMsg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.HandleAnimCurves
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::HandleAnimCurves()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.HandleAnimCurves");

	USTExtraAnimInstance_HandleAnimCurves_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.GetAnimSpeed_TS
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EAnimBluePrintType> BPType                         (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterPoseType             AnimStance                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          InSpeed                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          PlayRate                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          SprintAlpha                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bIsSprinting                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTExtraAnimInstance::GetAnimSpeed_TS(TEnumAsByte<EAnimBluePrintType> BPType, ECharacterPoseType AnimStance, float Direction, float InSpeed, bool bIsSprinting, float* PlayRate, float* SprintAlpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.GetAnimSpeed_TS");

	USTExtraAnimInstance_GetAnimSpeed_TS_Params params;
	params.BPType = BPType;
	params.AnimStance = AnimStance;
	params.Direction = Direction;
	params.InSpeed = InSpeed;
	params.bIsSprinting = bIsSprinting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PlayRate != nullptr)
		*PlayRate = params.PlayRate;
	if (SprintAlpha != nullptr)
		*SprintAlpha = params.SprintAlpha;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.FindPositionFromDistanceCurve
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          Distance                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UAnimSequenceBase*       InAnimSequence                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTExtraAnimInstance::FindPositionFromDistanceCurve(float Distance, class UAnimSequenceBase* InAnimSequence)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.FindPositionFromDistanceCurve");

	USTExtraAnimInstance_FindPositionFromDistanceCurve_Params params;
	params.Distance = Distance;
	params.InAnimSequence = InAnimSequence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateWeaponStates
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateWeaponStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateWeaponStates");

	USTExtraAnimInstance_EvaluateWeaponStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateWeaponStability
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateWeaponStability()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateWeaponStability");

	USTExtraAnimInstance_EvaluateWeaponStability_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateWeaponInertia
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateWeaponInertia()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateWeaponInertia");

	USTExtraAnimInstance_EvaluateWeaponInertia_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateWeaponCollision
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateWeaponCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateWeaponCollision");

	USTExtraAnimInstance_EvaluateWeaponCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateRecoilRoll
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateRecoilRoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateRecoilRoll");

	USTExtraAnimInstance_EvaluateRecoilRoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateLeaning
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateLeaning()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateLeaning");

	USTExtraAnimInstance_EvaluateLeaning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateIdle
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateIdle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateIdle");

	USTExtraAnimInstance_EvaluateIdle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateFPP
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateFPP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateFPP");

	USTExtraAnimInstance_EvaluateFPP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateFallingAndLanding
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateFallingAndLanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateFallingAndLanding");

	USTExtraAnimInstance_EvaluateFallingAndLanding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateCharacterStates
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateCharacterStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateCharacterStates");

	USTExtraAnimInstance_EvaluateCharacterStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateCharacterState
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateCharacterState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateCharacterState");

	USTExtraAnimInstance_EvaluateCharacterState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateCasting
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateCasting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateCasting");

	USTExtraAnimInstance_EvaluateCasting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateAimStates
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateAimStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateAimStates");

	USTExtraAnimInstance_EvaluateAimStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateAimOffsets
// (Final, Native, Public, BlueprintCallable)

void USTExtraAnimInstance::EvaluateAimOffsets()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.EvaluateAimOffsets");

	USTExtraAnimInstance_EvaluateAimOffsets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.CacheParamList
// (Native, Public)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraAnimInstance::CacheParamList(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.CacheParamList");

	USTExtraAnimInstance_CacheParamList_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraAnimInstance.CacheAnimVarList
// (Final, Native, Public)

void USTExtraAnimInstance::CacheAnimVarList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraAnimInstance.CacheAnimVarList");

	USTExtraAnimInstance_CacheAnimVarList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ZeroingLevelUp
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ZeroingLevelUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ZeroingLevelUp");

	ASTExtraBaseCharacter_ZeroingLevelUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ZeroingLevelDown
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ZeroingLevelDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ZeroingLevelDown");

	ASTExtraBaseCharacter_ZeroingLevelDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.VaultStartPosNotifyBPToCpp
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                           isvaultting                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsValidVault                   (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   vaultCharacter                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 startPos                       (Parm, IsPlainOldData)

void ASTExtraBaseCharacter::VaultStartPosNotifyBPToCpp(bool isvaultting, bool IsValidVault, class ASTExtraBaseCharacter* vaultCharacter, const struct FVector& startPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.VaultStartPosNotifyBPToCpp");

	ASTExtraBaseCharacter_VaultStartPosNotifyBPToCpp_Params params;
	params.isvaultting = isvaultting;
	params.IsValidVault = IsValidVault;
	params.vaultCharacter = vaultCharacter;
	params.startPos = startPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.VaultFailPawnCPP
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// struct FString                 Content                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ASTExtraBaseCharacter::VaultFailPawnCPP(const struct FString& Content)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.VaultFailPawnCPP");

	ASTExtraBaseCharacter_VaultFailPawnCPP_Params params;
	params.Content = Content;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.VaultFailPawnBluePrint
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FString                 Content                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ASTExtraBaseCharacter::VaultFailPawnBluePrint(const struct FString& Content)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.VaultFailPawnBluePrint");

	ASTExtraBaseCharacter_VaultFailPawnBluePrint_Params params;
	params.Content = Content;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.UserCancelRescue
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::UserCancelRescue()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.UserCancelRescue");

	ASTExtraBaseCharacter_UserCancelRescue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.UpdateDeathReplayInitTrans
// (Final, Native, Protected)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::UpdateDeathReplayInitTrans(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.UpdateDeathReplayInitTrans");

	ASTExtraBaseCharacter_UpdateDeathReplayInitTrans_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.UnequipWeaponFinish
// (Final, Native, Public)

void ASTExtraBaseCharacter::UnequipWeaponFinish()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.UnequipWeaponFinish");

	ASTExtraBaseCharacter_UnequipWeaponFinish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.UnequipWeapon
// (Final, Native, Public)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSwitchWeapon                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::UnequipWeapon(ESurviveWeaponPropSlot Slot, bool bSwitchWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.UnequipWeapon");

	ASTExtraBaseCharacter_UnequipWeapon_Params params;
	params.Slot = Slot;
	params.bSwitchWeapon = bSwitchWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.TryToBroadcastFatalDamageEvent
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AController*             causer                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            HSChangeMargin                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           IsHeadshot                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::TryToBroadcastFatalDamageEvent(class AController* causer, int HSChangeMargin, const struct FDamageEvent& DamageEvent, bool IsHeadshot, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.TryToBroadcastFatalDamageEvent");

	ASTExtraBaseCharacter_TryToBroadcastFatalDamageEvent_Params params;
	params.causer = causer;
	params.HSChangeMargin = HSChangeMargin;
	params.DamageEvent = DamageEvent;
	params.IsHeadshot = IsHeadshot;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.TryPeek
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsLeft                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ButtonDown                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::TryPeek(bool IsLeft, bool ButtonDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.TryPeek");

	ASTExtraBaseCharacter_TryPeek_Params params;
	params.IsLeft = IsLeft;
	params.ButtonDown = ButtonDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.TriggerEntryEvent_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// EUTSkillEntry                  EntryEvent                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::TriggerEntryEvent_Implementation(EUTSkillEntry EntryEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.TriggerEntryEvent_Implementation");

	ASTExtraBaseCharacter_TriggerEntryEvent_Implementation_Params params;
	params.EntryEvent = EntryEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.TriggerCustomEvent_Implementation
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUAESkillEvent>    EventType                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::TriggerCustomEvent_Implementation(TEnumAsByte<EUAESkillEvent> EventType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.TriggerCustomEvent_Implementation");

	ASTExtraBaseCharacter_TriggerCustomEvent_Implementation_Params params;
	params.EventType = EventType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ToggleThrowGrenadeMode
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::ToggleThrowGrenadeMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ToggleThrowGrenadeMode");

	ASTExtraBaseCharacter_ToggleThrowGrenadeMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.TickWeaponInertia
// (Final, Native, Public)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::TickWeaponInertia(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.TickWeaponInertia");

	ASTExtraBaseCharacter_TickWeaponInertia_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraBaseCharacter.TakeDamageWhenThrowedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraBaseCharacter::TakeDamageWhenThrowedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraBaseCharacter.TakeDamageWhenThrowedDelegate__DelegateSignature");

	ASTExtraBaseCharacter_TakeDamageWhenThrowedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SyncDeadTombBoxToController
// (Native, Protected)
// Parameters:
// class APlayerTombBox*          _DeadTombBox                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SyncDeadTombBoxToController(class APlayerTombBox* _DeadTombBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SyncDeadTombBoxToController");

	ASTExtraBaseCharacter_SyncDeadTombBoxToController_Params params;
	params._DeadTombBox = _DeadTombBox;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SwitchWeaponBySlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseAnimation                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceFinishPreviousSwitch     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SwitchWeaponBySlot(ESurviveWeaponPropSlot Slot, bool bUseAnimation, bool bForceFinishPreviousSwitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SwitchWeaponBySlot");

	ASTExtraBaseCharacter_SwitchWeaponBySlot_Params params;
	params.Slot = Slot;
	params.bUseAnimation = bUseAnimation;
	params.bForceFinishPreviousSwitch = bForceFinishPreviousSwitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SwitchToLastWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bUseAnimation                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceFinishPreviousSwitch     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SwitchToLastWeapon(bool bUseAnimation, bool bForceFinishPreviousSwitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SwitchToLastWeapon");

	ASTExtraBaseCharacter_SwitchToLastWeapon_Params params;
	params.bUseAnimation = bUseAnimation;
	params.bForceFinishPreviousSwitch = bForceFinishPreviousSwitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SwitchToLastNoneGrenageWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bUseAnimation                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceFinishPreviousSwitch     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SwitchToLastNoneGrenageWeapon(bool bUseAnimation, bool bForceFinishPreviousSwitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SwitchToLastNoneGrenageWeapon");

	ASTExtraBaseCharacter_SwitchToLastNoneGrenageWeapon_Params params;
	params.bUseAnimation = bUseAnimation;
	params.bForceFinishPreviousSwitch = bForceFinishPreviousSwitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SwitchToGrenadeSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EGrenadeType>      grenadeType                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::SwitchToGrenadeSlot(TEnumAsByte<EGrenadeType> grenadeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SwitchToGrenadeSlot");

	ASTExtraBaseCharacter_SwitchToGrenadeSlot_Params params;
	params.grenadeType = grenadeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SwitchPoseState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ESTEPoseState>     State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreCD                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIgnoreCheck                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ShouldShowPrompt               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsTriggerByPressBtn            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::SwitchPoseState(TEnumAsByte<ESTEPoseState> State, bool bIgnoreCD, bool bIgnoreCheck, bool ShouldShowPrompt, bool IsTriggerByPressBtn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SwitchPoseState");

	ASTExtraBaseCharacter_SwitchPoseState_Params params;
	params.State = State;
	params.bIgnoreCD = bIgnoreCD;
	params.bIgnoreCheck = bIgnoreCheck;
	params.ShouldShowPrompt = ShouldShowPrompt;
	params.IsTriggerByPressBtn = IsTriggerByPressBtn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SwapMainWeapon
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::SwapMainWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SwapMainWeapon");

	ASTExtraBaseCharacter_SwapMainWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.STServerUpdateState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          InThrottleInput                (Parm, ZeroConstructor, IsPlainOldData)
// float                          InSteeringInput                (Parm, ZeroConstructor, IsPlainOldData)
// int8_t                         State                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::STServerUpdateState(float InThrottleInput, float InSteeringInput, int8_t State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.STServerUpdateState");

	ASTExtraBaseCharacter_STServerUpdateState_Params params;
	params.InThrottleInput = InThrottleInput;
	params.InSteeringInput = InSteeringInput;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.StopFireFilter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::StopFireFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.StopFireFilter");

	ASTExtraBaseCharacter_StopFireFilter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.StopFire
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.StopFire");

	ASTExtraBaseCharacter_StopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.StopDeathPlaybackRecording
// (Final, Native, Protected)

void ASTExtraBaseCharacter::StopDeathPlaybackRecording()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.StopDeathPlaybackRecording");

	ASTExtraBaseCharacter_StopDeathPlaybackRecording_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.StopCurrentSkill_Server
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::StopCurrentSkill_Server()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.StopCurrentSkill_Server");

	ASTExtraBaseCharacter_StopCurrentSkill_Server_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.StartFireSimple
// (Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::StartFireSimple()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.StartFireSimple");

	ASTExtraBaseCharacter_StartFireSimple_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.StartFireFilter
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::StartFireFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.StartFireFilter");

	ASTExtraBaseCharacter_StartFireFilter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.StartFire
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            BurstShootBulletsLimit         (Parm, ZeroConstructor, IsPlainOldData)
// float                          BurstShootTimeLimit            (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EShootWeaponShootMode> ShootMode                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SimpleShootTarget              (Parm, IsPlainOldData)

void ASTExtraBaseCharacter::StartFire(int BurstShootBulletsLimit, float BurstShootTimeLimit, TEnumAsByte<EShootWeaponShootMode> ShootMode, const struct FVector& SimpleShootTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.StartFire");

	ASTExtraBaseCharacter_StartFire_Params params;
	params.BurstShootBulletsLimit = BurstShootBulletsLimit;
	params.BurstShootTimeLimit = BurstShootTimeLimit;
	params.ShootMode = ShootMode;
	params.SimpleShootTarget = SimpleShootTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SpawnBulletPassByEffect
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)
// float                          BulletVelocity                 (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SpawnBulletPassByEffect(const struct FVector& Location, float BulletVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SpawnBulletPassByEffect");

	ASTExtraBaseCharacter_SpawnBulletPassByEffect_Params params;
	params.Location = Location;
	params.BulletVelocity = BulletVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SpawnAndSwithToGrenadeServerCall
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TEnumAsByte<EGrenadeType>      grenadeType                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SpawnAndSwithToGrenadeServerCall(TEnumAsByte<EGrenadeType> grenadeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SpawnAndSwithToGrenadeServerCall");

	ASTExtraBaseCharacter_SpawnAndSwithToGrenadeServerCall_Params params;
	params.grenadeType = grenadeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SpawnAndSwitchToGrenadeOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   SpesificLogicGrenadeSlot       (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraWeapon*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraWeapon* ASTExtraBaseCharacter::SpawnAndSwitchToGrenadeOnServer(const struct FName& SpesificLogicGrenadeSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SpawnAndSwitchToGrenadeOnServer");

	ASTExtraBaseCharacter_SpawnAndSwitchToGrenadeOnServer_Params params;
	params.SpesificLogicGrenadeSlot = SpesificLogicGrenadeSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SpawnAndSwitchToGrenadeOnClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   SpesificLogicGrenadeSlot       (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraWeapon*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraWeapon* ASTExtraBaseCharacter::SpawnAndSwitchToGrenadeOnClient(const struct FName& SpesificLogicGrenadeSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SpawnAndSwitchToGrenadeOnClient");

	ASTExtraBaseCharacter_SpawnAndSwitchToGrenadeOnClient_Params params;
	params.SpesificLogicGrenadeSlot = SpesificLogicGrenadeSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SpawnAndBackpackWeaponOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Template                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemDefineID           ID                             (Parm)
// struct FName                   LogicSocket                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoUse                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bResetBulletNum                (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraWeapon*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraWeapon* ASTExtraBaseCharacter::SpawnAndBackpackWeaponOnServer(class UClass* Template, const struct FItemDefineID& ID, const struct FName& LogicSocket, bool bAutoUse, bool bResetBulletNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SpawnAndBackpackWeaponOnServer");

	ASTExtraBaseCharacter_SpawnAndBackpackWeaponOnServer_Params params;
	params.Template = Template;
	params.ID = ID;
	params.LogicSocket = LogicSocket;
	params.bAutoUse = bAutoUse;
	params.bResetBulletNum = bResetBulletNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ShowDebugRole
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ShowDebugRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ShowDebugRole");

	ASTExtraBaseCharacter_ShowDebugRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ShowDebugRecordData
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ShowDebugRecordData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ShowDebugRecordData");

	ASTExtraBaseCharacter_ShowDebugRecordData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ShowDebugPickUpFlow
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ShowDebugPickUpFlow()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ShowDebugPickUpFlow");

	ASTExtraBaseCharacter_ShowDebugPickUpFlow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ShowDebugEquipOrUnequipFlow
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ShowDebugEquipOrUnequipFlow()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ShowDebugEquipOrUnequipFlow");

	ASTExtraBaseCharacter_ShowDebugEquipOrUnequipFlow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ShouldUpdateHPOnUI
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::ShouldUpdateHPOnUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ShouldUpdateHPOnUI");

	ASTExtraBaseCharacter_ShouldUpdateHPOnUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ShouldAutoScopeWhenPeek
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::ShouldAutoScopeWhenPeek()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ShouldAutoScopeWhenPeek");

	ASTExtraBaseCharacter_ShouldAutoScopeWhenPeek_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetWeaponObstruct
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bObstruct                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetWeaponObstruct(bool bObstruct)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetWeaponObstruct");

	ASTExtraBaseCharacter_SetWeaponObstruct_Params params;
	params.bObstruct = bObstruct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetWeaponInertia
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                InInertia                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ASTExtraBaseCharacter::SetWeaponInertia(const struct FRotator& InInertia)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetWeaponInertia");

	ASTExtraBaseCharacter_SetWeaponInertia_Params params;
	params.InInertia = InInertia;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetThrowGrenadeMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EThrowGrenadeMode> ThrowMode                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetThrowGrenadeMode(TEnumAsByte<EThrowGrenadeMode> ThrowMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetThrowGrenadeMode");

	ASTExtraBaseCharacter_SetThrowGrenadeMode_Params params;
	params.ThrowMode = ThrowMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetShootWeaponFireMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EGunFireMode                   NewFireMode                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::SetShootWeaponFireMode(EGunFireMode NewFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetShootWeaponFireMode");

	ASTExtraBaseCharacter_SetShootWeaponFireMode_Params params;
	params.NewFireMode = NewFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetServiveHUDVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bVisibility                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetServiveHUDVisibility(bool bVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetServiveHUDVisibility");

	ASTExtraBaseCharacter_SetServiveHUDVisibility_Params params;
	params.bVisibility = bVisibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetReloadMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EWeaponReloadMethod> reloadMethod                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetReloadMethod(TEnumAsByte<EWeaponReloadMethod> reloadMethod)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetReloadMethod");

	ASTExtraBaseCharacter_SetReloadMethod_Params params;
	params.reloadMethod = reloadMethod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetIsAutoFollow
// (Final, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   IFollowWho                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetIsAutoFollow(bool Val, class ASTExtraBaseCharacter* IFollowWho)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetIsAutoFollow");

	ASTExtraBaseCharacter_SetIsAutoFollow_Params params;
	params.Val = Val;
	params.IFollowWho = IFollowWho;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetHealthSafety
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewHealth                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ERecoveryReasonType> Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetHealthSafety(float NewHealth, TEnumAsByte<ERecoveryReasonType> Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetHealthSafety");

	ASTExtraBaseCharacter_SetHealthSafety_Params params;
	params.NewHealth = NewHealth;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetHandFoldRatio
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Ratio                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetHandFoldRatio(int Ratio)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetHandFoldRatio");

	ASTExtraBaseCharacter_SetHandFoldRatio_Params params;
	params.Ratio = Ratio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetDelayStateSwitchTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DelayTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetDelayStateSwitchTime(float DelayTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetDelayStateSwitchTime");

	ASTExtraBaseCharacter_SetDelayStateSwitchTime_Params params;
	params.DelayTime = DelayTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetCurrentPersonPerspective
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsNewFPP                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsInitSetting                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::SetCurrentPersonPerspective(bool IsNewFPP, bool IsInitSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetCurrentPersonPerspective");

	ASTExtraBaseCharacter_SetCurrentPersonPerspective_Params params;
	params.IsNewFPP = IsNewFPP;
	params.IsInitSetting = IsInitSetting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetComponentsActive
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ComponentClass                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsActive                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetComponentsActive(class UClass* ComponentClass, bool IsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetComponentsActive");

	ASTExtraBaseCharacter_SetComponentsActive_Params params;
	params.ComponentClass = ComponentClass;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetCheatSpeedModifier
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                          NewModifier                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetCheatSpeedModifier(float NewModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetCheatSpeedModifier");

	ASTExtraBaseCharacter_SetCheatSpeedModifier_Params params;
	params.NewModifier = NewModifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetAnimParamIsRescueing
// (Final, Native, Public)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetAnimParamIsRescueing(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetAnimParamIsRescueing");

	ASTExtraBaseCharacter_SetAnimParamIsRescueing_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SetAnimParamIsNearDeathStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::SetAnimParamIsNearDeathStatus(bool Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SetAnimParamIsNearDeathStatus");

	ASTExtraBaseCharacter_SetAnimParamIsNearDeathStatus_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerTriggerJump
// (Net, Native, Event, Public, NetServer, NetValidate)

void ASTExtraBaseCharacter::ServerTriggerJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerTriggerJump");

	ASTExtraBaseCharacter_ServerTriggerJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerSetPeekState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           IsLeft                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ButtonDown                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ServerSetPeekState(bool IsLeft, bool ButtonDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerSetPeekState");

	ASTExtraBaseCharacter_ServerSetPeekState_Params params;
	params.IsLeft = IsLeft;
	params.ButtonDown = ButtonDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerSetPeekCollision
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           HasCollision                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ServerSetPeekCollision(bool HasCollision)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerSetPeekCollision");

	ASTExtraBaseCharacter_ServerSetPeekCollision_Params params;
	params.HasCollision = HasCollision;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerSetMovementState
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Input                          (Parm, IsPlainOldData)

void ASTExtraBaseCharacter::ServerSetMovementState(const struct FVector& Input)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerSetMovementState");

	ASTExtraBaseCharacter_ServerSetMovementState_Params params;
	params.Input = Input;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerSetAimOffsets
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantizeNormal NewAimOffsets                  (Parm)

void ASTExtraBaseCharacter::ServerSetAimOffsets(const struct FVector_NetQuantizeNormal& NewAimOffsets)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerSetAimOffsets");

	ASTExtraBaseCharacter_ServerSetAimOffsets_Params params;
	params.NewAimOffsets = NewAimOffsets;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerResponseInvite
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   SomeOne                        (Parm, ZeroConstructor, IsPlainOldData)
// EInviteResponceType            res                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ServerResponseInvite(class ASTExtraBaseCharacter* SomeOne, EInviteResponceType res)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerResponseInvite");

	ASTExtraBaseCharacter_ServerResponseInvite_Params params;
	params.SomeOne = SomeOne;
	params.res = res;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerOnThrowableDetachedFromHand
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 RelDetachedHandPosition        (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ASTExtraBaseCharacter::ServerOnThrowableDetachedFromHand(const struct FVector& RelDetachedHandPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerOnThrowableDetachedFromHand");

	ASTExtraBaseCharacter_ServerOnThrowableDetachedFromHand_Params params;
	params.RelDetachedHandPosition = RelDetachedHandPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerLogFireWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FAttackId               AttackId                       (ConstParm, Parm, ReferenceParm)
// int                            ItemDefineID                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ServerLogFireWeapon(const struct FAttackId& AttackId, int ItemDefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerLogFireWeapon");

	ASTExtraBaseCharacter_ServerLogFireWeapon_Params params;
	params.AttackId = AttackId;
	params.ItemDefineID = ItemDefineID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerInviteTeammate
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FString>         Names                          (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ASTExtraBaseCharacter::ServerInviteTeammate(TArray<struct FString> Names)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerInviteTeammate");

	ASTExtraBaseCharacter_ServerInviteTeammate_Params params;
	params.Names = Names;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerInterrupt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            stateID                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ServerInterrupt(int stateID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerInterrupt");

	ASTExtraBaseCharacter_ServerInterrupt_Params params;
	params.stateID = stateID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerFollowTeammate
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor)

void ASTExtraBaseCharacter::ServerFollowTeammate(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerFollowTeammate");

	ASTExtraBaseCharacter_ServerFollowTeammate_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerChangeThrowGrenadeMode
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EThrowGrenadeMode> ThrowMode                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ServerChangeThrowGrenadeMode(TEnumAsByte<EThrowGrenadeMode> ThrowMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerChangeThrowGrenadeMode");

	ASTExtraBaseCharacter_ServerChangeThrowGrenadeMode_Params params;
	params.ThrowMode = ThrowMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerCancelFollow
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraBaseCharacter::ServerCancelFollow()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerCancelFollow");

	ASTExtraBaseCharacter_ServerCancelFollow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerAddOrUpdateReticleShapeIndex
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            ScopeTypeSpecificID            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            NextShapeIndex                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ServerAddOrUpdateReticleShapeIndex(int ScopeTypeSpecificID, int NextShapeIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerAddOrUpdateReticleShapeIndex");

	ASTExtraBaseCharacter_ServerAddOrUpdateReticleShapeIndex_Params params;
	params.ScopeTypeSpecificID = ScopeTypeSpecificID;
	params.NextShapeIndex = NextShapeIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ServerAddOrUpdateReticleBrightness
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            ScopeTypeSpecificID            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          NextBrightness                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ServerAddOrUpdateReticleBrightness(int ScopeTypeSpecificID, float NextBrightness)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ServerAddOrUpdateReticleBrightness");

	ASTExtraBaseCharacter_ServerAddOrUpdateReticleBrightness_Params params;
	params.ScopeTypeSpecificID = ScopeTypeSpecificID;
	params.NextBrightness = NextBrightness;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SendServerMoveToClientUnreliaby
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Position                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rotation                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Velocity                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ASTExtraBaseCharacter::SendServerMoveToClientUnreliaby(float Timestamp, const struct FVector& Position, const struct FRotator& Rotation, const struct FVector& Velocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SendServerMoveToClientUnreliaby");

	ASTExtraBaseCharacter_SendServerMoveToClientUnreliaby_Params params;
	params.Timestamp = Timestamp;
	params.Position = Position;
	params.Rotation = Rotation;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SendClientMoveToServerUnreliaby
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Position                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rotation                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Velocity                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ASTExtraBaseCharacter::SendClientMoveToServerUnreliaby(float Timestamp, const struct FVector& Position, const struct FRotator& Rotation, const struct FVector& Velocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SendClientMoveToServerUnreliaby");

	ASTExtraBaseCharacter_SendClientMoveToServerUnreliaby_Params params;
	params.Timestamp = Timestamp;
	params.Position = Position;
	params.Rotation = Rotation;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SendClientMoveToServerReliaby
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Position                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rotation                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Velocity                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ASTExtraBaseCharacter::SendClientMoveToServerReliaby(float Timestamp, const struct FVector& Position, const struct FRotator& Rotation, const struct FVector& Velocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SendClientMoveToServerReliaby");

	ASTExtraBaseCharacter_SendClientMoveToServerReliaby_Params params;
	params.Timestamp = Timestamp;
	params.Position = Position;
	params.Rotation = Rotation;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SearchTombBoxes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FSearchedTombBoxAndWrapperListResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSearchedTombBoxAndWrapperListResult> ASTExtraBaseCharacter::SearchTombBoxes()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SearchTombBoxes");

	ASTExtraBaseCharacter_SearchTombBoxes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SearchPickUpWrapperActors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIncludeWrapprsOnGround        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIncludeWrapprsInBox           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FSearchedPickUpItemResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSearchedPickUpItemResult> ASTExtraBaseCharacter::SearchPickUpWrapperActors(bool bIncludeWrapprsOnGround, bool bIncludeWrapprsInBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SearchPickUpWrapperActors");

	ASTExtraBaseCharacter_SearchPickUpWrapperActors_Params params;
	params.bIncludeWrapprsOnGround = bIncludeWrapprsOnGround;
	params.bIncludeWrapprsInBox = bIncludeWrapprsInBox;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.SaveMeshUpdateFlag
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::SaveMeshUpdateFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.SaveMeshUpdateFlag");

	ASTExtraBaseCharacter_SaveMeshUpdateFlag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.S2C_SetSkillPrompt
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bSkillPrompt                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          LastTime                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 PromptText                     (Parm, ZeroConstructor)
// float                          TotalTime                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::S2C_SetSkillPrompt(bool bSkillPrompt, float LastTime, const struct FString& PromptText, float TotalTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.S2C_SetSkillPrompt");

	ASTExtraBaseCharacter_S2C_SetSkillPrompt_Params params;
	params.bSkillPrompt = bSkillPrompt;
	params.LastTime = LastTime;
	params.PromptText = PromptText;
	params.TotalTime = TotalTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.S2C_InterruptState
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// int                            stateID                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            interruptedBy                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::S2C_InterruptState(int stateID, int interruptedBy)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.S2C_InterruptState");

	ASTExtraBaseCharacter_S2C_InterruptState_Params params;
	params.stateID = stateID;
	params.interruptedBy = interruptedBy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.S2C_FailSkillPrompt
// (Net, NetReliable, Native, Event, Public, NetClient)

void ASTExtraBaseCharacter::S2C_FailSkillPrompt()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.S2C_FailSkillPrompt");

	ASTExtraBaseCharacter_S2C_FailSkillPrompt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_SwitchWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseAnimation                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceFinishPreviousSwitch     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_Server_SwitchWeapon(ESurviveWeaponPropSlot Slot, bool bUseAnimation, bool bForceFinishPreviousSwitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_SwitchWeapon");

	ASTExtraBaseCharacter_RPC_Server_SwitchWeapon_Params params;
	params.Slot = Slot;
	params.bUseAnimation = bUseAnimation;
	params.bForceFinishPreviousSwitch = bForceFinishPreviousSwitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_SwapMainWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ASTExtraBaseCharacter::RPC_Server_SwapMainWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_SwapMainWeapon");

	ASTExtraBaseCharacter_RPC_Server_SwapMainWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_SpawnAndSwitchToGrenade
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FName                   SpesificLogicGrenadeSlot       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_Server_SpawnAndSwitchToGrenade(const struct FName& SpesificLogicGrenadeSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_SpawnAndSwitchToGrenade");

	ASTExtraBaseCharacter_RPC_Server_SpawnAndSwitchToGrenade_Params params;
	params.SpesificLogicGrenadeSlot = SpesificLogicGrenadeSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_SetHandFoldRatio
// (Net, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int                            Ratio                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_Server_SetHandFoldRatio(int Ratio)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_SetHandFoldRatio");

	ASTExtraBaseCharacter_RPC_Server_SetHandFoldRatio_Params params;
	params.Ratio = Ratio;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_EnableCurrentWeaponInfiniteBullets
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_Server_EnableCurrentWeaponInfiniteBullets(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_EnableCurrentWeaponInfiniteBullets");

	ASTExtraBaseCharacter_RPC_Server_EnableCurrentWeaponInfiniteBullets_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_DestroyGrenadeAndSwitchBackToPreviousWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void ASTExtraBaseCharacter::RPC_Server_DestroyGrenadeAndSwitchBackToPreviousWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Server_DestroyGrenadeAndSwitchBackToPreviousWeapon");

	ASTExtraBaseCharacter_RPC_Server_DestroyGrenadeAndSwitchBackToPreviousWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_NetMulticast_HandlePlayerPickUpActor
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          TargetZLoc                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_NetMulticast_HandlePlayerPickUpActor(float TargetZLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_NetMulticast_HandlePlayerPickUpActor");

	ASTExtraBaseCharacter_RPC_NetMulticast_HandlePlayerPickUpActor_Params params;
	params.TargetZLoc = TargetZLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_SwitchWeapon
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bUseAnimation                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bForceFinishPreviousSwitch     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_Client_SwitchWeapon(ESurviveWeaponPropSlot Slot, bool bUseAnimation, bool bForceFinishPreviousSwitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_SwitchWeapon");

	ASTExtraBaseCharacter_RPC_Client_SwitchWeapon_Params params;
	params.Slot = Slot;
	params.bUseAnimation = bUseAnimation;
	params.bForceFinishPreviousSwitch = bForceFinishPreviousSwitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_SwapMainWeapon
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)

void ASTExtraBaseCharacter::RPC_Client_SwapMainWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_SwapMainWeapon");

	ASTExtraBaseCharacter_RPC_Client_SwapMainWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_StopCurrentSkill
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)

void ASTExtraBaseCharacter::RPC_Client_StopCurrentSkill()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_StopCurrentSkill");

	ASTExtraBaseCharacter_RPC_Client_StopCurrentSkill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_SpawnAndSwitchToGrenade
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// struct FName                   SpesificLogicGrenadeSlot       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_Client_SpawnAndSwitchToGrenade(const struct FName& SpesificLogicGrenadeSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_SpawnAndSwitchToGrenade");

	ASTExtraBaseCharacter_RPC_Client_SpawnAndSwitchToGrenade_Params params;
	params.SpesificLogicGrenadeSlot = SpesificLogicGrenadeSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_ShootVertifyRes
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// TEnumAsByte<EShootVertifyRes>  VertifyRes                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FBulletHitInfoUploadData HistoryShootData               (ConstParm, Parm, ReferenceParm)
// struct FCharacterHistoryData   HistoryChData                  (ConstParm, Parm, ReferenceParm)

void ASTExtraBaseCharacter::RPC_Client_ShootVertifyRes(TEnumAsByte<EShootVertifyRes> VertifyRes, const struct FBulletHitInfoUploadData& HistoryShootData, const struct FCharacterHistoryData& HistoryChData)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_ShootVertifyRes");

	ASTExtraBaseCharacter_RPC_Client_ShootVertifyRes_Params params;
	params.VertifyRes = VertifyRes;
	params.HistoryShootData = HistoryShootData;
	params.HistoryChData = HistoryChData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_SetReloadCurWeapon
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// class ASTExtraWeapon*          Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_Client_SetReloadCurWeapon(class ASTExtraWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_SetReloadCurWeapon");

	ASTExtraBaseCharacter_RPC_Client_SetReloadCurWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_OnDeathStopRecordingNotify
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// struct FName                   SpectatorName                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_Client_OnDeathStopRecordingNotify(const struct FName& SpectatorName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_OnDeathStopRecordingNotify");

	ASTExtraBaseCharacter_RPC_Client_OnDeathStopRecordingNotify_Params params;
	params.SpectatorName = SpectatorName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_OnDamageNotifyRecord
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// int                            DamagerID                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          fHealth                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            OtherHealthStatus              (Parm, ZeroConstructor, IsPlainOldData)
// float                          ShootDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   CauserName                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_Client_OnDamageNotifyRecord(int DamagerID, float fHealth, int OtherHealthStatus, float ShootDistance, int DamageType, const struct FName& CauserName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_OnDamageNotifyRecord");

	ASTExtraBaseCharacter_RPC_Client_OnDamageNotifyRecord_Params params;
	params.DamagerID = DamagerID;
	params.fHealth = fHealth;
	params.OtherHealthStatus = OtherHealthStatus;
	params.ShootDistance = ShootDistance;
	params.DamageType = DamageType;
	params.CauserName = CauserName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_EnableCurrentWeaponInfiniteBullets
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::RPC_Client_EnableCurrentWeaponInfiniteBullets(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_EnableCurrentWeaponInfiniteBullets");

	ASTExtraBaseCharacter_RPC_Client_EnableCurrentWeaponInfiniteBullets_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_DestroyGrenadeAndSwitchBackToPreviousWeapon
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)

void ASTExtraBaseCharacter::RPC_Client_DestroyGrenadeAndSwitchBackToPreviousWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RPC_Client_DestroyGrenadeAndSwitchBackToPreviousWeapon");

	ASTExtraBaseCharacter_RPC_Client_DestroyGrenadeAndSwitchBackToPreviousWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ReticleBrightnessUp
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ReticleBrightnessUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ReticleBrightnessUp");

	ASTExtraBaseCharacter_ReticleBrightnessUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ReticleBrightnessDown
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ReticleBrightnessDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ReticleBrightnessDown");

	ASTExtraBaseCharacter_ReticleBrightnessDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RestoreMeshUpdateFlag
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::RestoreMeshUpdateFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RestoreMeshUpdateFlag");

	ASTExtraBaseCharacter_RestoreMeshUpdateFlag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ResponceInvite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   SomeOne                        (Parm, ZeroConstructor, IsPlainOldData)
// EInviteResponceType            res                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ResponceInvite(class ASTExtraBaseCharacter* SomeOne, EInviteResponceType res)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ResponceInvite");

	ASTExtraBaseCharacter_ResponceInvite_Params params;
	params.SomeOne = SomeOne;
	params.res = res;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ResetZeroingLevel
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ResetZeroingLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ResetZeroingLevel");

	ASTExtraBaseCharacter_ResetZeroingLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ResetValueLimitForHealthPredict
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::ResetValueLimitForHealthPredict()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ResetValueLimitForHealthPredict");

	ASTExtraBaseCharacter_ResetValueLimitForHealthPredict_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ResetGunAimingParameters
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ResetGunAimingParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ResetGunAimingParameters");

	ASTExtraBaseCharacter_ResetGunAimingParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ResetCamera
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::ResetCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ResetCamera");

	ASTExtraBaseCharacter_ResetCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RequestUserCancleRescue
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraBaseCharacter::RequestUserCancleRescue()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RequestUserCancleRescue");

	ASTExtraBaseCharacter_RequestUserCancleRescue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RequestCancelUseConsumeable
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraBaseCharacter::RequestCancelUseConsumeable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RequestCancelUseConsumeable");

	ASTExtraBaseCharacter_RequestCancelUseConsumeable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ReqStartPlayEmote
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ReqStartPlayEmote(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ReqStartPlayEmote");

	ASTExtraBaseCharacter_ReqStartPlayEmote_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ReqInteruptPlayEmote
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ReqInteruptPlayEmote(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ReqInteruptPlayEmote");

	ASTExtraBaseCharacter_ReqInteruptPlayEmote_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ReqEmotePlayFinished
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ReqEmotePlayFinished(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ReqEmotePlayFinished");

	ASTExtraBaseCharacter_ReqEmotePlayFinished_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ReportAntiCheatInfo
// (Final, Native, Public)

void ASTExtraBaseCharacter::ReportAntiCheatInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ReportAntiCheatInfo");

	ASTExtraBaseCharacter_ReportAntiCheatInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RemoveBuff
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   BuffName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           RemoveLayerOnly                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::RemoveBuff(const struct FName& BuffName, bool RemoveLayerOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RemoveBuff");

	ASTExtraBaseCharacter_RemoveBuff_Params params;
	params.BuffName = BuffName;
	params.RemoveLayerOnly = RemoveLayerOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ReloadWeaponFilter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::ReloadWeaponFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ReloadWeaponFilter");

	ASTExtraBaseCharacter_ReloadWeaponFilter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ReloadFail_Client
// (Net, NetReliable, Native, Event, Public, NetClient)

void ASTExtraBaseCharacter::ReloadFail_Client()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ReloadFail_Client");

	ASTExtraBaseCharacter_ReloadFail_Client_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ReloadFail
// (Final, Native, Public)

void ASTExtraBaseCharacter::ReloadFail()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ReloadFail");

	ASTExtraBaseCharacter_ReloadFail_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ReloadCurrentWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::ReloadCurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ReloadCurrentWeapon");

	ASTExtraBaseCharacter_ReloadCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.RefreshMoveAttrModifier
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::RefreshMoveAttrModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.RefreshMoveAttrModifier");

	ASTExtraBaseCharacter_RefreshMoveAttrModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PrintAIPolicyDecisionData
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PrintAIPolicyDecisionData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PrintAIPolicyDecisionData");

	ASTExtraBaseCharacter_PrintAIPolicyDecisionData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PostGetPlayerAnimation
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::PostGetPlayerAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PostGetPlayerAnimation");

	ASTExtraBaseCharacter_PostGetPlayerAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayToggleFiringModeSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlayToggleFiringModeSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayToggleFiringModeSound");

	ASTExtraBaseCharacter_PlayToggleFiringModeSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlaySwitchSightSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlaySwitchSightSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlaySwitchSightSound");

	ASTExtraBaseCharacter_PlaySwitchSightSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlaySwitchFireModeSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlaySwitchFireModeSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlaySwitchFireModeSound");

	ASTExtraBaseCharacter_PlaySwitchFireModeSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlaySelfThrowAwayWeaponSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlaySelfThrowAwayWeaponSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlaySelfThrowAwayWeaponSound");

	ASTExtraBaseCharacter_PlaySelfThrowAwayWeaponSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayPullBoltSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlayPullBoltSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayPullBoltSound");

	ASTExtraBaseCharacter_PlayPullBoltSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayOperateItemSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 BankName                       (Parm, ZeroConstructor)
// struct FString                 SoundName                      (Parm, ZeroConstructor)

void ASTExtraBaseCharacter::PlayOperateItemSound(const struct FString& BankName, const struct FString& SoundName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayOperateItemSound");

	ASTExtraBaseCharacter_PlayOperateItemSound_Params params;
	params.BankName = BankName;
	params.SoundName = SoundName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayMountAccessoriesSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlayMountAccessoriesSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayMountAccessoriesSound");

	ASTExtraBaseCharacter_PlayMountAccessoriesSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayMagOUTSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlayMagOUTSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayMagOUTSound");

	ASTExtraBaseCharacter_PlayMagOUTSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayMagINSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlayMagINSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayMagINSound");

	ASTExtraBaseCharacter_PlayMagINSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayLocalShellDropFX
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlayLocalShellDropFX()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayLocalShellDropFX");

	ASTExtraBaseCharacter_PlayLocalShellDropFX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayLoadBulletSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlayLoadBulletSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayLoadBulletSound");

	ASTExtraBaseCharacter_PlayLoadBulletSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayFootstepSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EFootStepState>    FootStepState                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::PlayFootstepSound(TEnumAsByte<EFootStepState> FootStepState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayFootstepSound");

	ASTExtraBaseCharacter_PlayFootstepSound_Params params;
	params.FootStepState = FootStepState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayerConfirmToRescue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::PlayerConfirmToRescue()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayerConfirmToRescue");

	ASTExtraBaseCharacter_PlayerConfirmToRescue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayEmote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::PlayEmote(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayEmote");

	ASTExtraBaseCharacter_PlayEmote_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayChangeMagazineSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlayChangeMagazineSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayChangeMagazineSound");

	ASTExtraBaseCharacter_PlayChangeMagazineSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PlayAmbientSound
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::PlayAmbientSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PlayAmbientSound");

	ASTExtraBaseCharacter_PlayAmbientSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PickUpWrapperActor
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FPickUpItemData         ItemData                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FName                   EquipSlotName                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            PickUpCount                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::PickUpWrapperActor(class AActor* Target, const struct FPickUpItemData& ItemData, const struct FName& EquipSlotName, int PickUpCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PickUpWrapperActor");

	ASTExtraBaseCharacter_PickUpWrapperActor_Params params;
	params.Target = Target;
	params.ItemData = ItemData;
	params.EquipSlotName = EquipSlotName;
	params.PickUpCount = PickUpCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PickUpGroundItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InValidAngle                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::PickUpGroundItem(float InValidAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PickUpGroundItem");

	ASTExtraBaseCharacter_PickUpGroundItem_Params params;
	params.InValidAngle = InValidAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PickUpActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            AdditionalParam                (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   EquipSlotName                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            PickUpCount                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::PickUpActor(class AActor* Target, int AdditionalParam, const struct FName& EquipSlotName, int PickUpCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PickUpActor");

	ASTExtraBaseCharacter_PickUpActor_Params params;
	params.Target = Target;
	params.AdditionalParam = AdditionalParam;
	params.EquipSlotName = EquipSlotName;
	params.PickUpCount = PickUpCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PeekRight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ButtonDown                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::PeekRight(bool ButtonDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PeekRight");

	ASTExtraBaseCharacter_PeekRight_Params params;
	params.ButtonDown = ButtonDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PeekLeft
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ButtonDown                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::PeekLeft(bool ButtonDown)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PeekLeft");

	ASTExtraBaseCharacter_PeekLeft_Params params;
	params.ButtonDown = ButtonDown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PawnVaultServerCPP
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// float                          dis                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Length                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 VaultKey                       (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// struct FVector                 startPos                       (Parm, IsPlainOldData)
// class AActor*                  checkActor                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          crossblockMaxFall              (Parm, ZeroConstructor, IsPlainOldData)
// float                          crossblockMaxDis               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 hitpoint                       (Parm, IsPlainOldData)
// class AActor*                  WindowActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                MoveDir                        (Parm, IsPlainOldData)
// float                          ArrivalHeight                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::PawnVaultServerCPP(float dis, float Height, float Length, const struct FString& VaultKey, const struct FVector& startPos, class AActor* checkActor, float crossblockMaxFall, float crossblockMaxDis, const struct FVector& hitpoint, class AActor* WindowActor, const struct FRotator& MoveDir, float ArrivalHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PawnVaultServerCPP");

	ASTExtraBaseCharacter_PawnVaultServerCPP_Params params;
	params.dis = dis;
	params.Height = Height;
	params.Length = Length;
	params.VaultKey = VaultKey;
	params.startPos = startPos;
	params.checkActor = checkActor;
	params.crossblockMaxFall = crossblockMaxFall;
	params.crossblockMaxDis = crossblockMaxDis;
	params.hitpoint = hitpoint;
	params.WindowActor = WindowActor;
	params.MoveDir = MoveDir;
	params.ArrivalHeight = ArrivalHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PawnVaultServerBluePrint
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          dis                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Length                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 VaultKey                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 startPos                       (Parm, IsPlainOldData)
// class AActor*                  checkActor                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          crossblockMaxFall              (Parm, ZeroConstructor, IsPlainOldData)
// float                          crossblockMaxDis               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 hitpoint                       (Parm, IsPlainOldData)
// class AActor*                  WindowActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                MoveDir                        (Parm, IsPlainOldData)
// float                          ArrivalHeight                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::PawnVaultServerBluePrint(float dis, float Height, float Length, const struct FString& VaultKey, const struct FVector& startPos, class AActor* checkActor, float crossblockMaxFall, float crossblockMaxDis, const struct FVector& hitpoint, class AActor* WindowActor, const struct FRotator& MoveDir, float ArrivalHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PawnVaultServerBluePrint");

	ASTExtraBaseCharacter_PawnVaultServerBluePrint_Params params;
	params.dis = dis;
	params.Height = Height;
	params.Length = Length;
	params.VaultKey = VaultKey;
	params.startPos = startPos;
	params.checkActor = checkActor;
	params.crossblockMaxFall = crossblockMaxFall;
	params.crossblockMaxDis = crossblockMaxDis;
	params.hitpoint = hitpoint;
	params.WindowActor = WindowActor;
	params.MoveDir = MoveDir;
	params.ArrivalHeight = ArrivalHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PawnVaultAllCPP
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                          dis                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Length                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 VaultKey                       (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// struct FVector                 startPos                       (Parm, IsPlainOldData)
// class AActor*                  checkActor                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          crossblockMaxFall              (Parm, ZeroConstructor, IsPlainOldData)
// float                          crossblockMaxDis               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 hitpoint                       (Parm, IsPlainOldData)
// struct FRotator                MoveDir                        (Parm, IsPlainOldData)
// float                          ArrivalHeight                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::PawnVaultAllCPP(float dis, float Height, float Length, const struct FString& VaultKey, const struct FVector& startPos, class AActor* checkActor, float crossblockMaxFall, float crossblockMaxDis, const struct FVector& hitpoint, const struct FRotator& MoveDir, float ArrivalHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PawnVaultAllCPP");

	ASTExtraBaseCharacter_PawnVaultAllCPP_Params params;
	params.dis = dis;
	params.Height = Height;
	params.Length = Length;
	params.VaultKey = VaultKey;
	params.startPos = startPos;
	params.checkActor = checkActor;
	params.crossblockMaxFall = crossblockMaxFall;
	params.crossblockMaxDis = crossblockMaxDis;
	params.hitpoint = hitpoint;
	params.MoveDir = MoveDir;
	params.ArrivalHeight = ArrivalHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.PawnVaultAllBluePrint
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          dis                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          Length                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 VaultKey                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 startPos                       (Parm, IsPlainOldData)
// class AActor*                  checkActor                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          crossblockMaxFall              (Parm, ZeroConstructor, IsPlainOldData)
// float                          crossblockMaxDis               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 hitpoint                       (Parm, IsPlainOldData)
// struct FRotator                MoveDir                        (Parm, IsPlainOldData)
// float                          ArrivalHeight                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::PawnVaultAllBluePrint(float dis, float Height, float Length, const struct FString& VaultKey, const struct FVector& startPos, class AActor* checkActor, float crossblockMaxFall, float crossblockMaxDis, const struct FVector& hitpoint, const struct FRotator& MoveDir, float ArrivalHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.PawnVaultAllBluePrint");

	ASTExtraBaseCharacter_PawnVaultAllBluePrint_Params params;
	params.dis = dis;
	params.Height = Height;
	params.Length = Length;
	params.VaultKey = VaultKey;
	params.startPos = startPos;
	params.checkActor = checkActor;
	params.crossblockMaxFall = crossblockMaxFall;
	params.crossblockMaxDis = crossblockMaxDis;
	params.hitpoint = hitpoint;
	params.MoveDir = MoveDir;
	params.ArrivalHeight = ArrivalHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnUserQualitySettingChanged
// (Final, Native, Public)
// Parameters:
// int                            renderlevel                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnUserQualitySettingChanged(int renderlevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnUserQualitySettingChanged");

	ASTExtraBaseCharacter_OnUserQualitySettingChanged_Params params;
	params.renderlevel = renderlevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnUnEquipWeapon
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::OnUnEquipWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnUnEquipWeapon");

	ASTExtraBaseCharacter_OnUnEquipWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnThrowableDetachedFromHand
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::OnThrowableDetachedFromHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnThrowableDetachedFromHand");

	ASTExtraBaseCharacter_OnThrowableDetachedFromHand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnStopFreeCamera
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::OnStopFreeCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnStopFreeCamera");

	ASTExtraBaseCharacter_OnStopFreeCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnStopFire
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::OnStopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnStopFire");

	ASTExtraBaseCharacter_OnStopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnStateLeave
// (Final, Native, Public)
// Parameters:
// EPawnState                     EnteredState                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnStateLeave(EPawnState EnteredState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnStateLeave");

	ASTExtraBaseCharacter_OnStateLeave_Params params;
	params.EnteredState = EnteredState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnStateEnter
// (Final, Native, Public)
// Parameters:
// EPawnState                     EnteredState                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnStateEnter(EPawnState EnteredState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnStateEnter");

	ASTExtraBaseCharacter_OnStateEnter_Params params;
	params.EnteredState = EnteredState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnStartFreeCamera
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::OnStartFreeCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnStartFreeCamera");

	ASTExtraBaseCharacter_OnStartFreeCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnStartFire
// (Event, Public, BlueprintEvent)
// Parameters:
// EGunFireMode                   isAuto                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnStartFire(EGunFireMode isAuto)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnStartFire");

	ASTExtraBaseCharacter_OnStartFire_Params params;
	params.isAuto = isAuto;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnShowName
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           _IsShow                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 _Name                          (Parm, ZeroConstructor)

void ASTExtraBaseCharacter::OnShowName(bool _IsShow, const struct FString& _Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnShowName");

	ASTExtraBaseCharacter_OnShowName_Params params;
	params._IsShow = _IsShow;
	params._Name = _Name;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnScopeTempTransformToFPP
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::OnScopeTempTransformToFPP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnScopeTempTransformToFPP");

	ASTExtraBaseCharacter_OnScopeTempTransformToFPP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnScopeTempTransformFromFPP
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::OnScopeTempTransformFromFPP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnScopeTempTransformFromFPP");

	ASTExtraBaseCharacter_OnScopeTempTransformFromFPP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnScopeInterrupt
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bTeleport                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnScopeInterrupt(bool bTeleport)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnScopeInterrupt");

	ASTExtraBaseCharacter_OnScopeInterrupt_Params params;
	params.bTeleport = bTeleport;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnScopeIn
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bTeleport                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnScopeIn(bool bTeleport)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnScopeIn");

	ASTExtraBaseCharacter_OnScopeIn_Params params;
	params.bTeleport = bTeleport;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_VehicleSeatIdx
// (Final, Native, Protected)

void ASTExtraBaseCharacter::OnRep_VehicleSeatIdx()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_VehicleSeatIdx");

	ASTExtraBaseCharacter_OnRep_VehicleSeatIdx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_ThrowGrenadeMode
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_ThrowGrenadeMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_ThrowGrenadeMode");

	ASTExtraBaseCharacter_OnRep_ThrowGrenadeMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_StatusChanged
// (Final, Native, Protected)
// Parameters:
// TEnumAsByte<ECharacterHealthStatus> prevStatus                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnRep_StatusChanged(TEnumAsByte<ECharacterHealthStatus> prevStatus)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_StatusChanged");

	ASTExtraBaseCharacter_OnRep_StatusChanged_Params params;
	params.prevStatus = prevStatus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_ReplicatedParachuteState
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_ReplicatedParachuteState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_ReplicatedParachuteState");

	ASTExtraBaseCharacter_OnRep_ReplicatedParachuteState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_ReplicatedMoveState
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_ReplicatedMoveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_ReplicatedMoveState");

	ASTExtraBaseCharacter_OnRep_ReplicatedMoveState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_ReplicatedIsStartParachute
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_ReplicatedIsStartParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_ReplicatedIsStartParachute");

	ASTExtraBaseCharacter_OnRep_ReplicatedIsStartParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_PoseStateNotify
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<ESTEPoseState>     LastState                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnRep_PoseStateNotify(TEnumAsByte<ESTEPoseState> LastState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_PoseStateNotify");

	ASTExtraBaseCharacter_OnRep_PoseStateNotify_Params params;
	params.LastState = LastState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_PlayerKey
// (Final, Native, Private)

void ASTExtraBaseCharacter::OnRep_PlayerKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_PlayerKey");

	ASTExtraBaseCharacter_OnRep_PlayerKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_PeekHasCollision
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_PeekHasCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_PeekHasCollision");

	ASTExtraBaseCharacter_OnRep_PeekHasCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_ParseEmoteSlotNames
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_ParseEmoteSlotNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_ParseEmoteSlotNames");

	ASTExtraBaseCharacter_OnRep_ParseEmoteSlotNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_MoneyNotify
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_MoneyNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_MoneyNotify");

	ASTExtraBaseCharacter_OnRep_MoneyNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_KillTipsNotify
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_KillTipsNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_KillTipsNotify");

	ASTExtraBaseCharacter_OnRep_KillTipsNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_IsRescueingOtherStatusChange
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_IsRescueingOtherStatusChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_IsRescueingOtherStatusChange");

	ASTExtraBaseCharacter_OnRep_IsRescueingOtherStatusChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_IsFPPChanged
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::OnRep_IsFPPChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_IsFPPChanged");

	ASTExtraBaseCharacter_OnRep_IsFPPChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_IsBeingRescuedStatusChange
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_IsBeingRescuedStatusChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_IsBeingRescuedStatusChange");

	ASTExtraBaseCharacter_OnRep_IsBeingRescuedStatusChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_InitialItemList
// (Native, Public)

void ASTExtraBaseCharacter::OnRep_InitialItemList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_InitialItemList");

	ASTExtraBaseCharacter_OnRep_InitialItemList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_HealthPredict
// (Final, Native, Protected)

void ASTExtraBaseCharacter::OnRep_HealthPredict()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_HealthPredict");

	ASTExtraBaseCharacter_OnRep_HealthPredict_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_Health
// (Final, Native, Protected)

void ASTExtraBaseCharacter::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_Health");

	ASTExtraBaseCharacter_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_HandFolderRatio
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_HandFolderRatio()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_HandFolderRatio");

	ASTExtraBaseCharacter_OnRep_HandFolderRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_FollowState
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_FollowState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_FollowState");

	ASTExtraBaseCharacter_OnRep_FollowState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_EnergyChange
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_EnergyChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_EnergyChange");

	ASTExtraBaseCharacter_OnRep_EnergyChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_CurrentVehicle
// (Final, Native, Public)
// Parameters:
// class ASTExtraVehicleBase*     LastVehicle                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnRep_CurrentVehicle(class ASTExtraVehicleBase* LastVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_CurrentVehicle");

	ASTExtraBaseCharacter_OnRep_CurrentVehicle_Params params;
	params.LastVehicle = LastVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_CurrentStates
// (Final, Native, Private)
// Parameters:
// int                            prevStates                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnRep_CurrentStates(int prevStates)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_CurrentStates");

	ASTExtraBaseCharacter_OnRep_CurrentStates_Params params;
	params.prevStates = prevStates;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_CurrentReticleShapeIndex
// (Final, Native, Private)

void ASTExtraBaseCharacter::OnRep_CurrentReticleShapeIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_CurrentReticleShapeIndex");

	ASTExtraBaseCharacter_OnRep_CurrentReticleShapeIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_CurrentReticleBrightness
// (Final, Native, Private)

void ASTExtraBaseCharacter::OnRep_CurrentReticleBrightness()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_CurrentReticleBrightness");

	ASTExtraBaseCharacter_OnRep_CurrentReticleBrightness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_BreathAmmountChange
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_BreathAmmountChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_BreathAmmountChange");

	ASTExtraBaseCharacter_OnRep_BreathAmmountChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_AKEventNotify
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnRep_AKEventNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_AKEventNotify");

	ASTExtraBaseCharacter_OnRep_AKEventNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_AimOffsets
// (Final, Native, Protected)
// Parameters:
// struct FVector_NetQuantizeNormal PrevAimOffsets                 (Parm)

void ASTExtraBaseCharacter::OnRep_AimOffsets(const struct FVector_NetQuantizeNormal& PrevAimOffsets)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnRep_AimOffsets");

	ASTExtraBaseCharacter_OnRep_AimOffsets_Params params;
	params.PrevAimOffsets = PrevAimOffsets;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnReleasedWalk
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::OnReleasedWalk()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnReleasedWalk");

	ASTExtraBaseCharacter_OnReleasedWalk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnReleasedSprint
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::OnReleasedSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnReleasedSprint");

	ASTExtraBaseCharacter_OnReleasedSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnReconnect
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::OnReconnect()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnReconnect");

	ASTExtraBaseCharacter_OnReconnect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnPressedWalk
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::OnPressedWalk()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnPressedWalk");

	ASTExtraBaseCharacter_OnPressedWalk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnPressedSprint
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::OnPressedSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnPressedSprint");

	ASTExtraBaseCharacter_OnPressedSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnPoseStateChange
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<ESTEPoseState>     LastState                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESTEPoseState>     CurState                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnPoseStateChange(TEnumAsByte<ESTEPoseState> LastState, TEnumAsByte<ESTEPoseState> CurState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnPoseStateChange");

	ASTExtraBaseCharacter_OnPoseStateChange_Params params;
	params.LastState = LastState;
	params.CurState = CurState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnParachutingLeaderChange
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnParachutingLeaderChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnParachutingLeaderChange");

	ASTExtraBaseCharacter_OnParachutingLeaderChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnNotifyHurt
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::OnNotifyHurt()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnNotifyHurt");

	ASTExtraBaseCharacter_OnNotifyHurt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnHoldBreathReleased
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::OnHoldBreathReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnHoldBreathReleased");

	ASTExtraBaseCharacter_OnHoldBreathReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnHoldBreathPressed
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::OnHoldBreathPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnHoldBreathPressed");

	ASTExtraBaseCharacter_OnHoldBreathPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnFollowStateChange
// (Final, Native, Public)

void ASTExtraBaseCharacter::OnFollowStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnFollowStateChange");

	ASTExtraBaseCharacter_OnFollowStateChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnEquipWeapon
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::OnEquipWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnEquipWeapon");

	ASTExtraBaseCharacter_OnEquipWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnCurEquipedShootWeaponChangeState
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EFreshWeaponStateType> State                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::OnCurEquipedShootWeaponChangeState(TEnumAsByte<EFreshWeaponStateType> State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnCurEquipedShootWeaponChangeState");

	ASTExtraBaseCharacter_OnCurEquipedShootWeaponChangeState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnBPMoneyChange
// (Event, Protected, BlueprintEvent)

void ASTExtraBaseCharacter::OnBPMoneyChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnBPMoneyChange");

	ASTExtraBaseCharacter_OnBPMoneyChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnBPHealthChange
// (Event, Protected, BlueprintEvent)

void ASTExtraBaseCharacter::OnBPHealthChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnBPHealthChange");

	ASTExtraBaseCharacter_OnBPHealthChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnBeforeGetUp
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::OnBeforeGetUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnBeforeGetUp");

	ASTExtraBaseCharacter_OnBeforeGetUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.OnActorHitHandle
// (Final, Native, Private, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ASTExtraBaseCharacter::OnActorHitHandle(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.OnActorHitHandle");

	ASTExtraBaseCharacter_OnActorHitHandle_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.NM_SetPeekState
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsLeft                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::NM_SetPeekState(bool Enable, bool IsLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.NM_SetPeekState");

	ASTExtraBaseCharacter_NM_SetPeekState_Params params;
	params.Enable = Enable;
	params.IsLeft = IsLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.NeedWeaponReplacement
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EWeaponSlotType>   InSlotType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::NeedWeaponReplacement(TEnumAsByte<EWeaponSlotType> InSlotType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.NeedWeaponReplacement");

	ASTExtraBaseCharacter_NeedWeaponReplacement_Params params;
	params.InSlotType = InSlotType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.NeedAvatarReplacement
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EAvatarSlotType                InSlotType                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::NeedAvatarReplacement(EAvatarSlotType InSlotType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.NeedAvatarReplacement");

	ASTExtraBaseCharacter_NeedAvatarReplacement_Params params;
	params.InSlotType = InSlotType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.MulticastStartPlayEmote
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::MulticastStartPlayEmote(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.MulticastStartPlayEmote");

	ASTExtraBaseCharacter_MulticastStartPlayEmote_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.MulticastSetFireMode
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// EGunFireMode                   NewFireMode                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::MulticastSetFireMode(EGunFireMode NewFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.MulticastSetFireMode");

	ASTExtraBaseCharacter_MulticastSetFireMode_Params params;
	params.NewFireMode = NewFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.MulticastInteruptPlayEmoteOnServer
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::MulticastInteruptPlayEmoteOnServer(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.MulticastInteruptPlayEmoteOnServer");

	ASTExtraBaseCharacter_MulticastInteruptPlayEmoteOnServer_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.MulticastInteruptPlayEmote
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::MulticastInteruptPlayEmote(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.MulticastInteruptPlayEmote");

	ASTExtraBaseCharacter_MulticastInteruptPlayEmote_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.MeleeServer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void ASTExtraBaseCharacter::MeleeServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.MeleeServer");

	ASTExtraBaseCharacter_MeleeServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.MeleeReleased
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::MeleeReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.MeleeReleased");

	ASTExtraBaseCharacter_MeleeReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.MeleeLocal
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::MeleeLocal()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.MeleeLocal");

	ASTExtraBaseCharacter_MeleeLocal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.MeleeBroadcastOtherClients
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ASTExtraBaseCharacter::MeleeBroadcastOtherClients()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.MeleeBroadcastOtherClients");

	ASTExtraBaseCharacter_MeleeBroadcastOtherClients_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.Melee
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsForCE                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::Melee(bool IsForCE)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.Melee");

	ASTExtraBaseCharacter_Melee_Params params;
	params.IsForCE = IsForCE;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.LogWeaponsDataInWeaponManagerAndBackpack
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::LogWeaponsDataInWeaponManagerAndBackpack()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.LogWeaponsDataInWeaponManagerAndBackpack");

	ASTExtraBaseCharacter_LogWeaponsDataInWeaponManagerAndBackpack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.LocalUnEquipWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraWeapon*          Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::LocalUnEquipWeapon(class ASTExtraWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.LocalUnEquipWeapon");

	ASTExtraBaseCharacter_LocalUnEquipWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.LocalSwitchPersonPerspective
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsNewFPP                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::LocalSwitchPersonPerspective(bool IsNewFPP)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.LocalSwitchPersonPerspective");

	ASTExtraBaseCharacter_LocalSwitchPersonPerspective_Params params;
	params.IsNewFPP = IsNewFPP;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.LocalStartPlayEmote
// (Final, Native, Public)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::LocalStartPlayEmote(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.LocalStartPlayEmote");

	ASTExtraBaseCharacter_LocalStartPlayEmote_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.LocalInteruptPlayEmote
// (Final, Native, Public)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::LocalInteruptPlayEmote(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.LocalInteruptPlayEmote");

	ASTExtraBaseCharacter_LocalInteruptPlayEmote_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.LocalEquipWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraWeapon*          Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::LocalEquipWeapon(class ASTExtraWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.LocalEquipWeapon");

	ASTExtraBaseCharacter_LocalEquipWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.LeaveState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPawnState                     State                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::LeaveState(EPawnState State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.LeaveState");

	ASTExtraBaseCharacter_LeaveState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.LeaveServerState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EPawnState                     State                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::LeaveServerState(EPawnState State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.LeaveServerState");

	ASTExtraBaseCharacter_LeaveServerState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsUsingGrenade
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsUsingGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsUsingGrenade");

	ASTExtraBaseCharacter_IsUsingGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsUsingFreeCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsUsingFreeCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsUsingFreeCamera");

	ASTExtraBaseCharacter_IsUsingFreeCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsUpperCollision
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsUpperCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsUpperCollision");

	ASTExtraBaseCharacter_IsUpperCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsUnderwater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsUnderwater()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsUnderwater");

	ASTExtraBaseCharacter_IsUnderwater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsTargeting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsTargeting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsTargeting");

	ASTExtraBaseCharacter_IsTargeting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsSameTeamWithPlayerState
// (Final, Native, Public)
// Parameters:
// class APlayerState*            otherPS                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsSameTeamWithPlayerState(class APlayerState* otherPS)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsSameTeamWithPlayerState");

	ASTExtraBaseCharacter_IsSameTeamWithPlayerState_Params params;
	params.otherPS = otherPS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsSameTeam
// (Final, Native, Public)
// Parameters:
// class APawn*                   Other                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsSameTeam(class APawn* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsSameTeam");

	ASTExtraBaseCharacter_IsSameTeam_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsProneMove
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsProneMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsProneMove");

	ASTExtraBaseCharacter_IsProneMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsPreesedWalking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsPreesedWalking()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsPreesedWalking");

	ASTExtraBaseCharacter_IsPreesedWalking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsPreesedSprinting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsPreesedSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsPreesedSprinting");

	ASTExtraBaseCharacter_IsPreesedSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsOnVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsOnVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsOnVehicle");

	ASTExtraBaseCharacter_IsOnVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsNowUpWater
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsNowUpWater()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsNowUpWater");

	ASTExtraBaseCharacter_IsNowUpWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsNearDeath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsNearDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsNearDeath");

	ASTExtraBaseCharacter_IsNearDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsLookingBrightAdjustableReticle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsLookingBrightAdjustableReticle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsLookingBrightAdjustableReticle");

	ASTExtraBaseCharacter_IsLookingBrightAdjustableReticle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsLocalViewed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsLocalViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsLocalViewed");

	ASTExtraBaseCharacter_IsLocalViewed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsInFlyingTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsInFlyingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsInFlyingTeam");

	ASTExtraBaseCharacter_IsInFlyingTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsInEditor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsInEditor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsInEditor");

	ASTExtraBaseCharacter_IsInEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsInConsumableUsingState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsInConsumableUsingState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsInConsumableUsingState");

	ASTExtraBaseCharacter_IsInConsumableUsingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsHealthyAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsHealthyAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsHealthyAlive");

	ASTExtraBaseCharacter_IsHealthyAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsHandleInFold
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsHandleInFold()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsHandleInFold");

	ASTExtraBaseCharacter_IsHandleInFold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsGroggying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsGroggying()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsGroggying");

	ASTExtraBaseCharacter_IsGroggying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsForceRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsForceRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsForceRotation");

	ASTExtraBaseCharacter_IsForceRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsFloating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsFloating()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsFloating");

	ASTExtraBaseCharacter_IsFloating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsFirstPerson
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsFirstPerson()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsFirstPerson");

	ASTExtraBaseCharacter_IsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsFallingFromHighAltitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsFallingFromHighAltitude()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsFallingFromHighAltitude");

	ASTExtraBaseCharacter_IsFallingFromHighAltitude_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsDeathPlayViewTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsDeathPlayViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsDeathPlayViewTarget");

	ASTExtraBaseCharacter_IsDeathPlayViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsCharacterSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsCharacterSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsCharacterSprinting");

	ASTExtraBaseCharacter_IsCharacterSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsBoxItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InValidAngle                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsBoxItem(float InValidAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsBoxItem");

	ASTExtraBaseCharacter_IsBoxItem_Params params;
	params.InValidAngle = InValidAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsAllowScopeIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsAllowScopeIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsAllowScopeIn");

	ASTExtraBaseCharacter_IsAllowScopeIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsAlive");

	ASTExtraBaseCharacter_IsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsAbleGrenadeByType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EGrenadeType>      grenadeType                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsAbleGrenadeByType(TEnumAsByte<EGrenadeType> grenadeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsAbleGrenadeByType");

	ASTExtraBaseCharacter_IsAbleGrenadeByType_Params params;
	params.grenadeType = grenadeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.IsAbleFragGrenade
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::IsAbleFragGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.IsAbleFragGrenade");

	ASTExtraBaseCharacter_IsAbleFragGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.InviteTeammate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FString>         Names                          (Parm, ZeroConstructor)

void ASTExtraBaseCharacter::InviteTeammate(TArray<struct FString> Names)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.InviteTeammate");

	ASTExtraBaseCharacter_InviteTeammate_Params params;
	params.Names = Names;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.InterruptCurrentEmote
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::InterruptCurrentEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.InterruptCurrentEmote");

	ASTExtraBaseCharacter_InterruptCurrentEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.InterruptConsumeableByVehicleAction
// (Final, Native, Public)

void ASTExtraBaseCharacter::InterruptConsumeableByVehicleAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.InterruptConsumeableByVehicleAction");

	ASTExtraBaseCharacter_InterruptConsumeableByVehicleAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.InsertDelayStateRelation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPawnState                     OldState                       (Parm, ZeroConstructor, IsPlainOldData)
// EPawnState                     NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::InsertDelayStateRelation(EPawnState OldState, EPawnState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.InsertDelayStateRelation");

	ASTExtraBaseCharacter_InsertDelayStateRelation_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.InitBodyBoneMap
// (Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::InitBodyBoneMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.InitBodyBoneMap");

	ASTExtraBaseCharacter_InitBodyBoneMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.HidePlayerMagOnGunReload
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::HidePlayerMagOnGunReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.HidePlayerMagOnGunReload");

	ASTExtraBaseCharacter_HidePlayerMagOnGunReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.HasState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPawnState                     State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::HasState(EPawnState State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.HasState");

	ASTExtraBaseCharacter_HasState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.HasBuff
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   BuffName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::HasBuff(const struct FName& BuffName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.HasBuff");

	ASTExtraBaseCharacter_HasBuff_Params params;
	params.BuffName = BuffName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.HandleWeaponOnShoot
// (Final, Native, Public)

void ASTExtraBaseCharacter::HandleWeaponOnShoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.HandleWeaponOnShoot");

	ASTExtraBaseCharacter_HandleWeaponOnShoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.HandlePlayOperateItemSoundOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 BankName                       (Parm, ZeroConstructor)
// struct FString                 SoundName                      (Parm, ZeroConstructor)

void ASTExtraBaseCharacter::HandlePlayOperateItemSoundOnServer(const struct FString& BankName, const struct FString& SoundName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.HandlePlayOperateItemSoundOnServer");

	ASTExtraBaseCharacter_HandlePlayOperateItemSoundOnServer_Params params;
	params.BankName = BankName;
	params.SoundName = SoundName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.HandlePlayerPoseChanged
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<ESTEPoseState>     LastPose                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESTEPoseState>     NewPose                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::HandlePlayerPoseChanged(TEnumAsByte<ESTEPoseState> LastPose, TEnumAsByte<ESTEPoseState> NewPose)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.HandlePlayerPoseChanged");

	ASTExtraBaseCharacter_HandlePlayerPoseChanged_Params params;
	params.LastPose = LastPose;
	params.NewPose = NewPose;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.HandlePlayerPickUpActor
// (Final, Native, Public)
// Parameters:
// class AActor*                  WrapperActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          TargetZLoc                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::HandlePlayerPickUpActor(class AActor* WrapperActor, float TargetZLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.HandlePlayerPickUpActor");

	ASTExtraBaseCharacter_HandlePlayerPickUpActor_Params params;
	params.WrapperActor = WrapperActor;
	params.TargetZLoc = TargetZLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.HandleOnCharAnimLoadingFinished
// (Final, Native, Public)

void ASTExtraBaseCharacter::HandleOnCharAnimLoadingFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.HandleOnCharAnimLoadingFinished");

	ASTExtraBaseCharacter_HandleOnCharAnimLoadingFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.HandleConsumeItemSkillBreak
// (Final, Native, Public)

void ASTExtraBaseCharacter::HandleConsumeItemSkillBreak()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.HandleConsumeItemSkillBreak");

	ASTExtraBaseCharacter_HandleConsumeItemSkillBreak_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.HandleAutoSwitchWeaponDelay
// (Final, Native, Public)

void ASTExtraBaseCharacter::HandleAutoSwitchWeaponDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.HandleAutoSwitchWeaponDelay");

	ASTExtraBaseCharacter_HandleAutoSwitchWeaponDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GrenadeBackToWeaponServerCall
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ASTExtraBaseCharacter::GrenadeBackToWeaponServerCall()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GrenadeBackToWeaponServerCall");

	ASTExtraBaseCharacter_GrenadeBackToWeaponServerCall_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GMShowName
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::GMShowName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GMShowName");

	ASTExtraBaseCharacter_GMShowName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetWeaponManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWeaponManagerComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWeaponManagerComponent* ASTExtraBaseCharacter::GetWeaponManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetWeaponManager");

	ASTExtraBaseCharacter_GetWeaponManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetWeaponInertiaRecoil
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData)

struct FRotator ASTExtraBaseCharacter::GetWeaponInertiaRecoil()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetWeaponInertiaRecoil");

	ASTExtraBaseCharacter_GetWeaponInertiaRecoil_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetWeaponInertia
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, IsPlainOldData)

struct FRotator ASTExtraBaseCharacter::GetWeaponInertia()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetWeaponInertia");

	ASTExtraBaseCharacter_GetWeaponInertia_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetWeaponGunCollisionAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::GetWeaponGunCollisionAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetWeaponGunCollisionAlpha");

	ASTExtraBaseCharacter_GetWeaponGunCollisionAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetViewRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ASTExtraBaseCharacter::GetViewRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetViewRotation");

	ASTExtraBaseCharacter_GetViewRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetValueLimitForHealthPredict
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::GetValueLimitForHealthPredict()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetValueLimitForHealthPredict");

	ASTExtraBaseCharacter_GetValueLimitForHealthPredict_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetTslPlayerStateSafety
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ATslLPCPlayerState*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ATslLPCPlayerState* ASTExtraBaseCharacter::GetTslPlayerStateSafety()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetTslPlayerStateSafety");

	ASTExtraBaseCharacter_GetTslPlayerStateSafety_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetToggleFiringModeAnimTypeByFireMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunFireMode                   FireMode                       (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterAnimType             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECharacterAnimType ASTExtraBaseCharacter::GetToggleFiringModeAnimTypeByFireMode(EGunFireMode FireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetToggleFiringModeAnimTypeByFireMode");

	ASTExtraBaseCharacter_GetToggleFiringModeAnimTypeByFireMode_Params params;
	params.FireMode = FireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetThrowGrenadeMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EThrowGrenadeMode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EThrowGrenadeMode> ASTExtraBaseCharacter::GetThrowGrenadeMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetThrowGrenadeMode");

	ASTExtraBaseCharacter_GetThrowGrenadeMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetTeammateIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Teammate                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraBaseCharacter::GetTeammateIndex(class ASTExtraBaseCharacter* Teammate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetTeammateIndex");

	ASTExtraBaseCharacter_GetTeammateIndex_Params params;
	params.Teammate = Teammate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetShootWeaponNameByWeapon
// (Event, Protected, BlueprintEvent)
// Parameters:
// int                            ItemDefineID                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASTExtraBaseCharacter::GetShootWeaponNameByWeapon(int ItemDefineID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetShootWeaponNameByWeapon");

	ASTExtraBaseCharacter_GetShootWeaponNameByWeapon_Params params;
	params.ItemDefineID = ItemDefineID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetRandomPutDownLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                          OverrideFindPutDownPointZThreshold (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraBaseCharacter::GetRandomPutDownLocation(float OverrideFindPutDownPointZThreshold)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetRandomPutDownLocation");

	ASTExtraBaseCharacter_GetRandomPutDownLocation_Params params;
	params.OverrideFindPutDownPointZThreshold = OverrideFindPutDownPointZThreshold;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerWeaponFireMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EGunFireMode                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EGunFireMode ASTExtraBaseCharacter::GetPlayerWeaponFireMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerWeaponFireMode");

	ASTExtraBaseCharacter_GetPlayerWeaponFireMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerWeaponEquipSlot
// (Final, Native, Public)
// Parameters:
// ESurviveWeaponPropSlot         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESurviveWeaponPropSlot ASTExtraBaseCharacter::GetPlayerWeaponEquipSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerWeaponEquipSlot");

	ASTExtraBaseCharacter_GetPlayerWeaponEquipSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerVehAnimParam
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FAnimVehParamList       ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FAnimVehParamList ASTExtraBaseCharacter::GetPlayerVehAnimParam(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerVehAnimParam");

	ASTExtraBaseCharacter_GetPlayerVehAnimParam_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerVehAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FPlayerVehAnimList      ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FPlayerVehAnimList ASTExtraBaseCharacter::GetPlayerVehAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerVehAnimation");

	ASTExtraBaseCharacter_GetPlayerVehAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerTeamIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraBaseCharacter::GetPlayerTeamIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerTeamIndex");

	ASTExtraBaseCharacter_GetPlayerTeamIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerStateSafety
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraPlayerState*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerState* ASTExtraBaseCharacter::GetPlayerStateSafety()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerStateSafety");

	ASTExtraBaseCharacter_GetPlayerStateSafety_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerNameSafety
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASTExtraBaseCharacter::GetPlayerNameSafety()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerNameSafety");

	ASTExtraBaseCharacter_GetPlayerNameSafety_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerJumpType
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<ECharacterJumpType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ECharacterJumpType> ASTExtraBaseCharacter::GetPlayerJumpType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerJumpType");

	ASTExtraBaseCharacter_GetPlayerJumpType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerControllerSafety
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerController* ASTExtraBaseCharacter::GetPlayerControllerSafety()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerControllerSafety");

	ASTExtraBaseCharacter_GetPlayerControllerSafety_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerControllerInDeathReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerController* ASTExtraBaseCharacter::GetPlayerControllerInDeathReplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerControllerInDeathReplay");

	ASTExtraBaseCharacter_GetPlayerControllerInDeathReplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerAnimParam
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FAnimParamList          ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FAnimParamList ASTExtraBaseCharacter::GetPlayerAnimParam(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerAnimParam");

	ASTExtraBaseCharacter_GetPlayerAnimParam_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerAnimationByEventType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ECharAnimEventType> AnimEventType                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FPlayerAnimData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPlayerAnimData ASTExtraBaseCharacter::GetPlayerAnimationByEventType(TEnumAsByte<ECharAnimEventType> AnimEventType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerAnimationByEventType");

	ASTExtraBaseCharacter_GetPlayerAnimationByEventType_Params params;
	params.AnimEventType = AnimEventType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FPlayerAnimList         ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FPlayerAnimList ASTExtraBaseCharacter::GetPlayerAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetPlayerAnimation");

	ASTExtraBaseCharacter_GetPlayerAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetNextGrenadeType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EGrenadeType>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EGrenadeType> ASTExtraBaseCharacter::GetNextGrenadeType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetNextGrenadeType");

	ASTExtraBaseCharacter_GetNextGrenadeType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetLeanRightAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::GetLeanRightAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetLeanRightAlpha");

	ASTExtraBaseCharacter_GetLeanRightAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetLeanLeftAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::GetLeanLeftAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetLeanLeftAlpha");

	ASTExtraBaseCharacter_GetLeanLeftAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetLatestInviter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* ASTExtraBaseCharacter::GetLatestInviter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetLatestInviter");

	ASTExtraBaseCharacter_GetLatestInviter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetLastMoveRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ASTExtraBaseCharacter::GetLastMoveRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetLastMoveRotation");

	ASTExtraBaseCharacter_GetLastMoveRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetIsPlayingEmote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::GetIsPlayingEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetIsPlayingEmote");

	ASTExtraBaseCharacter_GetIsPlayingEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetInteractableGroundItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InValidAngle                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FSearchedPickUpItemResult ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSearchedPickUpItemResult ASTExtraBaseCharacter::GetInteractableGroundItem(float InValidAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetInteractableGroundItem");

	ASTExtraBaseCharacter_GetInteractableGroundItem_Params params;
	params.InValidAngle = InValidAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetHitBoxByState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPawnState                     InPoseState                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPrimitiveComponent* ASTExtraBaseCharacter::GetHitBoxByState(EPawnState InPoseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetHitBoxByState");

	ASTExtraBaseCharacter_GetHitBoxByState_Params params;
	params.InPoseState = InPoseState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetHitBodyTypeByHitPos
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InHitPos                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// EAvatarDamagePosition          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAvatarDamagePosition ASTExtraBaseCharacter::GetHitBodyTypeByHitPos(const struct FVector& InHitPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetHitBodyTypeByHitPos");

	ASTExtraBaseCharacter_GetHitBodyTypeByHitPos_Params params;
	params.InHitPos = InHitPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetHitBodyTypeByBoneName
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 InBoneName                     (Parm, ZeroConstructor)
// EAvatarDamagePosition          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAvatarDamagePosition ASTExtraBaseCharacter::GetHitBodyTypeByBoneName(const struct FString& InBoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetHitBodyTypeByBoneName");

	ASTExtraBaseCharacter_GetHitBodyTypeByBoneName_Params params;
	params.InBoneName = InBoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetHitBodyType
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InHitPos                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FString                 InBoneName                     (Parm, ZeroConstructor)
// EAvatarDamagePosition          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAvatarDamagePosition ASTExtraBaseCharacter::GetHitBodyType(const struct FVector& InHitPos, const struct FString& InBoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetHitBodyType");

	ASTExtraBaseCharacter_GetHitBodyType_Params params;
	params.InHitPos = InHitPos;
	params.InBoneName = InBoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetHeadLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// bool                           bUseHeadBone                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraBaseCharacter::GetHeadLocation(bool bUseHeadBone)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetHeadLocation");

	ASTExtraBaseCharacter_GetHeadLocation_Params params;
	params.bUseHeadBone = bUseHeadBone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetGrenadeTypeByItemID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ItemID                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EGrenadeType>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EGrenadeType> ASTExtraBaseCharacter::GetGrenadeTypeByItemID(int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetGrenadeTypeByItemID");

	ASTExtraBaseCharacter_GetGrenadeTypeByItemID_Params params;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetGrenadeNameByGrenadeType
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EGrenadeType>      grenadeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASTExtraBaseCharacter::GetGrenadeNameByGrenadeType(TEnumAsByte<EGrenadeType> grenadeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetGrenadeNameByGrenadeType");

	ASTExtraBaseCharacter_GetGrenadeNameByGrenadeType_Params params;
	params.grenadeType = grenadeType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetGrenadeList
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FBattleItemData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FBattleItemData> ASTExtraBaseCharacter::GetGrenadeList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetGrenadeList");

	ASTExtraBaseCharacter_GetGrenadeList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetGrenadeBattleDataByGrenadeType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EGrenadeType>      grenadeType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FBattleItemData         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBattleItemData ASTExtraBaseCharacter::GetGrenadeBattleDataByGrenadeType(TEnumAsByte<EGrenadeType> grenadeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetGrenadeBattleDataByGrenadeType");

	ASTExtraBaseCharacter_GetGrenadeBattleDataByGrenadeType_Params params;
	params.grenadeType = grenadeType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetFollowerLocOffset
// (Final, Native, Public, HasDefaults)
// Parameters:
// class ASTExtraBaseCharacter*   follower                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraBaseCharacter::GetFollowerLocOffset(class ASTExtraBaseCharacter* follower)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetFollowerLocOffset");

	ASTExtraBaseCharacter_GetFollowerLocOffset_Params params;
	params.follower = follower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetFollowerLoc
// (Final, Native, Public, HasDefaults)
// Parameters:
// class ASTExtraBaseCharacter*   follower                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraBaseCharacter::GetFollowerLoc(class ASTExtraBaseCharacter* follower)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetFollowerLoc");

	ASTExtraBaseCharacter_GetFollowerLoc_Params params;
	params.follower = follower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraWeapon*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraWeapon* ASTExtraBaseCharacter::GetCurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentWeapon");

	ASTExtraBaseCharacter_GetCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentWaterSurfaceZ
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::GetCurrentWaterSurfaceZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentWaterSurfaceZ");

	ASTExtraBaseCharacter_GetCurrentWaterSurfaceZ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraVehicleBase*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraVehicleBase* ASTExtraBaseCharacter::GetCurrentVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentVehicle");

	ASTExtraBaseCharacter_GetCurrentVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentSway
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ASTExtraBaseCharacter::GetCurrentSway()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentSway");

	ASTExtraBaseCharacter_GetCurrentSway_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentSkillName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ASTExtraBaseCharacter::GetCurrentSkillName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentSkillName");

	ASTExtraBaseCharacter_GetCurrentSkillName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentShootWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraShootWeapon*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraShootWeapon* ASTExtraBaseCharacter::GetCurrentShootWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentShootWeapon");

	ASTExtraBaseCharacter_GetCurrentShootWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentReticleShapeIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraBaseCharacter::GetCurrentReticleShapeIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentReticleShapeIndex");

	ASTExtraBaseCharacter_GetCurrentReticleShapeIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentReticleBrightness
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::GetCurrentReticleBrightness()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentReticleBrightness");

	ASTExtraBaseCharacter_GetCurrentReticleBrightness_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentHeightFromWaterFloor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::GetCurrentHeightFromWaterFloor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentHeightFromWaterFloor");

	ASTExtraBaseCharacter_GetCurrentHeightFromWaterFloor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentGrenadeType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EGrenadeType>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EGrenadeType> ASTExtraBaseCharacter::GetCurrentGrenadeType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurrentGrenadeType");

	ASTExtraBaseCharacter_GetCurrentGrenadeType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurHitPartJugementType
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EHitPartJugementType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EHitPartJugementType> ASTExtraBaseCharacter::GetCurHitPartJugementType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCurHitPartJugementType");

	ASTExtraBaseCharacter_GetCurHitPartJugementType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCharacterXYPlaneVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::GetCharacterXYPlaneVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCharacterXYPlaneVelocity");

	ASTExtraBaseCharacter_GetCharacterXYPlaneVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCharacterEnergy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FCharacterEnergyData    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FCharacterEnergyData ASTExtraBaseCharacter::GetCharacterEnergy()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCharacterEnergy");

	ASTExtraBaseCharacter_GetCharacterEnergy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCharacterAttributeValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 AttrName                       (Parm, ZeroConstructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::GetCharacterAttributeValue(const struct FString& AttrName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCharacterAttributeValue");

	ASTExtraBaseCharacter_GetCharacterAttributeValue_Params params;
	params.AttrName = AttrName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetCachedControlRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ASTExtraBaseCharacter::GetCachedControlRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetCachedControlRotation");

	ASTExtraBaseCharacter_GetCachedControlRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetBreatheComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTslBreatheComp*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslBreatheComp* ASTExtraBaseCharacter::GetBreatheComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetBreatheComponent");

	ASTExtraBaseCharacter_GetBreatheComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetAimStateAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::GetAimStateAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetAimStateAlpha");

	ASTExtraBaseCharacter_GetAimStateAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetAimOffsets
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator ASTExtraBaseCharacter::GetAimOffsets()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetAimOffsets");

	ASTExtraBaseCharacter_GetAimOffsets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.GetActiveSpringArm
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USpringArmComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USpringArmComponent* ASTExtraBaseCharacter::GetActiveSpringArm()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.GetActiveSpringArm");

	ASTExtraBaseCharacter_GetActiveSpringArm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ForcePlayerUpdateAnimation
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::ForcePlayerUpdateAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ForcePlayerUpdateAnimation");

	ASTExtraBaseCharacter_ForcePlayerUpdateAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ForceCorrectClient
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                 Postion                        (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FRotator                Rotation                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 Velocity                       (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void ASTExtraBaseCharacter::ForceCorrectClient(const struct FVector& Postion, const struct FRotator& Rotation, const struct FVector& Velocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ForceCorrectClient");

	ASTExtraBaseCharacter_ForceCorrectClient_Params params;
	params.Postion = Postion;
	params.Rotation = Rotation;
	params.Velocity = Velocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.FollowTeammate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor)

void ASTExtraBaseCharacter::FollowTeammate(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.FollowTeammate");

	ASTExtraBaseCharacter_FollowTeammate_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.FillPlayerAnimRate
// (Final, Native, Public, HasOutParms, Const)
// Parameters:
// struct FPlayerAnimList         InAnimList                     (Parm, OutParm)

void ASTExtraBaseCharacter::FillPlayerAnimRate(struct FPlayerAnimList* InAnimList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.FillPlayerAnimRate");

	ASTExtraBaseCharacter_FillPlayerAnimRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (InAnimList != nullptr)
		*InAnimList = params.InAnimList;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ExtractDamageParams
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor*                  DamagetCauser                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            DamageType                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraBaseCharacter::ExtractDamageParams(const struct FDamageEvent& DamageEvent, class AActor* DamagetCauser, int* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ExtractDamageParams");

	ASTExtraBaseCharacter_ExtractDamageParams_Params params;
	params.DamageEvent = DamageEvent;
	params.DamagetCauser = DamagetCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (DamageType != nullptr)
		*DamageType = params.DamageType;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ExecFollowTeammate
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor)

void ASTExtraBaseCharacter::ExecFollowTeammate(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ExecFollowTeammate");

	ASTExtraBaseCharacter_ExecFollowTeammate_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.EquipWeaponFinish
// (Final, Native, Public)

void ASTExtraBaseCharacter::EquipWeaponFinish()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.EquipWeaponFinish");

	ASTExtraBaseCharacter_EquipWeaponFinish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.EquipWeapon
// (Final, Native, Public)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSwitchWeapon                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::EquipWeapon(ESurviveWeaponPropSlot Slot, bool bSwitchWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.EquipWeapon");

	ASTExtraBaseCharacter_EquipWeapon_Params params;
	params.Slot = Slot;
	params.bSwitchWeapon = bSwitchWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.EnterState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPawnState                     State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::EnterState(EPawnState State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.EnterState");

	ASTExtraBaseCharacter_EnterState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.EnterServerState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EPawnState                     State                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::EnterServerState(EPawnState State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.EnterServerState");

	ASTExtraBaseCharacter_EnterServerState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.EndCurrentEmote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            EmoteIndex                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::EndCurrentEmote(int EmoteIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.EndCurrentEmote");

	ASTExtraBaseCharacter_EndCurrentEmote_Params params;
	params.EmoteIndex = EmoteIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.EnableCurrentWeaponInfiniteBullets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::EnableCurrentWeaponInfiniteBullets(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.EnableCurrentWeaponInfiniteBullets");

	ASTExtraBaseCharacter_EnableCurrentWeaponInfiniteBullets_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.DisappearOnDeath
// (Final, Native, Private)

void ASTExtraBaseCharacter::DisappearOnDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.DisappearOnDeath");

	ASTExtraBaseCharacter_DisappearOnDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.DettachWeapon
// (Final, Native, Public)

void ASTExtraBaseCharacter::DettachWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.DettachWeapon");

	ASTExtraBaseCharacter_DettachWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.DestroyWeaponOnServerByPropSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESurviveWeaponPropSlot         Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnableBroadcast               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::DestroyWeaponOnServerByPropSlot(ESurviveWeaponPropSlot Slot, bool bEnableBroadcast)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.DestroyWeaponOnServerByPropSlot");

	ASTExtraBaseCharacter_DestroyWeaponOnServerByPropSlot_Params params;
	params.Slot = Slot;
	params.bEnableBroadcast = bEnableBroadcast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.DestroyWeaponOnServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   LogicSocket                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEnableBroadcast               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::DestroyWeaponOnServer(const struct FName& LogicSocket, bool bEnableBroadcast)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.DestroyWeaponOnServer");

	ASTExtraBaseCharacter_DestroyWeaponOnServer_Params params;
	params.LogicSocket = LogicSocket;
	params.bEnableBroadcast = bEnableBroadcast;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.DestroyWeaponInventoryOnServer
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::DestroyWeaponInventoryOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.DestroyWeaponInventoryOnServer");

	ASTExtraBaseCharacter_DestroyWeaponInventoryOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.DestroyGrenadeAndSwitchBackToPreviousWeaponOnServer
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::DestroyGrenadeAndSwitchBackToPreviousWeaponOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.DestroyGrenadeAndSwitchBackToPreviousWeaponOnServer");

	ASTExtraBaseCharacter_DestroyGrenadeAndSwitchBackToPreviousWeaponOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.DelayMoveEnd
// (Final, Native, Protected)

void ASTExtraBaseCharacter::DelayMoveEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.DelayMoveEnd");

	ASTExtraBaseCharacter_DelayMoveEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.DelayMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::DelayMove(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.DelayMove");

	ASTExtraBaseCharacter_DelayMove_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.DelayHidden
// (Final, Native, Private)

void ASTExtraBaseCharacter::DelayHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.DelayHidden");

	ASTExtraBaseCharacter_DelayHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.DelayCustomDepth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::DelayCustomDepth(float Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.DelayCustomDepth");

	ASTExtraBaseCharacter_DelayCustomDepth_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ConvertWeaponSlotToCharacterAnimType
// (Final, Native, Public, Const)
// Parameters:
// ESurviveWeaponPropSlot         WeaponSlot                     (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterAnimType             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECharacterAnimType ASTExtraBaseCharacter::ConvertWeaponSlotToCharacterAnimType(ESurviveWeaponPropSlot WeaponSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ConvertWeaponSlotToCharacterAnimType");

	ASTExtraBaseCharacter_ConvertWeaponSlotToCharacterAnimType_Params params;
	params.WeaponSlot = WeaponSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ConvertWeaponFireModeToWeaponAnimType
// (Final, Native, Public, Const)
// Parameters:
// EGunFireMode                   FireMode                       (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterAnimType             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECharacterAnimType ASTExtraBaseCharacter::ConvertWeaponFireModeToWeaponAnimType(EGunFireMode FireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ConvertWeaponFireModeToWeaponAnimType");

	ASTExtraBaseCharacter_ConvertWeaponFireModeToWeaponAnimType_Params params;
	params.FireMode = FireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ConvertCharacterPoseStateToPoseType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ESTEPoseState>     InPoseState                    (Parm, ZeroConstructor, IsPlainOldData)
// ECharacterPoseType             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECharacterPoseType ASTExtraBaseCharacter::ConvertCharacterPoseStateToPoseType(TEnumAsByte<ESTEPoseState> InPoseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ConvertCharacterPoseStateToPoseType");

	ASTExtraBaseCharacter_ConvertCharacterPoseStateToPoseType_Params params;
	params.InPoseState = InPoseState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ClientSomeOneResponseMe
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ASTExtraBaseCharacter*   BeInvitedPlayer                (Parm, ZeroConstructor, IsPlainOldData)
// EInviteResponceType            res                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ClientSomeOneResponseMe(class ASTExtraBaseCharacter* BeInvitedPlayer, EInviteResponceType res)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ClientSomeOneResponseMe");

	ASTExtraBaseCharacter_ClientSomeOneResponseMe_Params params;
	params.BeInvitedPlayer = BeInvitedPlayer;
	params.res = res;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ClientSomeOneInviteMe
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ASTExtraBaseCharacter*   SomeOne                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ClientSomeOneInviteMe(class ASTExtraBaseCharacter* SomeOne)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ClientSomeOneInviteMe");

	ASTExtraBaseCharacter_ClientSomeOneInviteMe_Params params;
	params.SomeOne = SomeOne;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ClientSetLeaveVehicleLocation
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                 LeaveLocation                  (Parm, IsPlainOldData)

void ASTExtraBaseCharacter::ClientSetLeaveVehicleLocation(const struct FVector& LeaveLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ClientSetLeaveVehicleLocation");

	ASTExtraBaseCharacter_ClientSetLeaveVehicleLocation_Params params;
	params.LeaveLocation = LeaveLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ClientOnPossessBy
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// class AController*             NewController                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ClientOnPossessBy(class AController* NewController)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ClientOnPossessBy");

	ASTExtraBaseCharacter_ClientOnPossessBy_Params params;
	params.NewController = NewController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ClientNotifyCrack
// (Net, Native, Event, Public, NetClient)
// Parameters:
// struct FVector_NetQuantize     LocationRelative               (Parm)
// float                          BulletVelocity                 (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ClientNotifyCrack(const struct FVector_NetQuantize& LocationRelative, float BulletVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ClientNotifyCrack");

	ASTExtraBaseCharacter_ClientNotifyCrack_Params params;
	params.LocationRelative = LocationRelative;
	params.BulletVelocity = BulletVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ClearOnDeath
// (Final, Native, Protected)
// Parameters:
// class AController*             EventInstigater                (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::ClearOnDeath(class AController* EventInstigater)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ClearOnDeath");

	ASTExtraBaseCharacter_ClearOnDeath_Params params;
	params.EventInstigater = EventInstigater;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ClearHPUI
// (Native, Public)

void ASTExtraBaseCharacter::ClearHPUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ClearHPUI");

	ASTExtraBaseCharacter_ClearHPUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CheckSprint
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::CheckSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CheckSprint");

	ASTExtraBaseCharacter_CheckSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CheckPlayerNeedUpdateAnimation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::CheckPlayerNeedUpdateAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CheckPlayerNeedUpdateAnimation");

	ASTExtraBaseCharacter_CheckPlayerNeedUpdateAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CharacterMovementUpdatedCallback
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OldLocation                    (Parm, IsPlainOldData)
// struct FVector                 OldVelocity                    (Parm, IsPlainOldData)

void ASTExtraBaseCharacter::CharacterMovementUpdatedCallback(float DeltaTime, const struct FVector& OldLocation, const struct FVector& OldVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CharacterMovementUpdatedCallback");

	ASTExtraBaseCharacter_CharacterMovementUpdatedCallback_Params params;
	params.DeltaTime = DeltaTime;
	params.OldLocation = OldLocation;
	params.OldVelocity = OldVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ChangeReticleShapeToPrev
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ChangeReticleShapeToPrev()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ChangeReticleShapeToPrev");

	ASTExtraBaseCharacter_ChangeReticleShapeToPrev_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.ChangeReticleShapeToNext
// (Final, Native, Protected, BlueprintCallable)

void ASTExtraBaseCharacter::ChangeReticleShapeToNext()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.ChangeReticleShapeToNext");

	ASTExtraBaseCharacter_ChangeReticleShapeToNext_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CanUseItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::CanUseItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CanUseItem");

	ASTExtraBaseCharacter_CanUseItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CanSwim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::CanSwim()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CanSwim");

	ASTExtraBaseCharacter_CanSwim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CanEnterState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPawnState                     NewState                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::CanEnterState(EPawnState NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CanEnterState");

	ASTExtraBaseCharacter_CanEnterState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CancleVault
// (Native, Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::CancleVault()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CancleVault");

	ASTExtraBaseCharacter_CancleVault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CanChangeThrowModePC
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::CanChangeThrowModePC()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CanChangeThrowModePC");

	ASTExtraBaseCharacter_CanChangeThrowModePC_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CanChangeThrowMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::CanChangeThrowMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CanChangeThrowMode");

	ASTExtraBaseCharacter_CanChangeThrowMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CancelRescue
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::CancelRescue()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CancelRescue");

	ASTExtraBaseCharacter_CancelRescue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.CancelFollow
// (Final, Native, Public, BlueprintCallable)

void ASTExtraBaseCharacter::CancelFollow()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.CancelFollow");

	ASTExtraBaseCharacter_CancelFollow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BulletChange
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ASTExtraBaseCharacter::BulletChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BulletChange");

	ASTExtraBaseCharacter_BulletChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastOtherClientsDie
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults, NetValidate)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              KillingHitInfo                 (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 KillingHitImpulseDir           (Parm, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, ReferenceParm)
// bool                           bIsPointDamage                 (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastOtherClientsDie(class AController* Killer, class AActor* DamageCauser, const struct FHitResult& KillingHitInfo, const struct FVector& KillingHitImpulseDir, const struct FDamageEvent& DamageEvent, bool bIsPointDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastOtherClientsDie");

	ASTExtraBaseCharacter_BroadcastOtherClientsDie_Params params;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;
	params.KillingHitInfo = KillingHitInfo;
	params.KillingHitImpulseDir = KillingHitImpulseDir;
	params.DamageEvent = DamageEvent;
	params.bIsPointDamage = bIsPointDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastFatalDamageInfoWrapper
// (Final, Native, Public)
// Parameters:
// class AUAECharacter*           causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUAECharacter*           VictimName                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            AdditionalParam                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadshot                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ResultHealthStatus             (Parm, ZeroConstructor, IsPlainOldData)
// int                            PreviousHealthStatus           (Parm, ZeroConstructor, IsPlainOldData)
// class AUAECharacter*           WhoKillMe                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            KillerKillCount                (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastFatalDamageInfoWrapper(class AUAECharacter* causer, class AUAECharacter* VictimName, int DamageType, int AdditionalParam, bool IsHeadshot, int ResultHealthStatus, int PreviousHealthStatus, class AUAECharacter* WhoKillMe, int KillerKillCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastFatalDamageInfoWrapper");

	ASTExtraBaseCharacter_BroadcastFatalDamageInfoWrapper_Params params;
	params.causer = causer;
	params.VictimName = VictimName;
	params.DamageType = DamageType;
	params.AdditionalParam = AdditionalParam;
	params.IsHeadshot = IsHeadshot;
	params.ResultHealthStatus = ResultHealthStatus;
	params.PreviousHealthStatus = PreviousHealthStatus;
	params.WhoKillMe = WhoKillMe;
	params.KillerKillCount = KillerKillCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastFatalDamageInfo
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class AUAECharacter*           causer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AUAECharacter*           VictimName                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            AdditionalParam                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadshot                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ResultHealthStatus             (Parm, ZeroConstructor, IsPlainOldData)
// int                            PreviousHealthStatus           (Parm, ZeroConstructor, IsPlainOldData)
// class AUAECharacter*           WhoKillMe                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            KillerKillCount                (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastFatalDamageInfo(class AUAECharacter* causer, class AUAECharacter* VictimName, int DamageType, int AdditionalParam, bool IsHeadshot, int ResultHealthStatus, int PreviousHealthStatus, class AUAECharacter* WhoKillMe, int KillerKillCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastFatalDamageInfo");

	ASTExtraBaseCharacter_BroadcastFatalDamageInfo_Params params;
	params.causer = causer;
	params.VictimName = VictimName;
	params.DamageType = DamageType;
	params.AdditionalParam = AdditionalParam;
	params.IsHeadshot = IsHeadshot;
	params.ResultHealthStatus = ResultHealthStatus;
	params.PreviousHealthStatus = PreviousHealthStatus;
	params.WhoKillMe = WhoKillMe;
	params.KillerKillCount = KillerKillCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateVehicleDamage
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVehicleDamageEvent     VehicleDamageEvent             (ConstParm, Parm, ReferenceParm)
// class APawn*                   DamageInstigatorPawn           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerCurHealth                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           _isFatalHealthCost             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadShotDamage               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastClientsSimulateVehicleDamage(float BaseDamage, const struct FVehicleDamageEvent& VehicleDamageEvent, class APawn* DamageInstigatorPawn, float ServerCurHealth, bool _isFatalHealthCost, bool IsHeadShotDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateVehicleDamage");

	ASTExtraBaseCharacter_BroadcastClientsSimulateVehicleDamage_Params params;
	params.BaseDamage = BaseDamage;
	params.VehicleDamageEvent = VehicleDamageEvent;
	params.DamageInstigatorPawn = DamageInstigatorPawn;
	params.ServerCurHealth = ServerCurHealth;
	params._isFatalHealthCost = _isFatalHealthCost;
	params.IsHeadShotDamage = IsHeadShotDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateRadialDamage
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FRadialDamageEvent      PointDamageEvent               (ConstParm, Parm, ReferenceParm)
// class APawn*                   DamageInstigatorPawn           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerCurHeath                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           _isFatalHealthCost             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadShotDamage               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastClientsSimulateRadialDamage(float BaseDamage, const struct FRadialDamageEvent& PointDamageEvent, class APawn* DamageInstigatorPawn, float ServerCurHeath, bool _isFatalHealthCost, bool IsHeadShotDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateRadialDamage");

	ASTExtraBaseCharacter_BroadcastClientsSimulateRadialDamage_Params params;
	params.BaseDamage = BaseDamage;
	params.PointDamageEvent = PointDamageEvent;
	params.DamageInstigatorPawn = DamageInstigatorPawn;
	params.ServerCurHeath = ServerCurHeath;
	params._isFatalHealthCost = _isFatalHealthCost;
	params.IsHeadShotDamage = IsHeadShotDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulatePoisonDamage
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FPoisonDamageEvent      PoisonDamageEvent              (ConstParm, Parm, ReferenceParm)
// class APawn*                   DamageInstigatorPawn           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerCurHealth                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           _isFatalHealthCost             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadShotDamage               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastClientsSimulatePoisonDamage(float BaseDamage, const struct FPoisonDamageEvent& PoisonDamageEvent, class APawn* DamageInstigatorPawn, float ServerCurHealth, bool _isFatalHealthCost, bool IsHeadShotDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulatePoisonDamage");

	ASTExtraBaseCharacter_BroadcastClientsSimulatePoisonDamage_Params params;
	params.BaseDamage = BaseDamage;
	params.PoisonDamageEvent = PoisonDamageEvent;
	params.DamageInstigatorPawn = DamageInstigatorPawn;
	params.ServerCurHealth = ServerCurHealth;
	params._isFatalHealthCost = _isFatalHealthCost;
	params.IsHeadShotDamage = IsHeadShotDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulatePointDamage
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FSTPointDamageEvent     PointDamageEvent               (ConstParm, Parm, ReferenceParm)
// class APawn*                   DamageInstigatorPawn           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerCurHeath                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           _isFatalHealthCost             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadShotDamage               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastClientsSimulatePointDamage(float BaseDamage, const struct FSTPointDamageEvent& PointDamageEvent, class APawn* DamageInstigatorPawn, float ServerCurHeath, bool _isFatalHealthCost, bool IsHeadShotDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulatePointDamage");

	ASTExtraBaseCharacter_BroadcastClientsSimulatePointDamage_Params params;
	params.BaseDamage = BaseDamage;
	params.PointDamageEvent = PointDamageEvent;
	params.DamageInstigatorPawn = DamageInstigatorPawn;
	params.ServerCurHeath = ServerCurHeath;
	params._isFatalHealthCost = _isFatalHealthCost;
	params.IsHeadShotDamage = IsHeadShotDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateMeleeDamage
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FMeleeDamageEvent       MeleeDamageEvent               (ConstParm, Parm, ReferenceParm)
// class APawn*                   DamageInstigatorPawn           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerCurHealth                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           _isFatalHealthCost             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadShotDamage               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastClientsSimulateMeleeDamage(float BaseDamage, const struct FMeleeDamageEvent& MeleeDamageEvent, class APawn* DamageInstigatorPawn, float ServerCurHealth, bool _isFatalHealthCost, bool IsHeadShotDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateMeleeDamage");

	ASTExtraBaseCharacter_BroadcastClientsSimulateMeleeDamage_Params params;
	params.BaseDamage = BaseDamage;
	params.MeleeDamageEvent = MeleeDamageEvent;
	params.DamageInstigatorPawn = DamageInstigatorPawn;
	params.ServerCurHealth = ServerCurHealth;
	params._isFatalHealthCost = _isFatalHealthCost;
	params.IsHeadShotDamage = IsHeadShotDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateFallingDamage
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FFallingDamageEvent     FallingDamageEvent             (ConstParm, Parm, ReferenceParm)
// class APawn*                   DamageInstigatorPawn           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerCurHealth                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           _isFatalHealthCost             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadShotDamage               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastClientsSimulateFallingDamage(float BaseDamage, const struct FFallingDamageEvent& FallingDamageEvent, class APawn* DamageInstigatorPawn, float ServerCurHealth, bool _isFatalHealthCost, bool IsHeadShotDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateFallingDamage");

	ASTExtraBaseCharacter_BroadcastClientsSimulateFallingDamage_Params params;
	params.BaseDamage = BaseDamage;
	params.FallingDamageEvent = FallingDamageEvent;
	params.DamageInstigatorPawn = DamageInstigatorPawn;
	params.ServerCurHealth = ServerCurHealth;
	params._isFatalHealthCost = _isFatalHealthCost;
	params.IsHeadShotDamage = IsHeadShotDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateDrowningDamage
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FDrowningDamageEvent    DrowningDamageEvent            (ConstParm, Parm, ReferenceParm)
// class APawn*                   DamageInstigatorPawn           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerCurHealth                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           _isFatalHealthCost             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadShotDamage               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastClientsSimulateDrowningDamage(float BaseDamage, const struct FDrowningDamageEvent& DrowningDamageEvent, class APawn* DamageInstigatorPawn, float ServerCurHealth, bool _isFatalHealthCost, bool IsHeadShotDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateDrowningDamage");

	ASTExtraBaseCharacter_BroadcastClientsSimulateDrowningDamage_Params params;
	params.BaseDamage = BaseDamage;
	params.DrowningDamageEvent = DrowningDamageEvent;
	params.DamageInstigatorPawn = DamageInstigatorPawn;
	params.ServerCurHealth = ServerCurHealth;
	params._isFatalHealthCost = _isFatalHealthCost;
	params.IsHeadShotDamage = IsHeadShotDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateBurningDamage
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FSTBurningDamageEvent   BurningDamageEvent             (ConstParm, Parm, ReferenceParm)
// class APawn*                   DamageInstigatorPawn           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerCurHealth                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           _isFatalHealthCost             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadShotDamage               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastClientsSimulateBurningDamage(float BaseDamage, const struct FSTBurningDamageEvent& BurningDamageEvent, class APawn* DamageInstigatorPawn, float ServerCurHealth, bool _isFatalHealthCost, bool IsHeadShotDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateBurningDamage");

	ASTExtraBaseCharacter_BroadcastClientsSimulateBurningDamage_Params params;
	params.BaseDamage = BaseDamage;
	params.BurningDamageEvent = BurningDamageEvent;
	params.DamageInstigatorPawn = DamageInstigatorPawn;
	params.ServerCurHealth = ServerCurHealth;
	params._isFatalHealthCost = _isFatalHealthCost;
	params.IsHeadShotDamage = IsHeadShotDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateAirAttackDamage
// (Net, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FSTAirAttackRadialDamageEvent AirAttackDamageEvent           (ConstParm, Parm, ReferenceParm)
// class APawn*                   DamageInstigatorPawn           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ServerCurHealth                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           _isFatalHealthCost             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsHeadShotDamage               (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BroadcastClientsSimulateAirAttackDamage(float BaseDamage, const struct FSTAirAttackRadialDamageEvent& AirAttackDamageEvent, class APawn* DamageInstigatorPawn, float ServerCurHealth, bool _isFatalHealthCost, bool IsHeadShotDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BroadcastClientsSimulateAirAttackDamage");

	ASTExtraBaseCharacter_BroadcastClientsSimulateAirAttackDamage_Params params;
	params.BaseDamage = BaseDamage;
	params.AirAttackDamageEvent = AirAttackDamageEvent;
	params.DamageInstigatorPawn = DamageInstigatorPawn;
	params.ServerCurHealth = ServerCurHealth;
	params._isFatalHealthCost = _isFatalHealthCost;
	params.IsHeadShotDamage = IsHeadShotDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BPTakeDamage
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraBaseCharacter::BPTakeDamage(float Damage, class AController* EventInstigator, class AActor* DamageCauser, const struct FDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BPTakeDamage");

	ASTExtraBaseCharacter_BPTakeDamage_Params params;
	params.Damage = Damage;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BPResetCharacter
// (Event, Public, BlueprintEvent)

void ASTExtraBaseCharacter::BPResetCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BPResetCharacter");

	ASTExtraBaseCharacter_BPResetCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BPReceiveRadialDamage
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          DamageReceived                 (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (Parm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BPReceiveRadialDamage(float DamageReceived, class UDamageType* DamageType, const struct FVector& Origin, float Radius, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BPReceiveRadialDamage");

	ASTExtraBaseCharacter_BPReceiveRadialDamage_Params params;
	params.DamageReceived = DamageReceived;
	params.DamageType = DamageType;
	params.Origin = Origin;
	params.Radius = Radius;
	params.HitInfo = HitInfo;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BPReceivePointDamage
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitLocation                    (Parm, IsPlainOldData)
// struct FVector                 HitNormal                      (Parm, IsPlainOldData)
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ShotFromDirection              (Parm, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ASTExtraBaseCharacter::BPReceivePointDamage(float Damage, class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, const struct FName& BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BPReceivePointDamage");

	ASTExtraBaseCharacter_BPReceivePointDamage_Params params;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.HitLocation = HitLocation;
	params.HitNormal = HitNormal;
	params.HitComponent = HitComponent;
	params.BoneName = BoneName;
	params.ShotFromDirection = ShotFromDirection;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;
	params.HitInfo = HitInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BPReceiveMeleeDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BPReceiveMeleeDamage(float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BPReceiveMeleeDamage");

	ASTExtraBaseCharacter_BPReceiveMeleeDamage_Params params;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BPReceiveDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BPReceiveDamage(float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BPReceiveDamage");

	ASTExtraBaseCharacter_BPReceiveDamage_Params params;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BPNotifyStartDying
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              KillingHitInfo                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 KillingHitImpulseDir           (Parm, IsPlainOldData)
// class UClass*                  KillingHitDamageType           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BPNotifyStartDying(class AController* Killer, class AActor* DamageCauser, const struct FHitResult& KillingHitInfo, const struct FVector& KillingHitImpulseDir, class UClass* KillingHitDamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BPNotifyStartDying");

	ASTExtraBaseCharacter_BPNotifyStartDying_Params params;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;
	params.KillingHitInfo = KillingHitInfo;
	params.KillingHitImpulseDir = KillingHitImpulseDir;
	params.KillingHitDamageType = KillingHitDamageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BPNotifyDeathEnd
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              KillingHitInfo                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 KillingHitImpulseDir           (Parm, IsPlainOldData)
// class UClass*                  KillingHitDamageType           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::BPNotifyDeathEnd(class AController* Killer, class AActor* DamageCauser, const struct FHitResult& KillingHitInfo, const struct FVector& KillingHitImpulseDir, class UClass* KillingHitDamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BPNotifyDeathEnd");

	ASTExtraBaseCharacter_BPNotifyDeathEnd_Params params;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;
	params.KillingHitInfo = KillingHitInfo;
	params.KillingHitImpulseDir = KillingHitImpulseDir;
	params.KillingHitDamageType = KillingHitDamageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.BPDie
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)

void ASTExtraBaseCharacter::BPDie(float KillingDamage, class AController* EventInstigator, class AActor* DamageCauser, const struct FDamageEvent& DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.BPDie");

	ASTExtraBaseCharacter_BPDie_Params params;
	params.KillingDamage = KillingDamage;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.AutoScopeWhenPeek
// (Final, Native, Public)

void ASTExtraBaseCharacter::AutoScopeWhenPeek()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.AutoScopeWhenPeek");

	ASTExtraBaseCharacter_AutoScopeWhenPeek_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.AttachWeapon
// (Final, Native, Public)

void ASTExtraBaseCharacter::AttachWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.AttachWeapon");

	ASTExtraBaseCharacter_AttachWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.AllowStateCompare
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ComparedState                  (Parm, ZeroConstructor, IsPlainOldData)
// EPawnState                     inState                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           withLog                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::AllowStateCompare(int ComparedState, EPawnState inState, bool withLog)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.AllowStateCompare");

	ASTExtraBaseCharacter_AllowStateCompare_Params params;
	params.ComparedState = ComparedState;
	params.inState = inState;
	params.withLog = withLog;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.AllowState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPawnState                     State                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           withLog                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::AllowState(EPawnState State, bool withLog)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.AllowState");

	ASTExtraBaseCharacter_AllowState_Params params;
	params.State = State;
	params.withLog = withLog;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.AIStartFireOnServer
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            BurstShootBulletsLimit         (Parm, ZeroConstructor, IsPlainOldData)
// float                          BurstShootTimeLimit            (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EShootWeaponShootMode> ShootMode                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 SimpleShootTarget              (Parm, IsPlainOldData)

void ASTExtraBaseCharacter::AIStartFireOnServer(int BurstShootBulletsLimit, float BurstShootTimeLimit, TEnumAsByte<EShootWeaponShootMode> ShootMode, const struct FVector& SimpleShootTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.AIStartFireOnServer");

	ASTExtraBaseCharacter_AIStartFireOnServer_Params params;
	params.BurstShootBulletsLimit = BurstShootBulletsLimit;
	params.BurstShootTimeLimit = BurstShootTimeLimit;
	params.ShootMode = ShootMode;
	params.SimpleShootTarget = SimpleShootTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.AddOneDamageCauserRecord
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AController*             causer                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            HSChangeMargin                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           IsHeadshot                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::AddOneDamageCauserRecord(class AController* causer, int HSChangeMargin, const struct FDamageEvent& DamageEvent, bool IsHeadshot, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.AddOneDamageCauserRecord");

	ASTExtraBaseCharacter_AddOneDamageCauserRecord_Params params;
	params.causer = causer;
	params.HSChangeMargin = HSChangeMargin;
	params.DamageEvent = DamageEvent;
	params.IsHeadshot = IsHeadshot;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.AddMoveOffSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Forward                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Right                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          Up                             (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraBaseCharacter::AddMoveOffSet(float Forward, float Right, float Up)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.AddMoveOffSet");

	ASTExtraBaseCharacter_AddMoveOffSet_Params params;
	params.Forward = Forward;
	params.Right = Right;
	params.Up = Up;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.AddHealthSafety
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          AddVal                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             DamageInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsDamageFromVehicleExplode     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraBaseCharacter::AddHealthSafety(float AddVal, class AController* DamageInstigator, bool IsDamageFromVehicleExplode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.AddHealthSafety");

	ASTExtraBaseCharacter_AddHealthSafety_Params params;
	params.AddVal = AddVal;
	params.DamageInstigator = DamageInstigator;
	params.IsDamageFromVehicleExplode = IsDamageFromVehicleExplode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBaseCharacter.AddBuff
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   BuffName                       (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             BuffCauser                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            LayerCount                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  BuffApplierActor               (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraBaseCharacter::AddBuff(const struct FName& BuffName, class AController* BuffCauser, int LayerCount, class AActor* BuffApplierActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBaseCharacter.AddBuff");

	ASTExtraBaseCharacter_AddBuff_Params params;
	params.BuffName = BuffName;
	params.BuffCauser = BuffCauser;
	params.LayerCount = LayerCount;
	params.BuffApplierActor = BuffApplierActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.Vector2Rotator
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ver                            (Parm, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator USTExtraBlueprintFunctionLibrary::STATIC_Vector2Rotator(const struct FVector& ver)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.Vector2Rotator");

	USTExtraBlueprintFunctionLibrary_Vector2Rotator_Params params;
	params.ver = ver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.TraceGround
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 ContextObject                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 AboveGroundLoc                 (Parm, IsPlainOldData)
// float                          TraceDeepDis                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitInfo                        (Parm, OutParm, IsPlainOldData)
// bool                           bForceStatic                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraBlueprintFunctionLibrary::STATIC_TraceGround(class UObject* ContextObject, const struct FVector& AboveGroundLoc, float TraceDeepDis, bool bForceStatic, struct FHitResult* HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.TraceGround");

	USTExtraBlueprintFunctionLibrary_TraceGround_Params params;
	params.ContextObject = ContextObject;
	params.AboveGroundLoc = AboveGroundLoc;
	params.TraceDeepDis = TraceDeepDis;
	params.bForceStatic = bForceStatic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HitInfo != nullptr)
		*HitInfo = params.HitInfo;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.TraceBlock
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 ContextObject                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Start                          (Parm, IsPlainOldData)
// struct FVector                 End                            (Parm, IsPlainOldData)
// struct FHitResult              HitInfo                        (Parm, OutParm, IsPlainOldData)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bForceStatic                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraBlueprintFunctionLibrary::STATIC_TraceBlock(class UObject* ContextObject, const struct FVector& Start, const struct FVector& End, TArray<class AActor*> IgnoreActors, bool bForceStatic, struct FHitResult* HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.TraceBlock");

	USTExtraBlueprintFunctionLibrary_TraceBlock_Params params;
	params.ContextObject = ContextObject;
	params.Start = Start;
	params.End = End;
	params.IgnoreActors = IgnoreActors;
	params.bForceStatic = bForceStatic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HitInfo != nullptr)
		*HitInfo = params.HitInfo;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.SpawnCustomEmitterAttached
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UParticleSystem*         EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, IsPlainOldData)
// TEnumAsByte<EAttachLocation>   LocationType                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UCustomParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCustomParticleSystemComponent* USTExtraBlueprintFunctionLibrary::STATIC_SpawnCustomEmitterAttached(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, bool bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.SpawnCustomEmitterAttached");

	USTExtraBlueprintFunctionLibrary_SpawnCustomEmitterAttached_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.AttachToComponent = AttachToComponent;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.SpawnCustomEmitterAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem*         EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FRotator                Rotation                       (Parm, IsPlainOldData)
// bool                           bAutoDestroy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UCustomParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCustomParticleSystemComponent* USTExtraBlueprintFunctionLibrary::STATIC_SpawnCustomEmitterAtLocation(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& Location, const struct FRotator& Rotation, bool bAutoDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.SpawnCustomEmitterAtLocation");

	USTExtraBlueprintFunctionLibrary_SpawnCustomEmitterAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.Location = Location;
	params.Rotation = Rotation;
	params.bAutoDestroy = bAutoDestroy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.SetUpPostProcessSetting
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APostProcessVolume*      PostProcessVolume              (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UMaterialInstanceDynamic*> Blends                         (Parm, OutParm, ZeroConstructor, ReferenceParm)

void USTExtraBlueprintFunctionLibrary::STATIC_SetUpPostProcessSetting(class APostProcessVolume* PostProcessVolume, TArray<class UMaterialInstanceDynamic*>* Blends)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.SetUpPostProcessSetting");

	USTExtraBlueprintFunctionLibrary_SetUpPostProcessSetting_Params params;
	params.PostProcessVolume = PostProcessVolume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Blends != nullptr)
		*Blends = params.Blends;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.SetPostProcessBlendEffectWeightByIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APostProcessVolume*      PostProcessVolume              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          weight                         (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraBlueprintFunctionLibrary::STATIC_SetPostProcessBlendEffectWeightByIndex(class APostProcessVolume* PostProcessVolume, unsigned char Index, float weight)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.SetPostProcessBlendEffectWeightByIndex");

	USTExtraBlueprintFunctionLibrary_SetPostProcessBlendEffectWeightByIndex_Params params;
	params.PostProcessVolume = PostProcessVolume;
	params.Index = Index;
	params.weight = weight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.SetCollisionResponseForBodies
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  SkelMesh                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TEnumAsByte<ECollisionChannel> Channel                        (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionResponse> NewResponse                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FName>           BodyNames                      (Parm, ZeroConstructor)

void USTExtraBlueprintFunctionLibrary::STATIC_SetCollisionResponseForBodies(class USkeletalMeshComponent* SkelMesh, TEnumAsByte<ECollisionChannel> Channel, TEnumAsByte<ECollisionResponse> NewResponse, TArray<struct FName> BodyNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.SetCollisionResponseForBodies");

	USTExtraBlueprintFunctionLibrary_SetCollisionResponseForBodies_Params params;
	params.SkelMesh = SkelMesh;
	params.Channel = Channel;
	params.NewResponse = NewResponse;
	params.BodyNames = BodyNames;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.LimitVector
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 CurVec                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 MaxVec                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector USTExtraBlueprintFunctionLibrary::STATIC_LimitVector(const struct FVector& CurVec, const struct FVector& MaxVec)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.LimitVector");

	USTExtraBlueprintFunctionLibrary_LimitVector_Params params;
	params.CurVec = CurVec;
	params.MaxVec = MaxVec;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.LimitRotator
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                CurRot                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                MaxRot                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator USTExtraBlueprintFunctionLibrary::STATIC_LimitRotator(const struct FRotator& CurRot, const struct FRotator& MaxRot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.LimitRotator");

	USTExtraBlueprintFunctionLibrary_LimitRotator_Params params;
	params.CurRot = CurRot;
	params.MaxRot = MaxRot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.IsPlayerCantBlock
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitResult                      (Parm, OutParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraBlueprintFunctionLibrary::STATIC_IsPlayerCantBlock(class AActor* DamageCauser, struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.IsPlayerCantBlock");

	USTExtraBlueprintFunctionLibrary_IsPlayerCantBlock_Params params;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HitResult != nullptr)
		*HitResult = params.HitResult;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.HasTeammateAlive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ASTExtraPlayerState*     PS                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraBlueprintFunctionLibrary::STATIC_HasTeammateAlive(class ASTExtraPlayerState* PS)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.HasTeammateAlive");

	USTExtraBlueprintFunctionLibrary_HasTeammateAlive_Params params;
	params.PS = PS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetWorldToUIShowLocationRect
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 WorldLocation                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector4                Limit                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               UIOffset                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               OutPosition                    (Parm, OutParm, IsPlainOldData)
// float                          Angle                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraBlueprintFunctionLibrary::STATIC_GetWorldToUIShowLocationRect(class UObject* WorldContextObject, const struct FVector& WorldLocation, const struct FVector4& Limit, const struct FVector2D& UIOffset, struct FVector2D* OutPosition, float* Angle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetWorldToUIShowLocationRect");

	USTExtraBlueprintFunctionLibrary_GetWorldToUIShowLocationRect_Params params;
	params.WorldContextObject = WorldContextObject;
	params.WorldLocation = WorldLocation;
	params.Limit = Limit;
	params.UIOffset = UIOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPosition != nullptr)
		*OutPosition = params.OutPosition;
	if (Angle != nullptr)
		*Angle = params.Angle;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetUIShowLocationAngle
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               InPosition                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector4                Limit                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTExtraBlueprintFunctionLibrary::STATIC_GetUIShowLocationAngle(class UObject* WorldContextObject, const struct FVector2D& InPosition, const struct FVector4& Limit)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetUIShowLocationAngle");

	USTExtraBlueprintFunctionLibrary_GetUIShowLocationAngle_Params params;
	params.WorldContextObject = WorldContextObject;
	params.InPosition = InPosition;
	params.Limit = Limit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetSphereOverlappingActors
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          CollisionFreeRadius            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           DrawVisibleTraceDebugLine      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AActor*> USTExtraBlueprintFunctionLibrary::STATIC_GetSphereOverlappingActors(class UObject* WorldContextObject, float Radius, float CollisionFreeRadius, const struct FVector& Origin, class AActor* DamageCauser, TArray<class AActor*> IgnoreActors, bool DrawVisibleTraceDebugLine)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetSphereOverlappingActors");

	USTExtraBlueprintFunctionLibrary_GetSphereOverlappingActors_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Radius = Radius;
	params.CollisionFreeRadius = CollisionFreeRadius;
	params.Origin = Origin;
	params.DamageCauser = DamageCauser;
	params.IgnoreActors = IgnoreActors;
	params.DrawVisibleTraceDebugLine = DrawVisibleTraceDebugLine;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetRadialDamageImpulseAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 Location                       (Parm, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (Parm, IsPlainOldData)
// float                          Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTExtraBlueprintFunctionLibrary::STATIC_GetRadialDamageImpulseAtLocation(const struct FVector& Location, class UDamageType* DamageType, const struct FVector& Origin, float Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetRadialDamageImpulseAtLocation");

	USTExtraBlueprintFunctionLibrary_GetRadialDamageImpulseAtLocation_Params params;
	params.Location = Location;
	params.DamageType = DamageType;
	params.Origin = Origin;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetPostProcessBlendEffectWeightByIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APostProcessVolume*      PostProcessVolume              (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeightedBlendable      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FWeightedBlendable USTExtraBlueprintFunctionLibrary::STATIC_GetPostProcessBlendEffectWeightByIndex(class APostProcessVolume* PostProcessVolume, unsigned char Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetPostProcessBlendEffectWeightByIndex");

	USTExtraBlueprintFunctionLibrary_GetPostProcessBlendEffectWeightByIndex_Params params;
	params.PostProcessVolume = PostProcessVolume;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetDeviceName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USTExtraBlueprintFunctionLibrary::STATIC_GetDeviceName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetDeviceName");

	USTExtraBlueprintFunctionLibrary_GetDeviceName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetChatComponentFromController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class UChatComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UChatComponent* USTExtraBlueprintFunctionLibrary::STATIC_GetChatComponentFromController(class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetChatComponentFromController");

	USTExtraBlueprintFunctionLibrary_GetChatComponentFromController_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetChatComponentFromCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class UChatComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UChatComponent* USTExtraBlueprintFunctionLibrary::STATIC_GetChatComponentFromCharacter(class ACharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetChatComponentFromCharacter");

	USTExtraBlueprintFunctionLibrary_GetChatComponentFromCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetBackpackComponentFromController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class UBackpackComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBackpackComponent* USTExtraBlueprintFunctionLibrary::STATIC_GetBackpackComponentFromController(class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetBackpackComponentFromController");

	USTExtraBlueprintFunctionLibrary_GetBackpackComponentFromController_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetBackpackComponentFromCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class UBackpackComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UBackpackComponent* USTExtraBlueprintFunctionLibrary::STATIC_GetBackpackComponentFromCharacter(class ACharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetBackpackComponentFromCharacter");

	USTExtraBlueprintFunctionLibrary_GetBackpackComponentFromCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetAssetByAssetReferenceAsyncWithID
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath         AssetReference                 (Parm)
// struct FScriptDelegate         AssetLoadSuccessDelegate       (Parm, ZeroConstructor)
// int                            resID                          (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraBlueprintFunctionLibrary::STATIC_GetAssetByAssetReferenceAsyncWithID(const struct FSoftObjectPath& AssetReference, const struct FScriptDelegate& AssetLoadSuccessDelegate, int resID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetAssetByAssetReferenceAsyncWithID");

	USTExtraBlueprintFunctionLibrary_GetAssetByAssetReferenceAsyncWithID_Params params;
	params.AssetReference = AssetReference;
	params.AssetLoadSuccessDelegate = AssetLoadSuccessDelegate;
	params.resID = resID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetAssetByAssetReferenceAsync
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath         AssetReference                 (Parm)
// struct FScriptDelegate         AssetLoadSuccessDelegate       (Parm, ZeroConstructor)

void USTExtraBlueprintFunctionLibrary::STATIC_GetAssetByAssetReferenceAsync(const struct FSoftObjectPath& AssetReference, const struct FScriptDelegate& AssetLoadSuccessDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetAssetByAssetReferenceAsync");

	USTExtraBlueprintFunctionLibrary_GetAssetByAssetReferenceAsync_Params params;
	params.AssetReference = AssetReference;
	params.AssetLoadSuccessDelegate = AssetLoadSuccessDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetAssetByAssetReference
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSoftObjectPath         AssetReference                 (Parm)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* USTExtraBlueprintFunctionLibrary::STATIC_GetAssetByAssetReference(const struct FSoftObjectPath& AssetReference)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.GetAssetByAssetReference");

	USTExtraBlueprintFunctionLibrary_GetAssetByAssetReference_Params params;
	params.AssetReference = AssetReference;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.Generate3StageBezierPointsSrcToDst
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Src                            (Parm, IsPlainOldData)
// struct FVector                 Ctl                            (Parm, IsPlainOldData)
// struct FVector                 Dst                            (Parm, IsPlainOldData)
// int                            Num                            (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FVector> USTExtraBlueprintFunctionLibrary::STATIC_Generate3StageBezierPointsSrcToDst(const struct FVector& Src, const struct FVector& Ctl, const struct FVector& Dst, int Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.Generate3StageBezierPointsSrcToDst");

	USTExtraBlueprintFunctionLibrary_Generate3StageBezierPointsSrcToDst_Params params;
	params.Src = Src;
	params.Ctl = Ctl;
	params.Dst = Dst;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.CreateMyLandscape
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 MatPath                        (Parm, ZeroConstructor)
// struct FString                 GeoPath                        (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraBlueprintFunctionLibrary::STATIC_CreateMyLandscape(class UObject* WorldContextObject, const struct FString& MatPath, const struct FString& GeoPath)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.CreateMyLandscape");

	USTExtraBlueprintFunctionLibrary_CreateMyLandscape_Params params;
	params.WorldContextObject = WorldContextObject;
	params.MatPath = MatPath;
	params.GeoPath = GeoPath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.ComponentIsVisibleFromExplosion
// (Final, Native, Static, Public, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent*     VictimComp                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AActor*                  IgnoredActor                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<ECollisionChannel> TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           DrawVisibleTraceDebugLine      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraBlueprintFunctionLibrary::STATIC_ComponentIsVisibleFromExplosion(class UPrimitiveComponent* VictimComp, const struct FVector& Origin, class AActor* IgnoredActor, TArray<class AActor*> IgnoreActors, TEnumAsByte<ECollisionChannel> TraceChannel, bool DrawVisibleTraceDebugLine)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.ComponentIsVisibleFromExplosion");

	USTExtraBlueprintFunctionLibrary_ComponentIsVisibleFromExplosion_Params params;
	params.VictimComp = VictimComp;
	params.Origin = Origin;
	params.IgnoredActor = IgnoredActor;
	params.IgnoreActors = IgnoreActors;
	params.TraceChannel = TraceChannel;
	params.DrawVisibleTraceDebugLine = DrawVisibleTraceDebugLine;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.ApplyRadiusDamageSTEWithMomentum
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinimumDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseMomentumMag                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          DamageInnerRadius              (Parm, ZeroConstructor, IsPlainOldData)
// float                          DamageOuterRadius              (Parm, ZeroConstructor, IsPlainOldData)
// float                          DamageFalloff                  (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedByController         (Parm, ZeroConstructor, IsPlainOldData)
// float                          CollisionFreeRadius            (Parm, ZeroConstructor, IsPlainOldData)
// float                          AddtionalDamage                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsVehicleExplode               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           DrawVisibleTraceDebugLine      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraBlueprintFunctionLibrary::STATIC_ApplyRadiusDamageSTEWithMomentum(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, float BaseMomentumMag, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, float CollisionFreeRadius, float AddtionalDamage, bool IsVehicleExplode, bool DrawVisibleTraceDebugLine)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.ApplyRadiusDamageSTEWithMomentum");

	USTExtraBlueprintFunctionLibrary_ApplyRadiusDamageSTEWithMomentum_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BaseDamage = BaseDamage;
	params.MinimumDamage = MinimumDamage;
	params.BaseMomentumMag = BaseMomentumMag;
	params.Origin = Origin;
	params.DamageInnerRadius = DamageInnerRadius;
	params.DamageOuterRadius = DamageOuterRadius;
	params.DamageFalloff = DamageFalloff;
	params.DamageTypeClass = DamageTypeClass;
	params.IgnoreActors = IgnoreActors;
	params.DamageCauser = DamageCauser;
	params.InstigatedByController = InstigatedByController;
	params.CollisionFreeRadius = CollisionFreeRadius;
	params.AddtionalDamage = AddtionalDamage;
	params.IsVehicleExplode = IsVehicleExplode;
	params.DrawVisibleTraceDebugLine = DrawVisibleTraceDebugLine;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.ApplyRadiusDamageSTE
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinimumDamage                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          DamageInnerRadius              (Parm, ZeroConstructor, IsPlainOldData)
// float                          DamageOuterRadius              (Parm, ZeroConstructor, IsPlainOldData)
// float                          DamageFalloff                  (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             InstigatedByController         (Parm, ZeroConstructor, IsPlainOldData)
// float                          CollisionFreeRadius            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           DrawVisibleTraceDebugLine      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraBlueprintFunctionLibrary::STATIC_ApplyRadiusDamageSTE(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, float CollisionFreeRadius, bool DrawVisibleTraceDebugLine)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.ApplyRadiusDamageSTE");

	USTExtraBlueprintFunctionLibrary_ApplyRadiusDamageSTE_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BaseDamage = BaseDamage;
	params.MinimumDamage = MinimumDamage;
	params.Origin = Origin;
	params.DamageInnerRadius = DamageInnerRadius;
	params.DamageOuterRadius = DamageOuterRadius;
	params.DamageFalloff = DamageFalloff;
	params.DamageTypeClass = DamageTypeClass;
	params.IgnoreActors = IgnoreActors;
	params.DamageCauser = DamageCauser;
	params.InstigatedByController = InstigatedByController;
	params.CollisionFreeRadius = CollisionFreeRadius;
	params.DrawVisibleTraceDebugLine = DrawVisibleTraceDebugLine;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.AddDistributedImpulseAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  SkelMesh                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 Impulse                        (Parm, IsPlainOldData)
// struct FVector                 Location                       (Parm, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          DistriburedImpulseScale        (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraBlueprintFunctionLibrary::STATIC_AddDistributedImpulseAtLocation(class USkeletalMeshComponent* SkelMesh, const struct FVector& Impulse, const struct FVector& Location, const struct FName& BoneName, float DistriburedImpulseScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBlueprintFunctionLibrary.AddDistributedImpulseAtLocation");

	USTExtraBlueprintFunctionLibrary_AddDistributedImpulseAtLocation_Params params;
	params.SkelMesh = SkelMesh;
	params.Impulse = Impulse;
	params.Location = Location;
	params.BoneName = BoneName;
	params.DistriburedImpulseScale = DistriburedImpulseScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBuffApplierComponent.SetIsEnableChecking
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraBuffApplierComponent::SetIsEnableChecking(bool Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBuffApplierComponent.SetIsEnableChecking");

	USTExtraBuffApplierComponent_SetIsEnableChecking_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraBuffApplierComponent.OverlapCheckerOverlapeed
// (Final, Native, Protected)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraBuffApplierComponent::OverlapCheckerOverlapeed(class AActor* OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraBuffApplierComponent.OverlapCheckerOverlapeed");

	USTExtraBuffApplierComponent_OverlapCheckerOverlapeed_Params params;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraDelegateMgr.STExtraDelegateMgrInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USTExtraDelegateMgr*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USTExtraDelegateMgr* USTExtraDelegateMgr::STATIC_STExtraDelegateMgrInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraDelegateMgr.STExtraDelegateMgrInstance");

	USTExtraDelegateMgr_STExtraDelegateMgrInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraExplosiveActor.Explode
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class APawn*                   InstigatorPawn                 (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          IgnoreActors                   (Parm, ZeroConstructor)
// struct FVector                 Origin                         (Parm, IsPlainOldData)
// bool                           bReplicateToClients            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraExplosiveActor::Explode(class APawn* InstigatorPawn, class AActor* DamageCauser, TArray<class AActor*> IgnoreActors, const struct FVector& Origin, bool bReplicateToClients)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraExplosiveActor.Explode");

	ASTExtraExplosiveActor_Explode_Params params;
	params.InstigatorPawn = InstigatorPawn;
	params.DamageCauser = DamageCauser;
	params.IgnoreActors = IgnoreActors;
	params.Origin = Origin;
	params.bReplicateToClients = bReplicateToClients;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraFlareGunBullet.RPC_Multicast_StartLaunch
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 Velocity                       (Parm, IsPlainOldData)
// float                          Gravity                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraFlareGunBullet::RPC_Multicast_StartLaunch(const struct FVector& Velocity, float Gravity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraFlareGunBullet.RPC_Multicast_StartLaunch");

	ASTExtraFlareGunBullet_RPC_Multicast_StartLaunch_Params params;
	params.Velocity = Velocity;
	params.Gravity = Gravity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraFlareGunBullet.RPC_Multicast_EnterPhase2
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)

void ASTExtraFlareGunBullet::RPC_Multicast_EnterPhase2()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraFlareGunBullet.RPC_Multicast_EnterPhase2");

	ASTExtraFlareGunBullet_RPC_Multicast_EnterPhase2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraFlareGunBullet.OnBounce
// (Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FHitResult              _ImpactResult                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 _ImpactVelocity                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ASTExtraFlareGunBullet::OnBounce(const struct FHitResult& _ImpactResult, const struct FVector& _ImpactVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraFlareGunBullet.OnBounce");

	ASTExtraFlareGunBullet_OnBounce_Params params;
	params._ImpactResult = _ImpactResult;
	params._ImpactVelocity = _ImpactVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraFlareGunBullet.LaunchBulletDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraFlareGunBullet::LaunchBulletDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraFlareGunBullet.LaunchBulletDelegate__DelegateSignature");

	ASTExtraFlareGunBullet_LaunchBulletDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.VehicleBeenDestroyedCleanInfoDisplay
// (Final, Native, Private)
// Parameters:
// ESTExtraVehicleHealthState     InVehicleHealthState           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::VehicleBeenDestroyedCleanInfoDisplay(ESTExtraVehicleHealthState InVehicleHealthState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.VehicleBeenDestroyedCleanInfoDisplay");

	ASTExtraVehicleBase_VehicleBeenDestroyedCleanInfoDisplay_Params params;
	params.InVehicleHealthState = InVehicleHealthState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.ServerSetUsingHorn
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bUse                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::ServerSetUsingHorn(bool bUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.ServerSetUsingHorn");

	ASTExtraVehicleBase_ServerSetUsingHorn_Params params;
	params.bUse = bUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.ServerSetBoosting
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bEnalbed                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::ServerSetBoosting(bool bEnalbed)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.ServerSetBoosting");

	ASTExtraVehicleBase_ServerSetBoosting_Params params;
	params.bEnalbed = bEnalbed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.PlaySfxOneShot
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UAkAudioEvent*           AkEvent                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::PlaySfxOneShot(class UAkAudioEvent* AkEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.PlaySfxOneShot");

	ASTExtraVehicleBase_PlaySfxOneShot_Params params;
	params.AkEvent = AkEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.OnUserQualitySettingChanged
// (Final, Native, Protected)
// Parameters:
// int                            renderlevel                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::OnUserQualitySettingChanged(int renderlevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.OnUserQualitySettingChanged");

	ASTExtraVehicleBase_OnUserQualitySettingChanged_Params params;
	params.renderlevel = renderlevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.OnUpdateEffects
// (Event, Public, BlueprintEvent)

void ASTExtraVehicleBase::OnUpdateEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.OnUpdateEffects");

	ASTExtraVehicleBase_OnUpdateEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.OnSetTailLightValue
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          LightValue                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::OnSetTailLightValue(float LightValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.OnSetTailLightValue");

	ASTExtraVehicleBase_OnSetTailLightValue_Params params;
	params.LightValue = LightValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.OnRep_VehicleHealthState
// (Final, Native, Public)

void ASTExtraVehicleBase::OnRep_VehicleHealthState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.OnRep_VehicleHealthState");

	ASTExtraVehicleBase_OnRep_VehicleHealthState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.OnRep_SimulateViewData
// (Final, Native, Public)

void ASTExtraVehicleBase::OnRep_SimulateViewData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.OnRep_SimulateViewData");

	ASTExtraVehicleBase_OnRep_SimulateViewData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.OnRep_IsEngineStarted
// (Final, Native, Public)

void ASTExtraVehicleBase::OnRep_IsEngineStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.OnRep_IsEngineStarted");

	ASTExtraVehicleBase_OnRep_IsEngineStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.OnRep_IsBoosting
// (Final, Native, Public)

void ASTExtraVehicleBase::OnRep_IsBoosting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.OnRep_IsBoosting");

	ASTExtraVehicleBase_OnRep_IsBoosting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.OnEngineStop
// (Event, Public, BlueprintEvent)

void ASTExtraVehicleBase::OnEngineStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.OnEngineStop");

	ASTExtraVehicleBase_OnEngineStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.OnEngineStart
// (Event, Public, BlueprintEvent)

void ASTExtraVehicleBase::OnEngineStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.OnEngineStart");

	ASTExtraVehicleBase_OnEngineStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.OnBoostingChanged
// (Event, Public, BlueprintEvent)

void ASTExtraVehicleBase::OnBoostingChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.OnBoostingChanged");

	ASTExtraVehicleBase_OnBoostingChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.IsInWater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraVehicleBase::IsInWater()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.IsInWater");

	ASTExtraVehicleBase_IsInWater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.InitVehicle
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            FuelPercent                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bEngineOn                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::InitVehicle(int FuelPercent, bool bEngineOn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.InitVehicle");

	ASTExtraVehicleBase_InitVehicle_Params params;
	params.FuelPercent = FuelPercent;
	params.bEngineOn = bEngineOn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.HandleOnVehicleHealthStateChanged
// (Native, Protected)
// Parameters:
// ESTExtraVehicleHealthState     InVehicleHealthState           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::HandleOnVehicleHealthStateChanged(ESTExtraVehicleHealthState InVehicleHealthState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.HandleOnVehicleHealthStateChanged");

	ASTExtraVehicleBase_HandleOnVehicleHealthStateChanged_Params params;
	params.InVehicleHealthState = InVehicleHealthState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.HandleOnSeatDetached
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::HandleOnSeatDetached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.HandleOnSeatDetached");

	ASTExtraVehicleBase_HandleOnSeatDetached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.HandleOnSeatChanged
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        LastSeatType                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            LastSeatIdx                    (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        NewSeatType                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewSeatIdx                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::HandleOnSeatChanged(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType LastSeatType, int LastSeatIdx, ESTExtraVehicleSeatType NewSeatType, int NewSeatIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.HandleOnSeatChanged");

	ASTExtraVehicleBase_HandleOnSeatChanged_Params params;
	params.Character = Character;
	params.LastSeatType = LastSeatType;
	params.LastSeatIdx = LastSeatIdx;
	params.NewSeatType = NewSeatType;
	params.NewSeatIdx = NewSeatIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.HandleOnSeatAttached
// (Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraVehicleBase::HandleOnSeatAttached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.HandleOnSeatAttached");

	ASTExtraVehicleBase_HandleOnSeatAttached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.GetRotationInputDir
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraVehicleBase::GetRotationInputDir()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.GetRotationInputDir");

	ASTExtraVehicleBase_GetRotationInputDir_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.GetForwardSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraVehicleBase::GetForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.GetForwardSpeed");

	ASTExtraVehicleBase_GetForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.ClearInputs
// (Final, Native, Public, BlueprintCallable)

void ASTExtraVehicleBase::ClearInputs()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.ClearInputs");

	ASTExtraVehicleBase_ClearInputs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.CanRide
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraVehicleBase::CanRide()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.CanRide");

	ASTExtraVehicleBase_CanRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleBase.BroadcastClientVehicleExplosionEffect
// (Net, Native, Event, NetMulticast, Public)

void ASTExtraVehicleBase::BroadcastClientVehicleExplosionEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleBase.BroadcastClientVehicleExplosionEffect");

	ASTExtraVehicleBase_BroadcastClientVehicleExplosionEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraFloatingVehicle.HandleOnMeshAwake
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     WakingComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraFloatingVehicle::HandleOnMeshAwake(class UPrimitiveComponent* WakingComponent, const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraFloatingVehicle.HandleOnMeshAwake");

	ASTExtraFloatingVehicle_HandleOnMeshAwake_Params params;
	params.WakingComponent = WakingComponent;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraFloatingVehicle.GetRotationInputDir
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraFloatingVehicle::GetRotationInputDir()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraFloatingVehicle.GetRotationInputDir");

	ASTExtraFloatingVehicle_GetRotationInputDir_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraFloatingVehicleMovementComponent.ServerUpdateInput
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          InSteeringInput                (Parm, ZeroConstructor, IsPlainOldData)
// float                          InThrottleInput                (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraFloatingVehicleMovementComponent::ServerUpdateInput(float InSteeringInput, float InThrottleInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraFloatingVehicleMovementComponent.ServerUpdateInput");

	USTExtraFloatingVehicleMovementComponent_ServerUpdateInput_Params params;
	params.InSteeringInput = InSteeringInput;
	params.InThrottleInput = InThrottleInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraFloatingVehicleMovementComponent.GetThrottleInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTExtraFloatingVehicleMovementComponent::GetThrottleInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraFloatingVehicleMovementComponent.GetThrottleInput");

	USTExtraFloatingVehicleMovementComponent_GetThrottleInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraFloatingVehicleMovementComponent.GetSteeringInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTExtraFloatingVehicleMovementComponent::GetSteeringInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraFloatingVehicleMovementComponent.GetSteeringInput");

	USTExtraFloatingVehicleMovementComponent_GetSteeringInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraFPPAnimInstance.CacheParamList
// (Native, Public)
// Parameters:
// float                          DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraFPPAnimInstance::CacheParamList(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraFPPAnimInstance.CacheParamList");

	USTExtraFPPAnimInstance_CacheParamList_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraGameInstance.UserQualitySettingChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int                            UserQualitySettingLevel        (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::UserQualitySettingChanged__DelegateSignature(int UserQualitySettingLevel)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraGameInstance.UserQualitySettingChanged__DelegateSignature");

	USTExtraGameInstance_UserQualitySettingChanged__DelegateSignature_Params params;
	params.UserQualitySettingLevel = UserQualitySettingLevel;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.StopStat
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<EServerStatType>   StatType                       (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::StopStat(TEnumAsByte<EServerStatType> StatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.StopStat");

	USTExtraGameInstance_StopStat_Params params;
	params.StatType = StatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.StartStat
// (Final, Native, Private)
// Parameters:
// TEnumAsByte<EServerStatType>   StatType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameInstance::StartStat(TEnumAsByte<EServerStatType> StatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.StartStat");

	USTExtraGameInstance_StartStat_Params params;
	params.StatType = StatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.StartSinglePlayerGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 MapName                        (Parm, ZeroConstructor)

void USTExtraGameInstance::StartSinglePlayerGame(const struct FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.StartSinglePlayerGame");

	USTExtraGameInstance_StartSinglePlayerGame_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.StartMultiplayerPlayerGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 MapName                        (Parm, ZeroConstructor)

void USTExtraGameInstance::StartMultiplayerPlayerGame(const struct FString& MapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.StartMultiplayerPlayerGame");

	USTExtraGameInstance_StartMultiplayerPlayerGame_Params params;
	params.MapName = MapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.ShowSessionStatus
// (Final, Native, Public, BlueprintCallable)

void USTExtraGameInstance::ShowSessionStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.ShowSessionStatus");

	USTExtraGameInstance_ShowSessionStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.ShowLoadingScreen
// (Final, Native, Public, BlueprintCallable, Const)

void USTExtraGameInstance::ShowLoadingScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.ShowLoadingScreen");

	USTExtraGameInstance_ShowLoadingScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.SetWorldCompositionRelativeDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            LODIndex                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::SetWorldCompositionRelativeDistance(int LODIndex, float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.SetWorldCompositionRelativeDistance");

	USTExtraGameInstance_SetWorldCompositionRelativeDistance_Params params;
	params.LODIndex = LODIndex;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.SetUserSetingShadowQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            shadowQuality                  (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::SetUserSetingShadowQuality(int shadowQuality)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.SetUserSetingShadowQuality");

	USTExtraGameInstance_SetUserSetingShadowQuality_Params params;
	params.shadowQuality = shadowQuality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.SetUserSetingMobilceContentSCale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          mcs                            (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::SetUserSetingMobilceContentSCale(float mcs)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.SetUserSetingMobilceContentSCale");

	USTExtraGameInstance_SetUserSetingMobilceContentSCale_Params params;
	params.mcs = mcs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.SettingNetIdForLocalPlayer
// (Final, Native, Public, BlueprintCallable, Const)

void USTExtraGameInstance::SettingNetIdForLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.SettingNetIdForLocalPlayer");

	USTExtraGameInstance_SettingNetIdForLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.SetRenderQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRenderQualitySettings  RenderQualitySettings          (Parm)

void USTExtraGameInstance::SetRenderQuality(const struct FRenderQualitySettings& RenderQualitySettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.SetRenderQuality");

	USTExtraGameInstance_SetRenderQuality_Params params;
	params.RenderQualitySettings = RenderQualitySettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.SetFOVScreenSizeCullingFactor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          FOV                            (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::SetFOVScreenSizeCullingFactor(float FOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.SetFOVScreenSizeCullingFactor");

	USTExtraGameInstance_SetFOVScreenSizeCullingFactor_Params params;
	params.FOV = FOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.SetAutoMissionType
// (Final, Native, Static, Public, BlueprintCallable)

void USTExtraGameInstance::STATIC_SetAutoMissionType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.SetAutoMissionType");

	USTExtraGameInstance_SetAutoMissionType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.SearchGames
// (Final, Native, Public, BlueprintCallable)

void USTExtraGameInstance::SearchGames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.SearchGames");

	USTExtraGameInstance_SearchGames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.ReSetFOVScreenSizeCullingFactor
// (Final, Native, Public, BlueprintCallable)

void USTExtraGameInstance::ReSetFOVScreenSizeCullingFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.ReSetFOVScreenSizeCullingFactor");

	USTExtraGameInstance_ReSetFOVScreenSizeCullingFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.RenderForLowFPS
// (Final, Native, Public, BlueprintCallable)

void USTExtraGameInstance::RenderForLowFPS()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.RenderForLowFPS");

	USTExtraGameInstance_RenderForLowFPS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.RefuseRenderForLowFPS
// (Final, Native, Public, BlueprintCallable)

void USTExtraGameInstance::RefuseRenderForLowFPS()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.RefuseRenderForLowFPS");

	USTExtraGameInstance_RefuseRenderForLowFPS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.QuitGame
// (Final, Native, Public, BlueprintCallable)

void USTExtraGameInstance::QuitGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.QuitGame");

	USTExtraGameInstance_QuitGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.PreSetRenderQuality
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FRenderQualitySettings  RenderQualitySettings          (Parm)
// bool                           renderLevelChanged             (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::PreSetRenderQuality(const struct FRenderQualitySettings& RenderQualitySettings, bool* renderLevelChanged)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.PreSetRenderQuality");

	USTExtraGameInstance_PreSetRenderQuality_Params params;
	params.RenderQualitySettings = RenderQualitySettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (renderLevelChanged != nullptr)
		*renderLevelChanged = params.renderLevelChanged;
}


// DelegateFunction ShadowTrackerExtra.STExtraGameInstance.OnSearchGameCompleteDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                           bRet                           (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::OnSearchGameCompleteDelegate__DelegateSignature(bool bRet)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraGameInstance.OnSearchGameCompleteDelegate__DelegateSignature");

	USTExtraGameInstance_OnSearchGameCompleteDelegate__DelegateSignature_Params params;
	params.bRet = bRet;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.OnSearchGameComplete
// (Final, Native, Private)
// Parameters:
// bool                           bRet                           (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::OnSearchGameComplete(bool bRet)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.OnSearchGameComplete");

	USTExtraGameInstance_OnSearchGameComplete_Params params;
	params.bRet = bRet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.OnCreatePresenceSessionComplete
// (Final, Native, Private)
// Parameters:
// bool                           bWasSuccessful                 (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::OnCreatePresenceSessionComplete(bool bWasSuccessful)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.OnCreatePresenceSessionComplete");

	USTExtraGameInstance_OnCreatePresenceSessionComplete_Params params;
	params.bWasSuccessful = bWasSuccessful;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.JoinGameByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 TargetSessionOwnerID           (Parm, ZeroConstructor)

void USTExtraGameInstance::JoinGameByName(const struct FString& TargetSessionOwnerID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.JoinGameByName");

	USTExtraGameInstance_JoinGameByName_Params params;
	params.TargetSessionOwnerID = TargetSessionOwnerID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.IsSupportTagCulling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameInstance::IsSupportTagCulling()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.IsSupportTagCulling");

	USTExtraGameInstance_IsSupportTagCulling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.IsSupportSwitchRenderLevelRuntime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameInstance::IsSupportSwitchRenderLevelRuntime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.IsSupportSwitchRenderLevelRuntime");

	USTExtraGameInstance_IsSupportSwitchRenderLevelRuntime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.IsSupportMSAA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameInstance::IsSupportMSAA()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.IsSupportMSAA");

	USTExtraGameInstance_IsSupportMSAA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.IsSupportLDR
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameInstance::IsSupportLDR()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.IsSupportLDR");

	USTExtraGameInstance_IsSupportLDR_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.IsOpenHDR
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameInstance::IsOpenHDR()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.IsOpenHDR");

	USTExtraGameInstance_IsOpenHDR_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.IsNetworkCompatible
// (Final, Native, Public)
// Parameters:
// uint32_t                       LocalNetworkVersion            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       RemoteNetworkVersion           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameInstance::IsNetworkCompatible(uint32_t LocalNetworkVersion, uint32_t RemoteNetworkVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.IsNetworkCompatible");

	USTExtraGameInstance_IsNetworkCompatible_Params params;
	params.LocalNetworkVersion = LocalNetworkVersion;
	params.RemoteNetworkVersion = RemoteNetworkVersion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.IsAutoRunTestGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameInstance::STATIC_IsAutoRunTestGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.IsAutoRunTestGame");

	USTExtraGameInstance_IsAutoRunTestGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.IsAutoRunRoomOwner
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameInstance::STATIC_IsAutoRunRoomOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.IsAutoRunRoomOwner");

	USTExtraGameInstance_IsAutoRunRoomOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GMStandalone
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Map                            (Parm, ZeroConstructor)

void USTExtraGameInstance::GMStandalone(const struct FString& Map)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GMStandalone");

	USTExtraGameInstance_GMStandalone_Params params;
	params.Map = Map;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetWonderfulRecordingCut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWonderfulRecordingCut*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UWonderfulRecordingCut* USTExtraGameInstance::GetWonderfulRecordingCut()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetWonderfulRecordingCut");

	USTExtraGameInstance_GetWonderfulRecordingCut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetUserQualitySettingLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraGameInstance::GetUserQualitySettingLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetUserQualitySettingLevel");

	USTExtraGameInstance_GetUserQualitySettingLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetUnderFpsCount
// (Final, Native, Public, Const)
// Parameters:
// int                            Fps                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            DuringSeconds                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraGameInstance::GetUnderFpsCount(int Fps, int DuringSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetUnderFpsCount");

	USTExtraGameInstance_GetUnderFpsCount_Params params;
	params.Fps = Fps;
	params.DuringSeconds = DuringSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetStartParameterStringValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 Key                            (Parm, ZeroConstructor)
// struct FString                 NotFoundValue                  (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USTExtraGameInstance::GetStartParameterStringValue(const struct FString& Key, const struct FString& NotFoundValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetStartParameterStringValue");

	USTExtraGameInstance_GetStartParameterStringValue_Params params;
	params.Key = Key;
	params.NotFoundValue = NotFoundValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetSearchGameResults
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FString>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FString> USTExtraGameInstance::GetSearchGameResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetSearchGameResults");

	USTExtraGameInstance_GetSearchGameResults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetRenderQualityLastSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRenderQualitySettings  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRenderQualitySettings USTExtraGameInstance::GetRenderQualityLastSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetRenderQualityLastSet");

	USTExtraGameInstance_GetRenderQualityLastSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetRenderQualityApplying
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRenderQualitySettings  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRenderQualitySettings USTExtraGameInstance::GetRenderQualityApplying()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetRenderQualityApplying");

	USTExtraGameInstance_GetRenderQualityApplying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetMinFps
// (Final, Native, Public, Const)
// Parameters:
// int                            DuringSeconds                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraGameInstance::GetMinFps(int DuringSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetMinFps");

	USTExtraGameInstance_GetMinFps_Params params;
	params.DuringSeconds = DuringSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetMaxFps
// (Final, Native, Public, Const)
// Parameters:
// int                            DuringSeconds                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraGameInstance::GetMaxFps(int DuringSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetMaxFps");

	USTExtraGameInstance_GetMaxFps_Params params;
	params.DuringSeconds = DuringSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetDeviceUpdateVersionFlag
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraGameInstance::GetDeviceUpdateVersionFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetDeviceUpdateVersionFlag");

	USTExtraGameInstance_GetDeviceUpdateVersionFlag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetDeviceMaxSupportLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ERenderQuality>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ERenderQuality> USTExtraGameInstance::GetDeviceMaxSupportLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetDeviceMaxSupportLevel");

	USTExtraGameInstance_GetDeviceMaxSupportLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetDeviceMaxFPSByDeviceLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<ERenderQuality>    renderlevel                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraGameInstance::GetDeviceMaxFPSByDeviceLevel(TEnumAsByte<ERenderQuality> renderlevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetDeviceMaxFPSByDeviceLevel");

	USTExtraGameInstance_GetDeviceMaxFPSByDeviceLevel_Params params;
	params.renderlevel = renderlevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetDeviceLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraGameInstance::GetDeviceLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetDeviceLimit");

	USTExtraGameInstance_GetDeviceLimit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetDeviceLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraGameInstance::GetDeviceLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetDeviceLevel");

	USTExtraGameInstance_GetDeviceLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetDeathPlayback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDeathPlayback*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDeathPlayback* USTExtraGameInstance::GetDeathPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetDeathPlayback");

	USTExtraGameInstance_GetDeathPlayback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetAutoRunTestServerIdx
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraGameInstance::STATIC_GetAutoRunTestServerIdx()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetAutoRunTestServerIdx");

	USTExtraGameInstance_GetAutoRunTestServerIdx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetAutoRunPassWD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USTExtraGameInstance::STATIC_GetAutoRunPassWD()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetAutoRunPassWD");

	USTExtraGameInstance_GetAutoRunPassWD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.GetAutoRunAccount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USTExtraGameInstance::STATIC_GetAutoRunAccount()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.GetAutoRunAccount");

	USTExtraGameInstance_GetAutoRunAccount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.ExitGame
// (Final, Native, Public, BlueprintCallable)

void USTExtraGameInstance::ExitGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.ExitGame");

	USTExtraGameInstance_ExitGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.ExecuteCMD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 CMDkey                         (Parm, ZeroConstructor)
// struct FString                 CMDvalue                       (Parm, ZeroConstructor)

void USTExtraGameInstance::ExecuteCMD(const struct FString& CMDkey, const struct FString& CMDvalue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.ExecuteCMD");

	USTExtraGameInstance_ExecuteCMD_Params params;
	params.CMDkey = CMDkey;
	params.CMDvalue = CMDvalue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.EnableStreamingLevelLOD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::EnableStreamingLevelLOD(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.EnableStreamingLevelLOD");

	USTExtraGameInstance_EnableStreamingLevelLOD_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.DeleteSavedFiles
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           allfilesSaved                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameInstance::DeleteSavedFiles(bool allfilesSaved)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.DeleteSavedFiles");

	USTExtraGameInstance_DeleteSavedFiles_Params params;
	params.allfilesSaved = allfilesSaved;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameInstance.ClearSession
// (Final, Native, Private)

void USTExtraGameInstance::ClearSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.ClearSession");

	USTExtraGameInstance_ClearSession_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.CancelSearchGame
// (Final, Native, Public, BlueprintCallable)

void USTExtraGameInstance::CancelSearchGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.CancelSearchGame");

	USTExtraGameInstance_CancelSearchGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.AutoActiveLDR
// (Final, Native, Public, BlueprintCallable)

void USTExtraGameInstance::AutoActiveLDR()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.AutoActiveLDR");

	USTExtraGameInstance_AutoActiveLDR_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.ActiveStyle_PP
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<ERenderStyle>      Level                          (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::ActiveStyle_PP(TEnumAsByte<ERenderStyle> Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.ActiveStyle_PP");

	USTExtraGameInstance_ActiveStyle_PP_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.ActiveStyle
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<ERenderStyle>      Level                          (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::ActiveStyle(TEnumAsByte<ERenderStyle> Level)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.ActiveStyle");

	USTExtraGameInstance_ActiveStyle_Params params;
	params.Level = Level;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameInstance.ActiveMSAA
// (Final, Native, Public)
// Parameters:
// bool                           bOpenMSAA                      (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameInstance::ActiveMSAA(bool bOpenMSAA)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameInstance.ActiveMSAA");

	USTExtraGameInstance_ActiveMSAA_Params params;
	params.bOpenMSAA = bOpenMSAA;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameMode.OnGameEnd
// (Final, Native, Public)

void ASTExtraGameMode::OnGameEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameMode.OnGameEnd");

	ASTExtraGameMode_OnGameEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.StopSyncSound
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  pSouceActor                    (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameplayStatics::STATIC_StopSyncSound(class AActor* pSouceActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.StopSyncSound");

	USTExtraGameplayStatics_StopSyncSound_Params params;
	params.pSouceActor = pSouceActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.STApplyPointDamage
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                  DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 HitFromDirection               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FHitResult              HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTExtraGameplayStatics::STATIC_STApplyPointDamage(class AActor* DamagedActor, float BaseDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.STApplyPointDamage");

	USTExtraGameplayStatics_STApplyPointDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.BaseDamage = BaseDamage;
	params.HitFromDirection = HitFromDirection;
	params.HitInfo = HitInfo;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.SetWorldOriginByDistance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       Controller                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          NecessaryDistanceToWorldShifting (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameplayStatics::STATIC_SetWorldOriginByDistance(class APlayerController* Controller, float NecessaryDistanceToWorldShifting)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.SetWorldOriginByDistance");

	USTExtraGameplayStatics_SetWorldOriginByDistance_Params params;
	params.Controller = Controller;
	params.NecessaryDistanceToWorldShifting = NecessaryDistanceToWorldShifting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.SetWorldOrigin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       Controller                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameplayStatics::STATIC_SetWorldOrigin(class APlayerController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.SetWorldOrigin");

	USTExtraGameplayStatics_SetWorldOrigin_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.SetAnimationAkSwitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 SwitchGroup                    (Parm, ZeroConstructor)
// struct FString                 SwitchState                    (Parm, ZeroConstructor)

void USTExtraGameplayStatics::STATIC_SetAnimationAkSwitch(class ACharacter* Character, const struct FString& SwitchGroup, const struct FString& SwitchState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.SetAnimationAkSwitch");

	USTExtraGameplayStatics_SetAnimationAkSwitch_Params params;
	params.Character = Character;
	params.SwitchGroup = SwitchGroup;
	params.SwitchState = SwitchState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.SetAnimationAkRTPC
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 RTPCName                       (Parm, ZeroConstructor)
// float                          RTPCValue                      (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameplayStatics::STATIC_SetAnimationAkRTPC(class ACharacter* Character, const struct FString& RTPCName, float RTPCValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.SetAnimationAkRTPC");

	USTExtraGameplayStatics_SetAnimationAkRTPC_Params params;
	params.Character = Character;
	params.RTPCName = RTPCName;
	params.RTPCValue = RTPCValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.ProjectPointToFloor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bOutHit                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Length                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector USTExtraGameplayStatics::STATIC_ProjectPointToFloor(class UObject* WorldContextObject, const struct FVector& Origin, float Length, bool* bOutHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.ProjectPointToFloor");

	USTExtraGameplayStatics_ProjectPointToFloor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.Length = Length;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bOutHit != nullptr)
		*bOutHit = params.bOutHit;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.ProjectPointsToHighFloor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bOutHit                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          AroundLength                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          RayLength                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector USTExtraGameplayStatics::STATIC_ProjectPointsToHighFloor(class UObject* WorldContextObject, const struct FVector& Origin, float AroundLength, float RayLength, bool* bOutHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.ProjectPointsToHighFloor");

	USTExtraGameplayStatics_ProjectPointsToHighFloor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.AroundLength = AroundLength;
	params.RayLength = RayLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bOutHit != nullptr)
		*bOutHit = params.bOutHit;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.PostSyncAkEvent
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// int                            AkEventID                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  pSouceActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 AkLocation                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           IsFireSound                    (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraGameplayStatics::STATIC_PostSyncAkEvent(int AkEventID, class AActor* pSouceActor, const struct FVector& AkLocation, bool IsFireSound)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.PostSyncAkEvent");

	USTExtraGameplayStatics_PostSyncAkEvent_Params params;
	params.AkEventID = AkEventID;
	params.pSouceActor = pSouceActor;
	params.AkLocation = AkLocation;
	params.IsFireSound = IsFireSound;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.IsShipping
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameplayStatics::STATIC_IsShipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.IsShipping");

	USTExtraGameplayStatics_IsShipping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.IsServerActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameplayStatics::STATIC_IsServerActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.IsServerActor");

	USTExtraGameplayStatics_IsServerActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.IsPIE
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameplayStatics::STATIC_IsPIE(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.IsPIE");

	USTExtraGameplayStatics_IsPIE_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.IsEditor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameplayStatics::STATIC_IsEditor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.IsEditor");

	USTExtraGameplayStatics_IsEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.IsClientActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameplayStatics::STATIC_IsClientActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.IsClientActor");

	USTExtraGameplayStatics_IsClientActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.GetSTExtraCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* USTExtraGameplayStatics::STATIC_GetSTExtraCharacter(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.GetSTExtraCharacter");

	USTExtraGameplayStatics_GetSTExtraCharacter_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.ConeVolumeLineTraceTest
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          HalfConeAngle                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          RayLength                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameplayStatics::STATIC_ConeVolumeLineTraceTest(class UObject* WorldContextObject, const struct FVector& Origin, float HalfConeAngle, float RayLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.ConeVolumeLineTraceTest");

	USTExtraGameplayStatics_ConeVolumeLineTraceTest_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.HalfConeAngle = HalfConeAngle;
	params.RayLength = RayLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.ConeVolumeLineTraceSingle
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OutHitPoint                    (Parm, OutParm, IsPlainOldData)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          HalfConeAngle                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          RayLength                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraGameplayStatics::STATIC_ConeVolumeLineTraceSingle(class UObject* WorldContextObject, const struct FVector& Origin, float HalfConeAngle, float RayLength, struct FVector* OutHitPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.ConeVolumeLineTraceSingle");

	USTExtraGameplayStatics_ConeVolumeLineTraceSingle_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.HalfConeAngle = HalfConeAngle;
	params.RayLength = RayLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHitPoint != nullptr)
		*OutHitPoint = params.OutHitPoint;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameplayStatics.ConeVolumeLineTraceMulti
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>         OutHitPoints                   (Parm, OutParm, ZeroConstructor)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// int                            SamplingNum                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          HalfConeAngle                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          RayLength                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraGameplayStatics::STATIC_ConeVolumeLineTraceMulti(class UObject* WorldContextObject, const struct FVector& Origin, int SamplingNum, float HalfConeAngle, float RayLength, TArray<struct FVector>* OutHitPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameplayStatics.ConeVolumeLineTraceMulti");

	USTExtraGameplayStatics_ConeVolumeLineTraceMulti_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.SamplingNum = SamplingNum;
	params.HalfConeAngle = HalfConeAngle;
	params.RayLength = RayLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHitPoints != nullptr)
		*OutHitPoints = params.OutHitPoints;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.SyncAirplaneRoute
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                 StartLoc                       (Parm, IsPlainOldData)
// struct FVector                 StopLoc                        (Parm, IsPlainOldData)
// struct FVector                 CanJumpLoc                     (Parm, IsPlainOldData)
// struct FVector                 ForceJumpLoc                   (Parm, IsPlainOldData)

void ASTExtraGameStateBase::SyncAirplaneRoute(const struct FVector& StartLoc, const struct FVector& StopLoc, const struct FVector& CanJumpLoc, const struct FVector& ForceJumpLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.SyncAirplaneRoute");

	ASTExtraGameStateBase_SyncAirplaneRoute_Params params;
	params.StartLoc = StartLoc;
	params.StopLoc = StopLoc;
	params.CanJumpLoc = CanJumpLoc;
	params.ForceJumpLoc = ForceJumpLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.SimulateAirAttackOver
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)

void ASTExtraGameStateBase::SimulateAirAttackOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.SimulateAirAttackOver");

	ASTExtraGameStateBase_SimulateAirAttackOver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.SetTagCulling
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           IsUse                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraGameStateBase::SetTagCulling(bool IsUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.SetTagCulling");

	ASTExtraGameStateBase_SetTagCulling_Params params;
	params.IsUse = IsUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.SetReConnectGameStateInfo
// (Final, Native, Public)
// Parameters:
// struct FReConnectGameStateInfo ReConnectInfo                  (Parm)

void ASTExtraGameStateBase::SetReConnectGameStateInfo(const struct FReConnectGameStateInfo& ReConnectInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.SetReConnectGameStateInfo");

	ASTExtraGameStateBase_SetReConnectGameStateInfo_Params params;
	params.ReConnectInfo = ReConnectInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.SetCurAirAttackWave
// (Final, Native, Public)
// Parameters:
// int                            AirAttackWave                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraGameStateBase::SetCurAirAttackWave(int AirAttackWave)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.SetCurAirAttackWave");

	ASTExtraGameStateBase_SetCurAirAttackWave_Params params;
	params.AirAttackWave = AirAttackWave;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.SetCurAirAttackType
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EAirAttackInfo>    airattacktype                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraGameStateBase::SetCurAirAttackType(TEnumAsByte<EAirAttackInfo> airattacktype)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.SetCurAirAttackType");

	ASTExtraGameStateBase_SetCurAirAttackType_Params params;
	params.airattacktype = airattacktype;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_ReadyStateTime
// (Final, Native, Public)

void ASTExtraGameStateBase::OnRep_ReadyStateTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_ReadyStateTime");

	ASTExtraGameStateBase_OnRep_ReadyStateTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_ReadyStateCountingDown
// (Final, Native, Public)

void ASTExtraGameStateBase::OnRep_ReadyStateCountingDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_ReadyStateCountingDown");

	ASTExtraGameStateBase_OnRep_ReadyStateCountingDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_PlayerNumOnPlane
// (Final, Native, Public)

void ASTExtraGameStateBase::OnRep_PlayerNumOnPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_PlayerNumOnPlane");

	ASTExtraGameStateBase_OnRep_PlayerNumOnPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_PlayerNumChange
// (Final, Native, Public)

void ASTExtraGameStateBase::OnRep_PlayerNumChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_PlayerNumChange");

	ASTExtraGameStateBase_OnRep_PlayerNumChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_MatchId
// (Final, Native, Protected)

void ASTExtraGameStateBase::OnRep_MatchId()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_MatchId");

	ASTExtraGameStateBase_OnRep_MatchId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_IsTrainingMode
// (Final, Native, Public)

void ASTExtraGameStateBase::OnRep_IsTrainingMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_IsTrainingMode");

	ASTExtraGameStateBase_OnRep_IsTrainingMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_IsFPPMode
// (Final, Native, Public)

void ASTExtraGameStateBase::OnRep_IsFPPMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_IsFPPMode");

	ASTExtraGameStateBase_OnRep_IsFPPMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_GameModeState
// (Final, Native, Public)

void ASTExtraGameStateBase::OnRep_GameModeState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_GameModeState");

	ASTExtraGameStateBase_OnRep_GameModeState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_AliveTeamNum
// (Final, Native, Public)

void ASTExtraGameStateBase::OnRep_AliveTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_AliveTeamNum");

	ASTExtraGameStateBase_OnRep_AliveTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_AlivePlayerNum
// (Final, Native, Public)

void ASTExtraGameStateBase::OnRep_AlivePlayerNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_AlivePlayerNum");

	ASTExtraGameStateBase_OnRep_AlivePlayerNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_AirplanePath
// (Final, Native, Public)

void ASTExtraGameStateBase::OnRep_AirplanePath()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnRep_AirplanePath");

	ASTExtraGameStateBase_OnRep_AirplanePath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.OnGameModeDisplayNameChange
// (Final, Native, Protected)

void ASTExtraGameStateBase::OnGameModeDisplayNameChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.OnGameModeDisplayNameChange");

	ASTExtraGameStateBase_OnGameModeDisplayNameChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.GetRepServerWorldTimeSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraGameStateBase::GetRepServerWorldTimeSeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.GetRepServerWorldTimeSeconds");

	ASTExtraGameStateBase_GetRepServerWorldTimeSeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.GetReConnectGameStateInfo
// (Final, Native, Public)
// Parameters:
// struct FReConnectGameStateInfo ReturnValue                    (Parm, OutParm, ReturnParm)

struct FReConnectGameStateInfo ASTExtraGameStateBase::GetReConnectGameStateInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.GetReConnectGameStateInfo");

	ASTExtraGameStateBase_GetReConnectGameStateInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.GetGameModeState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName ASTExtraGameStateBase::GetGameModeState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.GetGameModeState");

	ASTExtraGameStateBase_GetGameModeState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.GetForceJumpLoc
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraGameStateBase::GetForceJumpLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.GetForceJumpLoc");

	ASTExtraGameStateBase_GetForceJumpLoc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.GetCurCircleWave
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraGameStateBase::GetCurCircleWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.GetCurCircleWave");

	ASTExtraGameStateBase_GetCurCircleWave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.GetCurCircleState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<ECircleInfo>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ECircleInfo> ASTExtraGameStateBase::GetCurCircleState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.GetCurCircleState");

	ASTExtraGameStateBase_GetCurCircleState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.GetCanJumpLoc
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraGameStateBase::GetCanJumpLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.GetCanJumpLoc");

	ASTExtraGameStateBase_GetCanJumpLoc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.GetAirplaneStopLoc
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraGameStateBase::GetAirplaneStopLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.GetAirplaneStopLoc");

	ASTExtraGameStateBase_GetAirplaneStopLoc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.GetAirplaneStartLoc
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraGameStateBase::GetAirplaneStartLoc()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.GetAirplaneStartLoc");

	ASTExtraGameStateBase_GetAirplaneStartLoc_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastRoute
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 StartLoc                       (Parm, IsPlainOldData)
// struct FVector                 StopLoc                        (Parm, IsPlainOldData)
// struct FVector                 CanJumpLoc                     (Parm, IsPlainOldData)
// struct FVector                 ForceJumpLoc                   (Parm, IsPlainOldData)

void ASTExtraGameStateBase::BroadcastRoute(const struct FVector& StartLoc, const struct FVector& StopLoc, const struct FVector& CanJumpLoc, const struct FVector& ForceJumpLoc)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastRoute");

	ASTExtraGameStateBase_BroadcastRoute_Params params;
	params.StartLoc = StartLoc;
	params.StopLoc = StopLoc;
	params.CanJumpLoc = CanJumpLoc;
	params.ForceJumpLoc = ForceJumpLoc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastLastCircle
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 FinalWhiteCircle               (Parm, IsPlainOldData)

void ASTExtraGameStateBase::BroadcastLastCircle(const struct FVector& FinalWhiteCircle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastLastCircle");

	ASTExtraGameStateBase_BroadcastLastCircle_Params params;
	params.FinalWhiteCircle = FinalWhiteCircle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastCircleWaveOver
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraGameStateBase::BroadcastCircleWaveOver(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastCircleWaveOver");

	ASTExtraGameStateBase_BroadcastCircleWaveOver_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastCircleSizeAndPosition
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 BlueCircleSync                 (Parm, IsPlainOldData)
// struct FVector                 WhiteCircleSync                (Parm, IsPlainOldData)
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraGameStateBase::BroadcastCircleSizeAndPosition(const struct FVector& BlueCircleSync, const struct FVector& WhiteCircleSync, int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastCircleSizeAndPosition");

	ASTExtraGameStateBase_BroadcastCircleSizeAndPosition_Params params;
	params.BlueCircleSync = BlueCircleSync;
	params.WhiteCircleSync = WhiteCircleSync;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastCircleInfo
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults, NetValidate)
// Parameters:
// TEnumAsByte<ECircleInfo>       circleInfo                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 BlueCircleSync                 (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 WhiteCircleSync                (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// int                            CircleInvertedIndex            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraGameStateBase::BroadcastCircleInfo(TEnumAsByte<ECircleInfo> circleInfo, float Time, const struct FVector& BlueCircleSync, const struct FVector& WhiteCircleSync, int CircleInvertedIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastCircleInfo");

	ASTExtraGameStateBase_BroadcastCircleInfo_Params params;
	params.circleInfo = circleInfo;
	params.Time = Time;
	params.BlueCircleSync = BlueCircleSync;
	params.WhiteCircleSync = WhiteCircleSync;
	params.CircleInvertedIndex = CircleInvertedIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastAirAttackWarning
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                 airAttackAreaSrc               (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// int                            waveindex                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraGameStateBase::BroadcastAirAttackWarning(const struct FVector& airAttackAreaSrc, int waveindex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastAirAttackWarning");

	ASTExtraGameStateBase_BroadcastAirAttackWarning_Params params;
	params.airAttackAreaSrc = airAttackAreaSrc;
	params.waveindex = waveindex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastAirAttackOrder
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FAirAttackOrder         airAttackOrderSrc              (ConstParm, Parm, ReferenceParm)
// int                            waveindex                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraGameStateBase::BroadcastAirAttackOrder(const struct FAirAttackOrder& airAttackOrderSrc, int waveindex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGameStateBase.BroadcastAirAttackOrder");

	ASTExtraGameStateBase_BroadcastAirAttackOrder_Params params;
	params.airAttackOrderSrc = airAttackOrderSrc;
	params.waveindex = waveindex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraGlobalData.STExtraGlobalDataInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USTExtraGlobalData*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USTExtraGlobalData* USTExtraGlobalData::STATIC_STExtraGlobalDataInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGlobalData.STExtraGlobalDataInstance");

	USTExtraGlobalData_STExtraGlobalDataInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraGlobalData.CurVersionNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USTExtraGlobalData::CurVersionNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraGlobalData.CurVersionNumber");

	USTExtraGlobalData_CurVersionNumber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraInputInterface.MoveUp
// (Native, Public)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraInputInterface::MoveUp(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraInputInterface.MoveUp");

	USTExtraInputInterface_MoveUp_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraInputInterface.MoveRight
// (Native, Public)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraInputInterface::MoveRight(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraInputInterface.MoveRight");

	USTExtraInputInterface_MoveRight_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraInputInterface.MoveForward
// (Native, Public)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraInputInterface::MoveForward(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraInputInterface.MoveForward");

	USTExtraInputInterface_MoveForward_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.UpdateTeamMateLocAndRot
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<class ASTExtraPlayerState*> TeamMateStateArray             (Parm, ZeroConstructor)
// TArray<class UPanelWidget*>    TeamMateInfoGridArray          (ConstParm, Parm, ZeroConstructor)
// TArray<class UImage*>          TeamMateInfoImageArray         (ConstParm, Parm, ZeroConstructor)
// struct FVector                 LevelLandScapeCenter           (Parm, IsPlainOldData)
// float                          CorrectMapScale                (Parm, ZeroConstructor, IsPlainOldData)
// float                          RotateAngle                    (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraPlayerState*     myPS                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UImage*>          ArrowImageArray                (Parm, ZeroConstructor)
// struct FVector2D               MapAdjustOffset                (Parm, IsPlainOldData)
// float                          MapWindowHalfExtent            (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    OutOfRangeTeammateIndex        (Parm, OutParm, ZeroConstructor)

void USTExtraMapFunctionLibrary::STATIC_UpdateTeamMateLocAndRot(TArray<class ASTExtraPlayerState*> TeamMateStateArray, TArray<class UPanelWidget*> TeamMateInfoGridArray, TArray<class UImage*> TeamMateInfoImageArray, const struct FVector& LevelLandScapeCenter, float CorrectMapScale, float RotateAngle, class ASTExtraPlayerState* myPS, TArray<class UImage*> ArrowImageArray, const struct FVector2D& MapAdjustOffset, float MapWindowHalfExtent, TArray<int>* OutOfRangeTeammateIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.UpdateTeamMateLocAndRot");

	USTExtraMapFunctionLibrary_UpdateTeamMateLocAndRot_Params params;
	params.TeamMateStateArray = TeamMateStateArray;
	params.TeamMateInfoGridArray = TeamMateInfoGridArray;
	params.TeamMateInfoImageArray = TeamMateInfoImageArray;
	params.LevelLandScapeCenter = LevelLandScapeCenter;
	params.CorrectMapScale = CorrectMapScale;
	params.RotateAngle = RotateAngle;
	params.myPS = myPS;
	params.ArrowImageArray = ArrowImageArray;
	params.MapAdjustOffset = MapAdjustOffset;
	params.MapWindowHalfExtent = MapWindowHalfExtent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutOfRangeTeammateIndex != nullptr)
		*OutOfRangeTeammateIndex = params.OutOfRangeTeammateIndex;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.SetLeftRouteLength
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCanvasPanelSlot*        LeftRouteSlot                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UCanvasPanelSlot*        PassedRouteSlot                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          FlyingProcess                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          RouteTotalLengthInMap          (Parm, ZeroConstructor, IsPlainOldData)
// float                          MapScale                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          TopOffset                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          BottomOffset                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsWar                         (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::STATIC_SetLeftRouteLength(class UCanvasPanelSlot* LeftRouteSlot, class UCanvasPanelSlot* PassedRouteSlot, float FlyingProcess, float RouteTotalLengthInMap, float MapScale, float TopOffset, float BottomOffset, bool bIsWar)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.SetLeftRouteLength");

	USTExtraMapFunctionLibrary_SetLeftRouteLength_Params params;
	params.LeftRouteSlot = LeftRouteSlot;
	params.PassedRouteSlot = PassedRouteSlot;
	params.FlyingProcess = FlyingProcess;
	params.RouteTotalLengthInMap = RouteTotalLengthInMap;
	params.MapScale = MapScale;
	params.TopOffset = TopOffset;
	params.BottomOffset = BottomOffset;
	params.bIsWar = bIsWar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.RnederThreadSetBigCore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           isbig                          (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::STATIC_RnederThreadSetBigCore(bool isbig)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.RnederThreadSetBigCore");

	USTExtraMapFunctionLibrary_RnederThreadSetBigCore_Params params;
	params.isbig = isbig;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.MapFuncLibInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USTExtraMapFunctionLibrary* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USTExtraMapFunctionLibrary* USTExtraMapFunctionLibrary::STATIC_MapFuncLibInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.MapFuncLibInstance");

	USTExtraMapFunctionLibrary_MapFuncLibInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.MapCenterToPointVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 PointLocationInLevel           (Parm, IsPlainOldData)
// struct FVector                 LevelLandScapeCenter           (Parm, IsPlainOldData)
// float                          LevelToMapScale                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector USTExtraMapFunctionLibrary::STATIC_MapCenterToPointVector(const struct FVector& PointLocationInLevel, const struct FVector& LevelLandScapeCenter, float LevelToMapScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.MapCenterToPointVector");

	USTExtraMapFunctionLibrary_MapCenterToPointVector_Params params;
	params.PointLocationInLevel = PointLocationInLevel;
	params.LevelLandScapeCenter = LevelLandScapeCenter;
	params.LevelToMapScale = LevelToMapScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.IsPlayerOutSafeZone
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       PC                             (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraGameStateBase*   GS                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraMapFunctionLibrary::STATIC_IsPlayerOutSafeZone(class APlayerController* PC, class ASTExtraGameStateBase* GS)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.IsPlayerOutSafeZone");

	USTExtraMapFunctionLibrary_IsPlayerOutSafeZone_Params params;
	params.PC = PC;
	params.GS = GS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.IsNeedDrawGuideLine
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          WhiteCircleRadius              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               PlayerCoord                    (Parm, IsPlainOldData)
// struct FVector2D               WhiteCircleCoord               (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraMapFunctionLibrary::IsNeedDrawGuideLine(float WhiteCircleRadius, const struct FVector2D& PlayerCoord, const struct FVector2D& WhiteCircleCoord)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.IsNeedDrawGuideLine");

	USTExtraMapFunctionLibrary_IsNeedDrawGuideLine_Params params;
	params.WhiteCircleRadius = WhiteCircleRadius;
	params.PlayerCoord = PlayerCoord;
	params.WhiteCircleCoord = WhiteCircleCoord;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.IsInLevelBound
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Target                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraMapFunctionLibrary::STATIC_IsInLevelBound(class UObject* WorldContextObject, const struct FVector& Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.IsInLevelBound");

	USTExtraMapFunctionLibrary_IsInLevelBound_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetRotatedVector2D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               InputVector                    (Parm, IsPlainOldData)
// float                          RotateAngle                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D USTExtraMapFunctionLibrary::STATIC_GetRotatedVector2D(const struct FVector2D& InputVector, float RotateAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetRotatedVector2D");

	USTExtraMapFunctionLibrary_GetRotatedVector2D_Params params;
	params.InputVector = InputVector;
	params.RotateAngle = RotateAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetMapStandardPoint
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AMiniMapStandardPoint*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AMiniMapStandardPoint* USTExtraMapFunctionLibrary::STATIC_GetMapStandardPoint(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetMapStandardPoint");

	USTExtraMapFunctionLibrary_GetMapStandardPoint_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetMapRealTimeInfo
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerController* PC                             (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraGameStateBase*   GS                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 LevelLandScapeCenter           (Parm, IsPlainOldData)
// float                          LevelToMapScale                (Parm, ZeroConstructor, IsPlainOldData)
// float                          RotateAngle                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FMapRealTimeInfo        CacheMapInfo                   (Parm)
// bool                           isEntireMap                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FMapRealTimeInfo        ReturnValue                    (Parm, OutParm, ReturnParm)

struct FMapRealTimeInfo USTExtraMapFunctionLibrary::GetMapRealTimeInfo(class ASTExtraPlayerController* PC, class ASTExtraGameStateBase* GS, const struct FVector& LevelLandScapeCenter, float LevelToMapScale, float RotateAngle, const struct FMapRealTimeInfo& CacheMapInfo, bool isEntireMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetMapRealTimeInfo");

	USTExtraMapFunctionLibrary_GetMapRealTimeInfo_Params params;
	params.PC = PC;
	params.GS = GS;
	params.LevelLandScapeCenter = LevelLandScapeCenter;
	params.LevelToMapScale = LevelToMapScale;
	params.RotateAngle = RotateAngle;
	params.CacheMapInfo = CacheMapInfo;
	params.isEntireMap = isEntireMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetLevelLandscapeBounds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTExtraMapFunctionLibrary::STATIC_GetLevelLandscapeBounds(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetLevelLandscapeBounds");

	USTExtraMapFunctionLibrary_GetLevelLandscapeBounds_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetLandscapeMidPoint
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D USTExtraMapFunctionLibrary::STATIC_GetLandscapeMidPoint(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetLandscapeMidPoint");

	USTExtraMapFunctionLibrary_GetLandscapeMidPoint_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetAlivePlayerNumber
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int USTExtraMapFunctionLibrary::STATIC_GetAlivePlayerNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GetAlivePlayerNumber");

	USTExtraMapFunctionLibrary_GetAlivePlayerNumber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GameThreadSetBigCore
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           isbig                          (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::STATIC_GameThreadSetBigCore(bool isbig)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.GameThreadSetBigCore");

	USTExtraMapFunctionLibrary_GameThreadSetBigCore_Params params;
	params.isbig = isbig;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawPlayerMarkerInGrid
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerController* PC                             (Parm, ZeroConstructor, IsPlainOldData)
// class UGridSlot*               PlayerMarkerPanelSlot          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector2D               PlayerCoord                    (Parm, IsPlainOldData)
// class UPanelWidget*            PlayerMarkerImagePanel         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TEnumAsByte<EPlayerOperation>  PlayerOperation                (Parm, ZeroConstructor, IsPlainOldData)
// float                          RotateAngle                    (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::STATIC_DrawPlayerMarkerInGrid(class ASTExtraPlayerController* PC, class UGridSlot* PlayerMarkerPanelSlot, const struct FVector2D& PlayerCoord, class UPanelWidget* PlayerMarkerImagePanel, TEnumAsByte<EPlayerOperation> PlayerOperation, float RotateAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawPlayerMarkerInGrid");

	USTExtraMapFunctionLibrary_DrawPlayerMarkerInGrid_Params params;
	params.PC = PC;
	params.PlayerMarkerPanelSlot = PlayerMarkerPanelSlot;
	params.PlayerCoord = PlayerCoord;
	params.PlayerMarkerImagePanel = PlayerMarkerImagePanel;
	params.PlayerOperation = PlayerOperation;
	params.RotateAngle = RotateAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawPlayerMarker
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerController* PC                             (Parm, ZeroConstructor, IsPlainOldData)
// class UPanelWidget*            PlayerMarkerPanel              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector2D               PlayerCoord                    (Parm, IsPlainOldData)
// TEnumAsByte<EPlayerOperation>  PlayerOperation                (Parm, ZeroConstructor, IsPlainOldData)
// float                          RotateAngle                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPanelWidget*            selfArrow                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           isEntireMap                    (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::STATIC_DrawPlayerMarker(class ASTExtraPlayerController* PC, class UPanelWidget* PlayerMarkerPanel, const struct FVector2D& PlayerCoord, TEnumAsByte<EPlayerOperation> PlayerOperation, float RotateAngle, class UPanelWidget* selfArrow, bool isEntireMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawPlayerMarker");

	USTExtraMapFunctionLibrary_DrawPlayerMarker_Params params;
	params.PC = PC;
	params.PlayerMarkerPanel = PlayerMarkerPanel;
	params.PlayerCoord = PlayerCoord;
	params.PlayerOperation = PlayerOperation;
	params.RotateAngle = RotateAngle;
	params.selfArrow = selfArrow;
	params.isEntireMap = isEntireMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawGuideLine
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPaintContext           InContext                      (ConstParm, Parm, OutParm, ReferenceParm)
// float                          DashSize                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            DashColor                      (Parm, IsPlainOldData)
// float                          MapWindowExtent                (Parm, ZeroConstructor, IsPlainOldData)
// float                          MapImageExtent                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               WhiteCircleCenter              (Parm, IsPlainOldData)
// struct FVector2D               PlayerCoord                    (Parm, IsPlainOldData)
// TEnumAsByte<EMapType>          MapType                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          LineThickness                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAntiAlias                     (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::DrawGuideLine(const struct FPaintContext& InContext, float DashSize, const struct FLinearColor& DashColor, float MapWindowExtent, float MapImageExtent, const struct FVector2D& WhiteCircleCenter, const struct FVector2D& PlayerCoord, TEnumAsByte<EMapType> MapType, float LineThickness, bool bAntiAlias)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawGuideLine");

	USTExtraMapFunctionLibrary_DrawGuideLine_Params params;
	params.InContext = InContext;
	params.DashSize = DashSize;
	params.DashColor = DashColor;
	params.MapWindowExtent = MapWindowExtent;
	params.MapImageExtent = MapImageExtent;
	params.WhiteCircleCenter = WhiteCircleCenter;
	params.PlayerCoord = PlayerCoord;
	params.MapType = MapType;
	params.LineThickness = LineThickness;
	params.bAntiAlias = bAntiAlias;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawGridLine
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPaintContext           InContext                      (ConstParm, Parm, OutParm, ReferenceParm)
// float                          MapImageExtent                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            LargeGridLineColor             (Parm, IsPlainOldData)
// struct FLinearColor            SmallGridLineColor             (Parm, IsPlainOldData)
// float                          LargeGridLineThickness         (Parm, ZeroConstructor, IsPlainOldData)
// float                          SmallGridLineThickness         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDrawSmallGridLine             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAntiAlias                     (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::DrawGridLine(const struct FPaintContext& InContext, float MapImageExtent, const struct FLinearColor& LargeGridLineColor, const struct FLinearColor& SmallGridLineColor, float LargeGridLineThickness, float SmallGridLineThickness, bool bDrawSmallGridLine, bool bAntiAlias)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawGridLine");

	USTExtraMapFunctionLibrary_DrawGridLine_Params params;
	params.InContext = InContext;
	params.MapImageExtent = MapImageExtent;
	params.LargeGridLineColor = LargeGridLineColor;
	params.SmallGridLineColor = SmallGridLineColor;
	params.LargeGridLineThickness = LargeGridLineThickness;
	params.SmallGridLineThickness = SmallGridLineThickness;
	params.bDrawSmallGridLine = bDrawSmallGridLine;
	params.bAntiAlias = bAntiAlias;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawCircle
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPaintContext           InContext                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector2D               CircleCenter                   (Parm, IsPlainOldData)
// struct FLinearColor            CircleColor                    (Parm, IsPlainOldData)
// float                          CircleRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          MapWindowExtent                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               PlayerCoord                    (Parm, IsPlainOldData)
// TEnumAsByte<EMapType>          MapType                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAntiAlias                     (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::DrawCircle(const struct FPaintContext& InContext, const struct FVector2D& CircleCenter, const struct FLinearColor& CircleColor, float CircleRadius, float MapWindowExtent, const struct FVector2D& PlayerCoord, TEnumAsByte<EMapType> MapType, bool bAntiAlias)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawCircle");

	USTExtraMapFunctionLibrary_DrawCircle_Params params;
	params.InContext = InContext;
	params.CircleCenter = CircleCenter;
	params.CircleColor = CircleColor;
	params.CircleRadius = CircleRadius;
	params.MapWindowExtent = MapWindowExtent;
	params.PlayerCoord = PlayerCoord;
	params.MapType = MapType;
	params.bAntiAlias = bAntiAlias;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawAirplaneRouteInMiniMap
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPaintContext           InContext                      (ConstParm, Parm, OutParm, ReferenceParm)
// float                          DashSize                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            DashColor                      (Parm, IsPlainOldData)
// float                          MapWindowExtent                (Parm, ZeroConstructor, IsPlainOldData)
// float                          MapImageExtent                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 MapCenterToPlayer              (Parm, IsPlainOldData)
// struct FVector2D               EndCoord                       (Parm, IsPlainOldData)
// struct FVector2D               PlayerCoord                    (Parm, IsPlainOldData)
// struct FVector2D               RouteVelocity                  (Parm, IsPlainOldData)
// float                          LineThickness                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAntiAlias                     (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::DrawAirplaneRouteInMiniMap(const struct FPaintContext& InContext, float DashSize, const struct FLinearColor& DashColor, float MapWindowExtent, float MapImageExtent, const struct FVector& MapCenterToPlayer, const struct FVector2D& EndCoord, const struct FVector2D& PlayerCoord, const struct FVector2D& RouteVelocity, float LineThickness, bool bAntiAlias)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawAirplaneRouteInMiniMap");

	USTExtraMapFunctionLibrary_DrawAirplaneRouteInMiniMap_Params params;
	params.InContext = InContext;
	params.DashSize = DashSize;
	params.DashColor = DashColor;
	params.MapWindowExtent = MapWindowExtent;
	params.MapImageExtent = MapImageExtent;
	params.MapCenterToPlayer = MapCenterToPlayer;
	params.EndCoord = EndCoord;
	params.PlayerCoord = PlayerCoord;
	params.RouteVelocity = RouteVelocity;
	params.LineThickness = LineThickness;
	params.bAntiAlias = bAntiAlias;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawAirplaneRouteInEntiremap
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FPaintContext           InContext                      (ConstParm, Parm, OutParm, ReferenceParm)
// float                          DashSize                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            DashColor                      (Parm, IsPlainOldData)
// float                          MapWindowExtent                (Parm, ZeroConstructor, IsPlainOldData)
// float                          MapImageExtent                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          MinimapWindowExtent            (Parm, ZeroConstructor, IsPlainOldData)
// float                          MiniMapImageExtent             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 MapCenterToPlayer              (Parm, IsPlainOldData)
// struct FVector2D               StartCoord                     (Parm, IsPlainOldData)
// struct FVector2D               EndCoord                       (Parm, IsPlainOldData)
// float                          LineThickness                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bAntiAlias                     (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::DrawAirplaneRouteInEntiremap(const struct FPaintContext& InContext, float DashSize, const struct FLinearColor& DashColor, float MapWindowExtent, float MapImageExtent, float MinimapWindowExtent, float MiniMapImageExtent, const struct FVector& MapCenterToPlayer, const struct FVector2D& StartCoord, const struct FVector2D& EndCoord, float LineThickness, bool bAntiAlias)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.DrawAirplaneRouteInEntiremap");

	USTExtraMapFunctionLibrary_DrawAirplaneRouteInEntiremap_Params params;
	params.InContext = InContext;
	params.DashSize = DashSize;
	params.DashColor = DashColor;
	params.MapWindowExtent = MapWindowExtent;
	params.MapImageExtent = MapImageExtent;
	params.MinimapWindowExtent = MinimapWindowExtent;
	params.MiniMapImageExtent = MiniMapImageExtent;
	params.MapCenterToPlayer = MapCenterToPlayer;
	params.StartCoord = StartCoord;
	params.EndCoord = EndCoord;
	params.LineThickness = LineThickness;
	params.bAntiAlias = bAntiAlias;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.CalPlayerToMarkerDist
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*       PC                             (Parm, ZeroConstructor, IsPlainOldData)
// float                          LevelLandScapeExtent           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               MarkerInMap                    (Parm, IsPlainOldData)
// struct FVector                 LevelLandScapeCenter           (Parm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTExtraMapFunctionLibrary::STATIC_CalPlayerToMarkerDist(class APlayerController* PC, float LevelLandScapeExtent, const struct FVector2D& MarkerInMap, const struct FVector& LevelLandScapeCenter)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.CalPlayerToMarkerDist");

	USTExtraMapFunctionLibrary_CalPlayerToMarkerDist_Params params;
	params.PC = PC;
	params.LevelLandScapeExtent = LevelLandScapeExtent;
	params.MarkerInMap = MarkerInMap;
	params.LevelLandScapeCenter = LevelLandScapeCenter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.CalPlayerToMarkerDelYawAndDist
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class APlayerController*       PC                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 MarkerAlign                    (Parm, IsPlainOldData)
// float                          LevelLandScapeExtent           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 LandscapeCenter                (Parm, IsPlainOldData)
// float                          DelYaw                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Dist                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void USTExtraMapFunctionLibrary::STATIC_CalPlayerToMarkerDelYawAndDist(class APlayerController* PC, const struct FVector& MarkerAlign, float LevelLandScapeExtent, const struct FVector& LandscapeCenter, float* DelYaw, float* Dist)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.CalPlayerToMarkerDelYawAndDist");

	USTExtraMapFunctionLibrary_CalPlayerToMarkerDelYawAndDist_Params params;
	params.PC = PC;
	params.MarkerAlign = MarkerAlign;
	params.LevelLandScapeExtent = LevelLandScapeExtent;
	params.LandscapeCenter = LandscapeCenter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (DelYaw != nullptr)
		*DelYaw = params.DelYaw;
	if (Dist != nullptr)
		*Dist = params.Dist;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.CalPlayerRotationToPointDelYaw
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*       PC                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 TargetPoint                    (Parm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTExtraMapFunctionLibrary::CalPlayerRotationToPointDelYaw(class APlayerController* PC, const struct FVector& TargetPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.CalPlayerRotationToPointDelYaw");

	USTExtraMapFunctionLibrary_CalPlayerRotationToPointDelYaw_Params params;
	params.PC = PC;
	params.TargetPoint = TargetPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraMapFunctionLibrary.AdjustMapPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UCanvasPanelSlot*        MapCanvas                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector2D               MapCenterToPlayer              (Parm, IsPlainOldData)
// float                          RotateAngle                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          MiniMapWindowHalfSize          (Parm, ZeroConstructor, IsPlainOldData)
// float                          MapImageSize                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D USTExtraMapFunctionLibrary::STATIC_AdjustMapPosition(class UCanvasPanelSlot* MapCanvas, const struct FVector2D& MapCenterToPlayer, float RotateAngle, float MiniMapWindowHalfSize, float MapImageSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraMapFunctionLibrary.AdjustMapPosition");

	USTExtraMapFunctionLibrary_AdjustMapPosition_Params params;
	params.MapCanvas = MapCanvas;
	params.MapCenterToPlayer = MapCenterToPlayer;
	params.RotateAngle = RotateAngle;
	params.MiniMapWindowHalfSize = MiniMapWindowHalfSize;
	params.MapImageSize = MapImageSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.WriteGameLogForRideParachute
// (Final, Native, Private, BlueprintCallable)

void ASTExtraPlayerCharacter::WriteGameLogForRideParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.WriteGameLogForRideParachute");

	ASTExtraPlayerCharacter_WriteGameLogForRideParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.WriteGameLogForLeaveParachute
// (Final, Native, Private, BlueprintCallable)

void ASTExtraPlayerCharacter::WriteGameLogForLeaveParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.WriteGameLogForLeaveParachute");

	ASTExtraPlayerCharacter_WriteGameLogForLeaveParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.UpdateIndoorState
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           IsIndoor                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::UpdateIndoorState(bool IsIndoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.UpdateIndoorState");

	ASTExtraPlayerCharacter_UpdateIndoorState_Params params;
	params.IsIndoor = IsIndoor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.TouchCancelSkillLock
// (Final, Native, Public, BlueprintCallable)

void ASTExtraPlayerCharacter::TouchCancelSkillLock()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.TouchCancelSkillLock");

	ASTExtraPlayerCharacter_TouchCancelSkillLock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.SyncDeadTombBoxToController
// (Native, Public)
// Parameters:
// class APlayerTombBox*          _DeadTombBox                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::SyncDeadTombBoxToController(class APlayerTombBox* _DeadTombBox)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.SyncDeadTombBoxToController");

	ASTExtraPlayerCharacter_SyncDeadTombBoxToController_Params params;
	params._DeadTombBox = _DeadTombBox;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.ShouldTriggerEntryEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUTSkillEntry                  EntryEvent                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerCharacter::ShouldTriggerEntryEvent(EUTSkillEntry EntryEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.ShouldTriggerEntryEvent");

	ASTExtraPlayerCharacter_ShouldTriggerEntryEvent_Params params;
	params.EntryEvent = EntryEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.ShouldDropBagItem
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FItemDefineID           SkillItemID                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerCharacter::ShouldDropBagItem(const struct FItemDefineID& SkillItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.ShouldDropBagItem");

	ASTExtraPlayerCharacter_ShouldDropBagItem_Params params;
	params.SkillItemID = SkillItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.SetSwimRotateX_Ex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewSwimRotateX                 (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::SetSwimRotateX_Ex(float NewSwimRotateX)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.SetSwimRotateX_Ex");

	ASTExtraPlayerCharacter_SetSwimRotateX_Ex_Params params;
	params.NewSwimRotateX = NewSwimRotateX;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.SetParachuteState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EParachuteState>   State                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::SetParachuteState(TEnumAsByte<EParachuteState> State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.SetParachuteState");

	ASTExtraPlayerCharacter_SetParachuteState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.SetAnimationAkSwitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 SwitchGroup                    (Parm, ZeroConstructor)
// struct FString                 SwitchState                    (Parm, ZeroConstructor)

void ASTExtraPlayerCharacter::SetAnimationAkSwitch(const struct FString& SwitchGroup, const struct FString& SwitchState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.SetAnimationAkSwitch");

	ASTExtraPlayerCharacter_SetAnimationAkSwitch_Params params;
	params.SwitchGroup = SwitchGroup;
	params.SwitchState = SwitchState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.SetAnimationAkRTPC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 RTPCName                       (Parm, ZeroConstructor)
// float                          RTPCValue                      (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::SetAnimationAkRTPC(const struct FString& RTPCName, float RTPCValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.SetAnimationAkRTPC");

	ASTExtraPlayerCharacter_SetAnimationAkRTPC_Params params;
	params.RTPCName = RTPCName;
	params.RTPCValue = RTPCValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.ServerSetBulletFlySoundData
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class ASTExtraPlayerCharacter* PlayerCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraShootWeapon*     InstigateWeapon                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 FlySoundPos                    (Parm, IsPlainOldData)

void ASTExtraPlayerCharacter::ServerSetBulletFlySoundData(class ASTExtraPlayerCharacter* PlayerCharacter, class ASTExtraShootWeapon* InstigateWeapon, const struct FVector& FlySoundPos)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.ServerSetBulletFlySoundData");

	ASTExtraPlayerCharacter_ServerSetBulletFlySoundData_Params params;
	params.PlayerCharacter = PlayerCharacter;
	params.InstigateWeapon = InstigateWeapon;
	params.FlySoundPos = FlySoundPos;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.ReleaseTrigger
// (Native, Public, BlueprintCallable)
// Parameters:
// EControllerHand                Hand                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::ReleaseTrigger(EControllerHand Hand)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.ReleaseTrigger");

	ASTExtraPlayerCharacter_ReleaseTrigger_Params params;
	params.Hand = Hand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.PushTrigger
// (Native, Public, BlueprintCallable)
// Parameters:
// EControllerHand                Hand                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::PushTrigger(EControllerHand Hand)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.PushTrigger");

	ASTExtraPlayerCharacter_PushTrigger_Params params;
	params.Hand = Hand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.ProneWithTerrain
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                CharacterRotation              (Parm, IsPlainOldData)
// bool                           isMoving                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Offset                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          deap                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::ProneWithTerrain(const struct FRotator& CharacterRotation, bool isMoving, float Offset, float deap)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.ProneWithTerrain");

	ASTExtraPlayerCharacter_ProneWithTerrain_Params params;
	params.CharacterRotation = CharacterRotation;
	params.isMoving = isMoving;
	params.Offset = Offset;
	params.deap = deap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerCharacter.OnSkillFinishedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EUTSkillStopReason             StopReason                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::OnSkillFinishedDelegate__DelegateSignature(EUTSkillStopReason StopReason)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerCharacter.OnSkillFinishedDelegate__DelegateSignature");

	ASTExtraPlayerCharacter_OnSkillFinishedDelegate__DelegateSignature_Params params;
	params.StopReason = StopReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.OnRep_TriggerEarSoundNotify
// (Final, Native, Public)

void ASTExtraPlayerCharacter::OnRep_TriggerEarSoundNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.OnRep_TriggerEarSoundNotify");

	ASTExtraPlayerCharacter_OnRep_TriggerEarSoundNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.OnRep_ParachuteState
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EParachuteState>   State                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::OnRep_ParachuteState(TEnumAsByte<EParachuteState> State)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.OnRep_ParachuteState");

	ASTExtraPlayerCharacter_OnRep_ParachuteState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.OnRank
// (Final, Native, Public)
// Parameters:
// int                            Kills                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Rank                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::OnRank(int Kills, int Rank)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.OnRank");

	ASTExtraPlayerCharacter_OnRank_Params params;
	params.Kills = Kills;
	params.Rank = Rank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerCharacter.OnHasTombBoxesAvailableChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                           bIsAvailable                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::OnHasTombBoxesAvailableChanged__DelegateSignature(bool bIsAvailable)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerCharacter.OnHasTombBoxesAvailableChanged__DelegateSignature");

	ASTExtraPlayerCharacter_OnHasTombBoxesAvailableChanged__DelegateSignature_Params params;
	params.bIsAvailable = bIsAvailable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerCharacter.OnHasPickupPropsAvailableChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                           bIsAvailable                   (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::OnHasPickupPropsAvailableChanged__DelegateSignature(bool bIsAvailable)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerCharacter.OnHasPickupPropsAvailableChanged__DelegateSignature");

	ASTExtraPlayerCharacter_OnHasPickupPropsAvailableChanged__DelegateSignature_Params params;
	params.bIsAvailable = bIsAvailable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.OnAvatarEquippedSucc
// (Final, Native, Protected)
// Parameters:
// EAvatarSlotType                slotType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isEquipped                     (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::OnAvatarEquippedSucc(EAvatarSlotType slotType, bool isEquipped)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.OnAvatarEquippedSucc");

	ASTExtraPlayerCharacter_OnAvatarEquippedSucc_Params params;
	params.slotType = slotType;
	params.isEquipped = isEquipped;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.IsUnderRoof
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerCharacter::IsUnderRoof()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.IsUnderRoof");

	ASTExtraPlayerCharacter_IsUnderRoof_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.IsIndoor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerCharacter::IsIndoor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.IsIndoor");

	ASTExtraPlayerCharacter_IsIndoor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.IsGrenadeEmpty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerCharacter::IsGrenadeEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.IsGrenadeEmpty");

	ASTExtraPlayerCharacter_IsGrenadeEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.IsAudioTestEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerCharacter::IsAudioTestEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.IsAudioTestEnabled");

	ASTExtraPlayerCharacter_IsAudioTestEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.HandleParachuteStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EParachuteState>   NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::HandleParachuteStateChanged(TEnumAsByte<EParachuteState> NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.HandleParachuteStateChanged");

	ASTExtraPlayerCharacter_HandleParachuteStateChanged_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.HandleBulletOverlap
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AActor*                  BulletActor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// TArray<struct FHitResult>      HitResults                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void ASTExtraPlayerCharacter::HandleBulletOverlap(class AActor* BulletActor, const struct FHitResult& HitResult, TArray<struct FHitResult> HitResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.HandleBulletOverlap");

	ASTExtraPlayerCharacter_HandleBulletOverlap_Params params;
	params.BulletActor = BulletActor;
	params.HitResult = HitResult;
	params.HitResults = HitResults;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetThirdPersonSpringArm
// (Event, Public, BlueprintEvent)
// Parameters:
// class USpringArmComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USpringArmComponent* ASTExtraPlayerCharacter::GetThirdPersonSpringArm()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetThirdPersonSpringArm");

	ASTExtraPlayerCharacter_GetThirdPersonSpringArm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetThirdPersonCamera
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCameraComponent* ASTExtraPlayerCharacter::GetThirdPersonCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetThirdPersonCamera");

	ASTExtraPlayerCharacter_GetThirdPersonCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetSwimRotateX_Ex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraPlayerCharacter::GetSwimRotateX_Ex()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetSwimRotateX_Ex");

	ASTExtraPlayerCharacter_GetSwimRotateX_Ex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetScopeSpringArm
// (Event, Public, BlueprintEvent)
// Parameters:
// class USpringArmComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USpringArmComponent* ASTExtraPlayerCharacter::GetScopeSpringArm()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetScopeSpringArm");

	ASTExtraPlayerCharacter_GetScopeSpringArm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetScopeCamera
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCameraComponent* ASTExtraPlayerCharacter::GetScopeCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetScopeCamera");

	ASTExtraPlayerCharacter_GetScopeCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetPlayerControllerSafety
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerController* ASTExtraPlayerCharacter::GetPlayerControllerSafety()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetPlayerControllerSafety");

	ASTExtraPlayerCharacter_GetPlayerControllerSafety_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetIndoorFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraPlayerCharacter::GetIndoorFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetIndoorFactor");

	ASTExtraPlayerCharacter_GetIndoorFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetFPPSpringArm
// (Event, Public, BlueprintEvent)
// Parameters:
// class USpringArmComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USpringArmComponent* ASTExtraPlayerCharacter::GetFPPSpringArm()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetFPPSpringArm");

	ASTExtraPlayerCharacter_GetFPPSpringArm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetFPPCamera
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCameraComponent* ASTExtraPlayerCharacter::GetFPPCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetFPPCamera");

	ASTExtraPlayerCharacter_GetFPPCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetFirstPersonSpringArm
// (Event, Public, BlueprintEvent)
// Parameters:
// class USpringArmComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USpringArmComponent* ASTExtraPlayerCharacter::GetFirstPersonSpringArm()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetFirstPersonSpringArm");

	ASTExtraPlayerCharacter_GetFirstPersonSpringArm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetFirstPersonCamera
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCameraComponent* ASTExtraPlayerCharacter::GetFirstPersonCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetFirstPersonCamera");

	ASTExtraPlayerCharacter_GetFirstPersonCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.GetBonePos
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraPlayerCharacter::GetBonePos(const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.GetBonePos");

	ASTExtraPlayerCharacter_GetBonePos_Params params;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.FindWeaponAvatarIDFromWeaponAvatarList
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            weaponItemID                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerCharacter::FindWeaponAvatarIDFromWeaponAvatarList(int weaponItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.FindWeaponAvatarIDFromWeaponAvatarList");

	ASTExtraPlayerCharacter_FindWeaponAvatarIDFromWeaponAvatarList_Params params;
	params.weaponItemID = weaponItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.FindEquipmentAvatarIDFromEquipmentAvatarList
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            equipmentItemID                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerCharacter::FindEquipmentAvatarIDFromEquipmentAvatarList(int equipmentItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.FindEquipmentAvatarIDFromEquipmentAvatarList");

	ASTExtraPlayerCharacter_FindEquipmentAvatarIDFromEquipmentAvatarList_Params params;
	params.equipmentItemID = equipmentItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.DoMoveRight
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::DoMoveRight(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.DoMoveRight");

	ASTExtraPlayerCharacter_DoMoveRight_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.DoMoveForward
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::DoMoveForward(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.DoMoveForward");

	ASTExtraPlayerCharacter_DoMoveForward_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.DoDoorInteractNetwork
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class APUBGDoor*               Door                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsExtraDoor                    (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::DoDoorInteractNetwork(class APUBGDoor* Door, bool IsExtraDoor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.DoDoorInteractNetwork");

	ASTExtraPlayerCharacter_DoDoorInteractNetwork_Params params;
	params.Door = Door;
	params.IsExtraDoor = IsExtraDoor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.DoDoorInteractAction
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerCharacter::DoDoorInteractAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.DoDoorInteractAction");

	ASTExtraPlayerCharacter_DoDoorInteractAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.ClearHPUI
// (Native, Public)

void ASTExtraPlayerCharacter::ClearHPUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.ClearHPUI");

	ASTExtraPlayerCharacter_ClearHPUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.CheckScopePP
// (Final, Native, Public)

void ASTExtraPlayerCharacter::CheckScopePP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.CheckScopePP");

	ASTExtraPlayerCharacter_CheckScopePP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.AddControllerYawInput
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::AddControllerYawInput(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.AddControllerYawInput");

	ASTExtraPlayerCharacter_AddControllerYawInput_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerCharacter.AddControllerPitchInput
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Val                            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerCharacter::AddControllerPitchInput(float Val)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerCharacter.AddControllerPitchInput");

	ASTExtraPlayerCharacter_AddControllerPitchInput_Params params;
	params.Val = Val;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.RespondToPawnRescueingStatusChange
// (Final, Native, Public)
// Parameters:
// class ACharacter*              _helpWho                       (Parm, ZeroConstructor, IsPlainOldData)
// class ACharacter*              _ownerPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsTurningInto                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          RemainingRescueTime            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsFirstPlayerHelper            (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerState::RespondToPawnRescueingStatusChange(class ACharacter* _helpWho, class ACharacter* _ownerPawn, bool IsTurningInto, float RemainingRescueTime, bool IsFirstPlayerHelper)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.RespondToPawnRescueingStatusChange");

	ASTExtraPlayerState_RespondToPawnRescueingStatusChange_Params params;
	params._helpWho = _helpWho;
	params._ownerPawn = _ownerPawn;
	params.IsTurningInto = IsTurningInto;
	params.RemainingRescueTime = RemainingRescueTime;
	params.IsFirstPlayerHelper = IsFirstPlayerHelper;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.RespondToPawnCanRescueOtherStatusChange
// (Final, Native, Public)
// Parameters:
// class ASTExtraBaseCharacter*   _helpWho                       (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   _ownerPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsTurningInto                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerState::RespondToPawnCanRescueOtherStatusChange(class ASTExtraBaseCharacter* _helpWho, class ASTExtraBaseCharacter* _ownerPawn, bool IsTurningInto)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.RespondToPawnCanRescueOtherStatusChange");

	ASTExtraPlayerState_RespondToPawnCanRescueOtherStatusChange_Params params;
	params._helpWho = _helpWho;
	params._ownerPawn = _ownerPawn;
	params.IsTurningInto = IsTurningInto;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.RespondToPawnBreathChange
// (Final, Native, Public)
// Parameters:
// float                          _health                        (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECharacterHealthStatus> _healthStatus                  (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   param2                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerState::RespondToPawnBreathChange(float _health, TEnumAsByte<ECharacterHealthStatus> _healthStatus, class ASTExtraBaseCharacter* param2)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.RespondToPawnBreathChange");

	ASTExtraPlayerState_RespondToPawnBreathChange_Params params;
	params._health = _health;
	params._healthStatus = _healthStatus;
	params.param2 = param2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.RefreshFollowMark
// (Final, Native, Public)

void ASTExtraPlayerState::RefreshFollowMark()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.RefreshFollowMark");

	ASTExtraPlayerState_RefreshFollowMark_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.PlayersCountOnMyPlane
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerState::PlayersCountOnMyPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.PlayersCountOnMyPlane");

	ASTExtraPlayerState_PlayersCountOnMyPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_TeamMatePlayerStateList
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_TeamMatePlayerStateList()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_TeamMatePlayerStateList");

	ASTExtraPlayerState_OnRep_TeamMatePlayerStateList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_TeamMatePlayerStateIndex
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_TeamMatePlayerStateIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_TeamMatePlayerStateIndex");

	ASTExtraPlayerState_OnRep_TeamMatePlayerStateIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayersCountOnPlane
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_PlayersCountOnPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayersCountOnPlane");

	ASTExtraPlayerState_OnRep_PlayersCountOnPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerReconnectEvent
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_PlayerReconnectEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerReconnectEvent");

	ASTExtraPlayerState_OnRep_PlayerReconnectEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerName
// (Native, Public)

void ASTExtraPlayerState::OnRep_PlayerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerName");

	ASTExtraPlayerState_OnRep_PlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerLostConnectionEvent
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_PlayerLostConnectionEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerLostConnectionEvent");

	ASTExtraPlayerState_OnRep_PlayerLostConnectionEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerLiveState
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_PlayerLiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerLiveState");

	ASTExtraPlayerState_OnRep_PlayerLiveState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerKillsChange
// (Native, Public)

void ASTExtraPlayerState::OnRep_PlayerKillsChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerKillsChange");

	ASTExtraPlayerState_OnRep_PlayerKillsChange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerIsFollowing
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_PlayerIsFollowing()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerIsFollowing");

	ASTExtraPlayerState_OnRep_PlayerIsFollowing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerExitGameEvent
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_PlayerExitGameEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_PlayerExitGameEvent");

	ASTExtraPlayerState_OnRep_PlayerExitGameEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_MapMarkNotify
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_MapMarkNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_MapMarkNotify");

	ASTExtraPlayerState_OnRep_MapMarkNotify_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_HPChanged
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_HPChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_HPChanged");

	ASTExtraPlayerState_OnRep_HPChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_BreathChanged
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_BreathChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_BreathChanged");

	ASTExtraPlayerState_OnRep_BreathChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.OnRep_BPS
// (Final, Native, Public)

void ASTExtraPlayerState::OnRep_BPS()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.OnRep_BPS");

	ASTExtraPlayerState_OnRep_BPS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerState.OnPlayerKillsChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraPlayerState::OnPlayerKillsChangeDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerState.OnPlayerKillsChangeDelegate__DelegateSignature");

	ASTExtraPlayerState_OnPlayerKillsChangeDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraPlayerState.OnLocalCharacterHPChangeDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                          currentHP                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ratioHP                        (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerState::OnLocalCharacterHPChangeDelegate__DelegateSignature(float currentHP, float ratioHP)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraPlayerState.OnLocalCharacterHPChangeDelegate__DelegateSignature");

	ASTExtraPlayerState_OnLocalCharacterHPChangeDelegate__DelegateSignature_Params params;
	params.currentHP = currentHP;
	params.ratioHP = ratioHP;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraPlayerState.IsSurvivedAloneInTheTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerState::IsSurvivedAloneInTheTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.IsSurvivedAloneInTheTeam");

	ASTExtraPlayerState_IsSurvivedAloneInTheTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.IsSinglePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerState::IsSinglePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.IsSinglePlayer");

	ASTExtraPlayerState_IsSinglePlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.IsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ASTExtraPlayerState::IsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.IsAlive");

	ASTExtraPlayerState_IsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.GetUserIDByMemberID
// (Native, Public)
// Parameters:
// int                            memberID                       (Parm, ZeroConstructor, IsPlainOldData)
// uint32_t                       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

uint32_t ASTExtraPlayerState::GetUserIDByMemberID(int memberID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.GetUserIDByMemberID");

	ASTExtraPlayerState_GetUserIDByMemberID_Params params;
	params.memberID = memberID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.GetTeamMatePlayerStateList
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class ASTExtraPlayerState*> OutList                        (Parm, OutParm, ZeroConstructor)
// bool                           ExcludeMyself                  (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerState::GetTeamMatePlayerStateList(bool ExcludeMyself, TArray<class ASTExtraPlayerState*>* OutList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.GetTeamMatePlayerStateList");

	ASTExtraPlayerState_GetTeamMatePlayerStateList_Params params;
	params.ExcludeMyself = ExcludeMyself;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutList != nullptr)
		*OutList = params.OutList;
}


// Function ShadowTrackerExtra.STExtraPlayerState.GetTeammateIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerState*     Teammate                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerState::GetTeammateIndex(class ASTExtraPlayerState* Teammate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.GetTeammateIndex");

	ASTExtraPlayerState_GetTeammateIndex_Params params;
	params.Teammate = Teammate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.GetPlayerTeamIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ASTExtraPlayerState::GetPlayerTeamIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.GetPlayerTeamIndex");

	ASTExtraPlayerState_GetPlayerTeamIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.GetPlayerMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraPlayerState::GetPlayerMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.GetPlayerMaxHealth");

	ASTExtraPlayerState_GetPlayerMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.GetPlayerHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraPlayerState::GetPlayerHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.GetPlayerHealth");

	ASTExtraPlayerState_GetPlayerHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.GetPlayerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* ASTExtraPlayerState::GetPlayerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.GetPlayerCharacter");

	ASTExtraPlayerState_GetPlayerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.GetMaxEnegyBuff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraPlayerState::GetMaxEnegyBuff()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.GetMaxEnegyBuff");

	ASTExtraPlayerState_GetMaxEnegyBuff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.GetBreathPercentage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraPlayerState::GetBreathPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.GetBreathPercentage");

	ASTExtraPlayerState_GetBreathPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.CalculateEnegyStage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EPlayerEnegyStage> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EPlayerEnegyStage> ASTExtraPlayerState::CalculateEnegyStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.CalculateEnegyStage");

	ASTExtraPlayerState_CalculateEnegyStage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraPlayerState.AddEnegySafety
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          AddVal                         (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraPlayerState::AddEnegySafety(float AddVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraPlayerState.AddEnegySafety");

	ASTExtraPlayerState_AddEnegySafety_Params params;
	params.AddVal = AddVal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeaponBulletBase.ResetBulletDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeaponBulletBase::ResetBulletDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeaponBulletBase.ResetBulletDelegate__DelegateSignature");

	ASTExtraShootWeaponBulletBase_ResetBulletDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeaponBulletBase.OnImpactDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FHitResult              HitInfo                        (Parm, IsPlainOldData)

void ASTExtraShootWeaponBulletBase::OnImpactDelegate__DelegateSignature(const struct FHitResult& HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeaponBulletBase.OnImpactDelegate__DelegateSignature");

	ASTExtraShootWeaponBulletBase_OnImpactDelegate__DelegateSignature_Params params;
	params.HitInfo = HitInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraShootWeaponBulletBase.OnImpact
// (Native, Protected, HasOutParms)
// Parameters:
// struct FHitResult              _ImpactResult                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ASTExtraShootWeaponBulletBase::OnImpact(const struct FHitResult& _ImpactResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraShootWeaponBulletBase.OnImpact");

	ASTExtraShootWeaponBulletBase_OnImpact_Params params;
	params._ImpactResult = _ImpactResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.STExtraShootWeaponBulletBase.LaunchBulletDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void ASTExtraShootWeaponBulletBase::LaunchBulletDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.STExtraShootWeaponBulletBase.LaunchBulletDelegate__DelegateSignature");

	ASTExtraShootWeaponBulletBase_LaunchBulletDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraUIUtils.PrintGameLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 LogContent                     (Parm, ZeroConstructor)

void USTExtraUIUtils::STATIC_PrintGameLog(const struct FString& LogContent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraUIUtils.PrintGameLog");

	USTExtraUIUtils_PrintGameLog_Params params;
	params.LogContent = LogContent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraUIUtils.GetOwningPlayerRoleID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUAEUserWidget*          UAEUserWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USTExtraUIUtils::STATIC_GetOwningPlayerRoleID(class UUAEUserWidget* UAEUserWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraUIUtils.GetOwningPlayerRoleID");

	USTExtraUIUtils_GetOwningPlayerRoleID_Params params;
	params.UAEUserWidget = UAEUserWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraUIUtils.GetOwningPlayerPawnOrVehicleDriver
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUAEUserWidget*          UAEUserWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ASTExtraPlayerCharacter* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerCharacter* USTExtraUIUtils::STATIC_GetOwningPlayerPawnOrVehicleDriver(class UUAEUserWidget* UAEUserWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraUIUtils.GetOwningPlayerPawnOrVehicleDriver");

	USTExtraUIUtils_GetOwningPlayerPawnOrVehicleDriver_Params params;
	params.UAEUserWidget = UAEUserWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraUIUtils.GetOwningPlayerOpenID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUAEUserWidget*          UAEUserWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USTExtraUIUtils::STATIC_GetOwningPlayerOpenID(class UUAEUserWidget* UAEUserWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraUIUtils.GetOwningPlayerOpenID");

	USTExtraUIUtils_GetOwningPlayerOpenID_Params params;
	params.UAEUserWidget = UAEUserWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraUIUtils.GetOwningPlayerNoDefault
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUAEUserWidget*          UAEUserWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ASTExtraPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerController* USTExtraUIUtils::STATIC_GetOwningPlayerNoDefault(class UUAEUserWidget* UAEUserWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraUIUtils.GetOwningPlayerNoDefault");

	USTExtraUIUtils_GetOwningPlayerNoDefault_Params params;
	params.UAEUserWidget = UAEUserWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraUIUtils.GetOwningPlayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUAEUserWidget*          UAEUserWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ASTExtraPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerController* USTExtraUIUtils::STATIC_GetOwningPlayer(class UUAEUserWidget* UAEUserWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraUIUtils.GetOwningPlayer");

	USTExtraUIUtils_GetOwningPlayer_Params params;
	params.UAEUserWidget = UAEUserWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraUIUtils.GetFloatAsStringWithPrecision
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          TheFloat                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            Precision                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IncludeLeadingZero             (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText USTExtraUIUtils::STATIC_GetFloatAsStringWithPrecision(float TheFloat, int Precision, bool IncludeLeadingZero)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraUIUtils.GetFloatAsStringWithPrecision");

	USTExtraUIUtils_GetFloatAsStringWithPrecision_Params params;
	params.TheFloat = TheFloat;
	params.Precision = Precision;
	params.IncludeLeadingZero = IncludeLeadingZero;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraUIUtils.GetCurPlayerState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUAEUserWidget*          UAEUserWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ASTExtraPlayerState*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerState* USTExtraUIUtils::STATIC_GetCurPlayerState(class UUAEUserWidget* UAEUserWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraUIUtils.GetCurPlayerState");

	USTExtraUIUtils_GetCurPlayerState_Params params;
	params.UAEUserWidget = UAEUserWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraUIUtils.GetBattleID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UUAEUserWidget*          UAEUserWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USTExtraUIUtils::STATIC_GetBattleID(class UUAEUserWidget* UAEUserWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraUIUtils.GetBattleID");

	USTExtraUIUtils_GetBattleID_Params params;
	params.UAEUserWidget = UAEUserWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleMovementComponent4W.OnDriverRide
// (Final, Native, Public)

void USTExtraVehicleMovementComponent4W::OnDriverRide()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleMovementComponent4W.OnDriverRide");

	USTExtraVehicleMovementComponent4W_OnDriverRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleMovementComponent4W.OnDriverLeave
// (Final, Native, Public)

void USTExtraVehicleMovementComponent4W::OnDriverLeave()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleMovementComponent4W.OnDriverLeave");

	USTExtraVehicleMovementComponent4W_OnDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleMovementComponent4W.HandleOnSeatDetached
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraVehicleMovementComponent4W::HandleOnSeatDetached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleMovementComponent4W.HandleOnSeatDetached");

	USTExtraVehicleMovementComponent4W_HandleOnSeatDetached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleMovementComponent4W.HandleOnSeatChanged
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        LastSeatType                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            LastSeatIdx                    (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        NewSeatType                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            NewSeatIdx                     (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraVehicleMovementComponent4W::HandleOnSeatChanged(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType LastSeatType, int LastSeatIdx, ESTExtraVehicleSeatType NewSeatType, int NewSeatIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleMovementComponent4W.HandleOnSeatChanged");

	USTExtraVehicleMovementComponent4W_HandleOnSeatChanged_Params params;
	params.Character = Character;
	params.LastSeatType = LastSeatType;
	params.LastSeatIdx = LastSeatIdx;
	params.NewSeatType = NewSeatType;
	params.NewSeatIdx = NewSeatIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleMovementComponent4W.HandleOnSeatAttached
// (Final, Native, Protected)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIdx                        (Parm, ZeroConstructor, IsPlainOldData)

void USTExtraVehicleMovementComponent4W::HandleOnSeatAttached(class ASTExtraPlayerCharacter* Character, ESTExtraVehicleSeatType SeatType, int SeatIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleMovementComponent4W.HandleOnSeatAttached");

	USTExtraVehicleMovementComponent4W_HandleOnSeatAttached_Params params;
	params.Character = Character;
	params.SeatType = SeatType;
	params.SeatIdx = SeatIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraVehicleUtils.IsPassenger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraVehicleUtils::STATIC_IsPassenger(class ASTExtraBaseCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleUtils.IsPassenger");

	USTExtraVehicleUtils_IsPassenger_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleUtils.IsDriver
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTExtraVehicleUtils::STATIC_IsDriver(class ASTExtraBaseCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleUtils.IsDriver");

	USTExtraVehicleUtils_IsDriver_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleUtils.GetVehicleUserComp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleUserComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UVehicleUserComponent* USTExtraVehicleUtils::STATIC_GetVehicleUserComp(class ASTExtraBaseCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleUtils.GetVehicleUserComp");

	USTExtraVehicleUtils_GetVehicleUserComp_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleUtils.GetVehiclePartByBoneName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     Vehicle                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// EAvatarDamagePosition          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAvatarDamagePosition USTExtraVehicleUtils::STATIC_GetVehiclePartByBoneName(class ASTExtraVehicleBase* Vehicle, const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleUtils.GetVehiclePartByBoneName");

	USTExtraVehicleUtils_GetVehiclePartByBoneName_Params params;
	params.Vehicle = Vehicle;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleUtils.GetVehicleInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     VH                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USTExtraVehicleUtils::STATIC_GetVehicleInfo(class ASTExtraVehicleBase* VH)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleUtils.GetVehicleInfo");

	USTExtraVehicleUtils_GetVehicleInfo_Params params;
	params.VH = VH;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleUtils.GetFirstVehicleUserComp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)
// class UVehicleUserComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UVehicleUserComponent* USTExtraVehicleUtils::STATIC_GetFirstVehicleUserComp(class UWorld* World)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleUtils.GetFirstVehicleUserComp");

	USTExtraVehicleUtils_GetFirstVehicleUserComp_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleUtils.GetController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerController* USTExtraVehicleUtils::STATIC_GetController(class ASTExtraBaseCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleUtils.GetController");

	USTExtraVehicleUtils_GetController_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleUtils.GetCharacterInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   CH                             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString USTExtraVehicleUtils::STATIC_GetCharacterInfo(class ASTExtraBaseCharacter* CH)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleUtils.GetCharacterInfo");

	USTExtraVehicleUtils_GetCharacterInfo_Params params;
	params.CH = CH;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraVehicleUtils.GetCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerController* PC                             (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* USTExtraVehicleUtils::STATIC_GetCharacter(class ASTExtraPlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraVehicleUtils.GetCharacter");

	USTExtraVehicleUtils_GetCharacter_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWheeledVehicle.OnWheelsLanded
// (Final, Native, Protected)

void ASTExtraWheeledVehicle::OnWheelsLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWheeledVehicle.OnWheelsLanded");

	ASTExtraWheeledVehicle_OnWheelsLanded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWheeledVehicle.OnGearChanged
// (Final, Native, Protected)
// Parameters:
// bool                           bIsUp                          (Parm, ZeroConstructor, IsPlainOldData)

void ASTExtraWheeledVehicle::OnGearChanged(bool bIsUp)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWheeledVehicle.OnGearChanged");

	ASTExtraWheeledVehicle_OnGearChanged_Params params;
	params.bIsUp = bIsUp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STExtraWheeledVehicle.GetVehicleSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ASTExtraWheeledVehicle::GetVehicleSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWheeledVehicle.GetVehicleSpeed");

	ASTExtraWheeledVehicle_GetVehicleSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWheeledVehicle.GetRotationInputDir
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector ASTExtraWheeledVehicle::GetRotationInputDir()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWheeledVehicle.GetRotationInputDir");

	ASTExtraWheeledVehicle_GetRotationInputDir_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STExtraWheeledVehicle.BroadcastClientVehicleWheelDestroyEffect
// (Net, Native, Event, NetMulticast, Public)

void ASTExtraWheeledVehicle::BroadcastClientVehicleWheelDestroyEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STExtraWheeledVehicle.BroadcastClientVehicleWheelDestroyEffect");

	ASTExtraWheeledVehicle_BroadcastClientVehicleWheelDestroyEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STScreenAppearanceComponent.StopScreenAppearance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 AppearanceName                 (Parm, ZeroConstructor)

void USTScreenAppearanceComponent::StopScreenAppearance(const struct FString& AppearanceName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STScreenAppearanceComponent.StopScreenAppearance");

	USTScreenAppearanceComponent_StopScreenAppearance_Params params;
	params.AppearanceName = AppearanceName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STScreenAppearanceComponent.PlayPresentScreenAppearance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 AppearanceName                 (Parm, ZeroConstructor)
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* USTScreenAppearanceComponent::PlayPresentScreenAppearance(const struct FString& AppearanceName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STScreenAppearanceComponent.PlayPresentScreenAppearance");

	USTScreenAppearanceComponent_PlayPresentScreenAppearance_Params params;
	params.AppearanceName = AppearanceName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STScreenAppearanceComponent.PlayCustomScreenAppearance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 AppearanceName                 (Parm, ZeroConstructor)
// class UMaterialInterface*      MatToPlay                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          LifeSpan                       (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstanceDynamic* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstanceDynamic* USTScreenAppearanceComponent::PlayCustomScreenAppearance(const struct FString& AppearanceName, class UMaterialInterface* MatToPlay, float LifeSpan)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STScreenAppearanceComponent.PlayCustomScreenAppearance");

	USTScreenAppearanceComponent_PlayCustomScreenAppearance_Params params;
	params.AppearanceName = AppearanceName;
	params.MatToPlay = MatToPlay;
	params.LifeSpan = LifeSpan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STScreenAppearanceComponent.IsScreenAppearancePlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 AppearanceName                 (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTScreenAppearanceComponent::IsScreenAppearancePlaying(const struct FString& AppearanceName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STScreenAppearanceComponent.IsScreenAppearancePlaying");

	USTScreenAppearanceComponent_IsScreenAppearancePlaying_Params params;
	params.AppearanceName = AppearanceName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.SurviveHUD.SpawnActorInSceneCaptureWorld
// (Final, Native, Private, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  ActorClass                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              SpawnTransform                 (ConstParm, Parm, IsPlainOldData)
// struct FScriptDelegate         DelegateToCall                 (Parm, ZeroConstructor)

void ASurviveHUD::SpawnActorInSceneCaptureWorld(class UClass* ActorClass, const struct FTransform& SpawnTransform, const struct FScriptDelegate& DelegateToCall)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SurviveHUD.SpawnActorInSceneCaptureWorld");

	ASurviveHUD_SpawnActorInSceneCaptureWorld_Params params;
	params.ActorClass = ActorClass;
	params.SpawnTransform = SpawnTransform;
	params.DelegateToCall = DelegateToCall;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.SurviveHUD.EnableCrosshair
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void ASurviveHUD::EnableCrosshair(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.SurviveHUD.EnableCrosshair");

	ASurviveHUD_EnableCrosshair_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TargetKeyOperation.Update
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetKeyOperation::Update(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetKeyOperation.Update");

	UTargetKeyOperation_Update_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetKeyOperation.ToString
// (Final, Native, Public, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTargetKeyOperation::ToString()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetKeyOperation.ToString");

	UTargetKeyOperation_ToString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetKeyOperation.TaskRemoved
// (Native, Public)

void UTargetKeyOperation::TaskRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetKeyOperation.TaskRemoved");

	UTargetKeyOperation_TaskRemoved_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TargetKeyOperation.Start
// (Native, Public)
// Parameters:
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetKeyOperation::Start()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetKeyOperation.Start");

	UTargetKeyOperation_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetKeyOperation.IsValidate
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTargetKeyOperation::IsValidate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetKeyOperation.IsValidate");

	UTargetKeyOperation_IsValidate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetKeyOperation.IsReachable
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTargetKeyOperation::IsReachable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetKeyOperation.IsReachable");

	UTargetKeyOperation_IsReachable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetKeyOperation.Finish
// (Native, Public)
// Parameters:
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetKeyOperation::Finish()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetKeyOperation.Finish");

	UTargetKeyOperation_Finish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetKeyOperation.DebugDraw
// (Native, Public, HasDefaults)
// Parameters:
// struct FColor                  debugColor                     (Parm, IsPlainOldData)
// bool                           isPersist                      (Parm, ZeroConstructor, IsPlainOldData)

void UTargetKeyOperation::DebugDraw(const struct FColor& debugColor, bool isPersist)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetKeyOperation.DebugDraw");

	UTargetKeyOperation_DebugDraw_Params params;
	params.debugColor = debugColor;
	params.isPersist = isPersist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TargetKeyOperation.Awake
// (Native, Public)

void UTargetKeyOperation::Awake()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetKeyOperation.Awake");

	UTargetKeyOperation_Awake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TargetMoveOperation.Update
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetMoveOperation::Update(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetMoveOperation.Update");

	UTargetMoveOperation_Update_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetMoveOperation.Start
// (Native, Public)
// Parameters:
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetMoveOperation::Start()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetMoveOperation.Start");

	UTargetMoveOperation_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetMoveOperation.MoveCloseToTargetWithSprint
// (Final, Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetMoveOperation::MoveCloseToTargetWithSprint(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetMoveOperation.MoveCloseToTargetWithSprint");

	UTargetMoveOperation_MoveCloseToTargetWithSprint_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetMoveOperation.MoveCloseToTarget
// (Final, Native, Public)
// Parameters:
// float                          DletaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetMoveOperation::MoveCloseToTarget(float DletaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetMoveOperation.MoveCloseToTarget");

	UTargetMoveOperation_MoveCloseToTarget_Params params;
	params.DletaTime = DletaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetMoveOperation.IsValidate
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTargetMoveOperation::IsValidate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetMoveOperation.IsValidate");

	UTargetMoveOperation_IsValidate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetMoveOperation.IsReachable
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTargetMoveOperation::IsReachable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetMoveOperation.IsReachable");

	UTargetMoveOperation_IsReachable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetMoveOperation.Finish
// (Native, Public)
// Parameters:
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetMoveOperation::Finish()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetMoveOperation.Finish");

	UTargetMoveOperation_Finish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetSprintOperation.Start
// (Native, Public)
// Parameters:
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetSprintOperation::Start()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetSprintOperation.Start");

	UTargetSprintOperation_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetSprintOperation.IsValidate
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTargetSprintOperation::IsValidate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetSprintOperation.IsValidate");

	UTargetSprintOperation_IsValidate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetJumpOperation.TaskRemoved
// (Native, Public)

void UTargetJumpOperation::TaskRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetJumpOperation.TaskRemoved");

	UTargetJumpOperation_TaskRemoved_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TargetJumpOperation.Start
// (Native, Public)
// Parameters:
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetJumpOperation::Start()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetJumpOperation.Start");

	UTargetJumpOperation_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetJumpOperation.IsValidate
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTargetJumpOperation::IsValidate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetJumpOperation.IsValidate");

	UTargetJumpOperation_IsValidate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetJumpOperation.DebugDraw
// (Native, Public, HasDefaults)
// Parameters:
// struct FColor                  debugColor                     (Parm, IsPlainOldData)
// bool                           isPersist                      (Parm, ZeroConstructor, IsPlainOldData)

void UTargetJumpOperation::DebugDraw(const struct FColor& debugColor, bool isPersist)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetJumpOperation.DebugDraw");

	UTargetJumpOperation_DebugDraw_Params params;
	params.debugColor = debugColor;
	params.isPersist = isPersist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TargetJumpOperation.Awake
// (Native, Public)

void UTargetJumpOperation::Awake()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetJumpOperation.Awake");

	UTargetJumpOperation_Awake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TargetCrouchOperation.Update
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetCrouchOperation::Update(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetCrouchOperation.Update");

	UTargetCrouchOperation_Update_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetCrouchOperation.Start
// (Native, Public)
// Parameters:
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetCrouchOperation::Start()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetCrouchOperation.Start");

	UTargetCrouchOperation_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetCrouchOperation.IsValidate
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTargetCrouchOperation::IsValidate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetCrouchOperation.IsValidate");

	UTargetCrouchOperation_IsValidate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetVehicleOperation.Update
// (Native, Public)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetVehicleOperation::Update(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetVehicleOperation.Update");

	UTargetVehicleOperation_Update_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetVehicleOperation.Start
// (Native, Public)
// Parameters:
// TEnumAsByte<EOperationRunResult> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EOperationRunResult> UTargetVehicleOperation::Start()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetVehicleOperation.Start");

	UTargetVehicleOperation_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TargetVehicleOperation.IsValidate
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTargetVehicleOperation::IsValidate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TargetVehicleOperation.IsValidate");

	UTargetVehicleOperation_IsValidate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TeammatePositionWidget.SetCurrentWidgetVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UTeammatePositionWidget::SetCurrentWidgetVisible(bool visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TeammatePositionWidget.SetCurrentWidgetVisible");

	UTeammatePositionWidget_SetCurrentWidgetVisible_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TirggerItem_TriggerBox.OnTriggerExit
// (Final, Native, Public)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void ATirggerItem_TriggerBox::OnTriggerExit(class AActor* OverlappedActor, class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TirggerItem_TriggerBox.OnTriggerExit");

	ATirggerItem_TriggerBox_OnTriggerExit_Params params;
	params.OverlappedActor = OverlappedActor;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TirggerItem_TriggerBox.OnTriggerEnter
// (Final, Native, Public)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void ATirggerItem_TriggerBox::OnTriggerEnter(class AActor* OverlappedActor, class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TirggerItem_TriggerBox.OnTriggerEnter");

	ATirggerItem_TriggerBox_OnTriggerEnter_Params params;
	params.OverlappedActor = OverlappedActor;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.OnTriggerExit
// (Final, Native, Public)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void ATriggerItem_DrivingCheckPoint::OnTriggerExit(class AActor* OverlappedActor, class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.OnTriggerExit");

	ATriggerItem_DrivingCheckPoint_OnTriggerExit_Params params;
	params.OverlappedActor = OverlappedActor;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.OnTriggerEnter
// (Final, Native, Public)
// Parameters:
// class AActor*                  OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData)

void ATriggerItem_DrivingCheckPoint::OnTriggerEnter(class AActor* OverlappedActor, class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.OnTriggerEnter");

	ATriggerItem_DrivingCheckPoint_OnTriggerEnter_Params params;
	params.OverlappedActor = OverlappedActor;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.OnRep_ChangeShow
// (Final, Native, Public)

void ATriggerItem_DrivingCheckPoint::OnRep_ChangeShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.OnRep_ChangeShow");

	ATriggerItem_DrivingCheckPoint_OnRep_ChangeShow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.IsActive
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATriggerItem_DrivingCheckPoint::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.IsActive");

	ATriggerItem_DrivingCheckPoint_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.Deactivate
// (Final, Native, Public)

void ATriggerItem_DrivingCheckPoint::Deactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.Deactivate");

	ATriggerItem_DrivingCheckPoint_Deactivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.Activate
// (Final, Native, Public)

void ATriggerItem_DrivingCheckPoint::Activate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TriggerItem_DrivingCheckPoint.Activate");

	ATriggerItem_DrivingCheckPoint_Activate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TriggerItem_TriggerClock.Stop
// (Final, Native, Protected)

void ATriggerItem_TriggerClock::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TriggerItem_TriggerClock.Stop");

	ATriggerItem_TriggerClock_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TriggerItem_TriggerClock.Start
// (Final, Native, Public)

void ATriggerItem_TriggerClock::Start()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TriggerItem_TriggerClock.Start");

	ATriggerItem_TriggerClock_Start_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TriggerItem_TriggerClock.OnTime
// (Final, Native, Protected)

void ATriggerItem_TriggerClock::OnTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TriggerItem_TriggerClock.OnTime");

	ATriggerItem_TriggerClock_OnTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.SpawnImpactEffect_Reliable
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FHitResult              Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 RelLocation                    (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// uint16_t                       AmmoId                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslBallisticsComp::SpawnImpactEffect_Reliable(const struct FHitResult& Impact, const struct FVector& RelLocation, uint16_t AmmoId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.SpawnImpactEffect_Reliable");

	UTslBallisticsComp_SpawnImpactEffect_Reliable_Params params;
	params.Impact = Impact;
	params.RelLocation = RelLocation;
	params.AmmoId = AmmoId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.SimulateHit_UnReliable
// (Final, Net, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FHitResult              Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 RelLocation                    (ConstParm, Parm, IsPlainOldData)

void UTslBallisticsComp::SimulateHit_UnReliable(const struct FHitResult& Impact, const struct FVector& RelLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.SimulateHit_UnReliable");

	UTslBallisticsComp_SimulateHit_UnReliable_Params params;
	params.Impact = Impact;
	params.RelLocation = RelLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.SimulateHit_Reliable
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FHitResult              Impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector                 RelLocation                    (ConstParm, Parm, IsPlainOldData)

void UTslBallisticsComp::SimulateHit_Reliable(const struct FHitResult& Impact, const struct FVector& RelLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.SimulateHit_Reliable");

	UTslBallisticsComp_SimulateHit_Reliable_Params params;
	params.Impact = Impact;
	params.RelLocation = RelLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.ServerNotifyHit_Test
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TArray<struct FServerNotifyHitArgs> HitArgsList                    (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UTslBallisticsComp::ServerNotifyHit_Test(TArray<struct FServerNotifyHitArgs> HitArgsList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.ServerNotifyHit_Test");

	UTslBallisticsComp_ServerNotifyHit_Test_Params params;
	params.HitArgsList = HitArgsList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.ServerNotifyHit_NonPlayerCharacter_Test
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TArray<struct FServerNotifyHitArgs_NonPlayerCharacter> HitArgsList                    (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UTslBallisticsComp::ServerNotifyHit_NonPlayerCharacter_Test(TArray<struct FServerNotifyHitArgs_NonPlayerCharacter> HitArgsList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.ServerNotifyHit_NonPlayerCharacter_Test");

	UTslBallisticsComp_ServerNotifyHit_NonPlayerCharacter_Test_Params params;
	params.HitArgsList = HitArgsList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.ServerNotifyHit_NonPlayerCharacter
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FServerNotifyHitArgs_NonPlayerCharacter HitArgs                        (ConstParm, Parm, ReferenceParm)

void UTslBallisticsComp::ServerNotifyHit_NonPlayerCharacter(const struct FServerNotifyHitArgs_NonPlayerCharacter& HitArgs)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.ServerNotifyHit_NonPlayerCharacter");

	UTslBallisticsComp_ServerNotifyHit_NonPlayerCharacter_Params params;
	params.HitArgs = HitArgs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.ServerNotifyHit
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FServerNotifyHitArgs    HitArgs                        (ConstParm, Parm, ReferenceParm)

void UTslBallisticsComp::ServerNotifyHit(const struct FServerNotifyHitArgs& HitArgs)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.ServerNotifyHit");

	UTslBallisticsComp_ServerNotifyHit_Params params;
	params.HitArgs = HitArgs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.ServerNotifyCrack
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class ASTExtraBaseCharacter*   TargetCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize     LocationRelative               (Parm)
// float                          BulletVelocity                 (Parm, ZeroConstructor, IsPlainOldData)

void UTslBallisticsComp::ServerNotifyCrack(class ASTExtraBaseCharacter* TargetCharacter, const struct FVector_NetQuantize& LocationRelative, float BulletVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.ServerNotifyCrack");

	UTslBallisticsComp_ServerNotifyCrack_Params params;
	params.TargetCharacter = TargetCharacter;
	params.LocationRelative = LocationRelative;
	params.BulletVelocity = BulletVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.ServerLogBodyPenetration
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            AttackId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   DamageZone                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          DamageDiff                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslBallisticsComp::ServerLogBodyPenetration(int AttackId, const struct FName& DamageZone, float DamageDiff)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.ServerLogBodyPenetration");

	UTslBallisticsComp_ServerLogBodyPenetration_Params params;
	params.AttackId = AttackId;
	params.DamageZone = DamageZone;
	params.DamageDiff = DamageDiff;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.ServerHandleFiring_AllowInfinityAmmo
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UTslBallisticsComp::ServerHandleFiring_AllowInfinityAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.ServerHandleFiring_AllowInfinityAmmo");

	UTslBallisticsComp_ServerHandleFiring_AllowInfinityAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.ServerHandleFiring
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UTslBallisticsComp::ServerHandleFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.ServerHandleFiring");

	UTslBallisticsComp_ServerHandleFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBallisticsComp.GetWeaponGunData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWeaponGunData          ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FWeaponGunData UTslBallisticsComp::GetWeaponGunData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.GetWeaponGunData");

	UTslBallisticsComp_GetWeaponGunData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBallisticsComp.GetWeaponFullReloadTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslBallisticsComp::GetWeaponFullReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.GetWeaponFullReloadTime");

	UTslBallisticsComp_GetWeaponFullReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBallisticsComp.GetWeaponConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWeaponData             ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FWeaponData UTslBallisticsComp::GetWeaponConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.GetWeaponConfig");

	UTslBallisticsComp_GetWeaponConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBallisticsComp.GetTrajectoryConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTrajectoryWeaponData   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FTrajectoryWeaponData UTslBallisticsComp::GetTrajectoryConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.GetTrajectoryConfig");

	UTslBallisticsComp_GetTrajectoryConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBallisticsComp.GetCurrentStabilityVar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslBallisticsComp::GetCurrentStabilityVar()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.GetCurrentStabilityVar");

	UTslBallisticsComp_GetCurrentStabilityVar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBallisticsComp.GetAmmoPerClip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslBallisticsComp::GetAmmoPerClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.GetAmmoPerClip");

	UTslBallisticsComp_GetAmmoPerClip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBallisticsComp.ClientNotifyAmmo
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int                            InCurrentAmmoData              (Parm, ZeroConstructor, IsPlainOldData)

void UTslBallisticsComp::ClientNotifyAmmo(int InCurrentAmmoData)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBallisticsComp.ClientNotifyAmmo");

	UTslBallisticsComp_ClientNotifyAmmo_Params params;
	params.InCurrentAmmoData = InCurrentAmmoData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseLobbySceneTravel.UpdateScene
// (Final, Native, Public, BlueprintCallable)

void ATslBaseLobbySceneTravel::UpdateScene()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseLobbySceneTravel.UpdateScene");

	ATslBaseLobbySceneTravel_UpdateScene_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseLobbySceneTravel.SetMainCameraTransformAndFieldOfView
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              TM                             (Parm, IsPlainOldData)
// float                          FieldOfView                    (Parm, ZeroConstructor, IsPlainOldData)

void ATslBaseLobbySceneTravel::SetMainCameraTransformAndFieldOfView(const struct FTransform& TM, float FieldOfView)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseLobbySceneTravel.SetMainCameraTransformAndFieldOfView");

	ATslBaseLobbySceneTravel_SetMainCameraTransformAndFieldOfView_Params params;
	params.TM = TM;
	params.FieldOfView = FieldOfView;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseLobbySceneTravel.OnStartTravel
// (Event, Public, BlueprintEvent)

void ATslBaseLobbySceneTravel::OnStartTravel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseLobbySceneTravel.OnStartTravel");

	ATslBaseLobbySceneTravel_OnStartTravel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseLobbySceneTravel.GetNextSceneCameraTransformAndFieldOfView
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform              TM                             (Parm, OutParm, IsPlainOldData)
// float                          FieldOfView                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void ATslBaseLobbySceneTravel::GetNextSceneCameraTransformAndFieldOfView(struct FTransform* TM, float* FieldOfView)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseLobbySceneTravel.GetNextSceneCameraTransformAndFieldOfView");

	ATslBaseLobbySceneTravel_GetNextSceneCameraTransformAndFieldOfView_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TM != nullptr)
		*TM = params.TM;
	if (FieldOfView != nullptr)
		*FieldOfView = params.FieldOfView;
}


// Function ShadowTrackerExtra.TslBaseLobbySceneTravel.GetCurrentSceneCameraTransformAndFieldOfView
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTransform              TM                             (Parm, OutParm, IsPlainOldData)
// float                          FieldOfView                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void ATslBaseLobbySceneTravel::GetCurrentSceneCameraTransformAndFieldOfView(struct FTransform* TM, float* FieldOfView)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseLobbySceneTravel.GetCurrentSceneCameraTransformAndFieldOfView");

	ATslBaseLobbySceneTravel_GetCurrentSceneCameraTransformAndFieldOfView_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TM != nullptr)
		*TM = params.TM;
	if (FieldOfView != nullptr)
		*FieldOfView = params.FieldOfView;
}


// Function ShadowTrackerExtra.TslBaseLobbySceneTravel.FinishTravel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bUpdateScene                   (Parm, ZeroConstructor, IsPlainOldData)

void ATslBaseLobbySceneTravel::FinishTravel(bool bUpdateScene)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseLobbySceneTravel.FinishTravel");

	ATslBaseLobbySceneTravel_FinishTravel_Params params;
	params.bUpdateScene = bUpdateScene;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseOptionWidget.OnReset
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTslBaseOptionWidget::OnReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseOptionWidget.OnReset");

	UTslBaseOptionWidget_OnReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseOptionWidget.OnDefault
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTslBaseOptionWidget::OnDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseOptionWidget.OnDefault");

	UTslBaseOptionWidget_OnDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseOptionWidget.OnApply
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UTslBaseOptionWidget::OnApply()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseOptionWidget.OnApply");

	UTslBaseOptionWidget_OnApply_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBaseOptionWidget.IsKeyUp
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslBaseOptionWidget::IsKeyUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseOptionWidget.IsKeyUp");

	UTslBaseOptionWidget_IsKeyUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBaseOptionWidget.IsEnableApply
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslBaseOptionWidget::IsEnableApply()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseOptionWidget.IsEnableApply");

	UTslBaseOptionWidget_IsEnableApply_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBaseOptionWidget.IsChanged
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslBaseOptionWidget::IsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBaseOptionWidget.IsChanged");

	UTslBaseOptionWidget_IsChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBreatheComp.SetSwayDebuffParameters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          SwaySpeed                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          SwayVerticalMultiplier         (Parm, ZeroConstructor, IsPlainOldData)
// float                          SwayHorizontalMultiplier       (Parm, ZeroConstructor, IsPlainOldData)

void UTslBreatheComp::SetSwayDebuffParameters(float SwaySpeed, float SwayVerticalMultiplier, float SwayHorizontalMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.SetSwayDebuffParameters");

	UTslBreatheComp_SetSwayDebuffParameters_Params params;
	params.SwaySpeed = SwaySpeed;
	params.SwayVerticalMultiplier = SwayVerticalMultiplier;
	params.SwayHorizontalMultiplier = SwayHorizontalMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBreatheComp.ServerSetHoldingBreath
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bNewHoldingBreath              (Parm, ZeroConstructor, IsPlainOldData)

void UTslBreatheComp::ServerSetHoldingBreath(bool bNewHoldingBreath)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.ServerSetHoldingBreath");

	UTslBreatheComp_ServerSetHoldingBreath_Params params;
	params.bNewHoldingBreath = bNewHoldingBreath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBreatheComp.ServerSetGunDirectionSway
// (Net, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                InGunDirectionSway             (Parm, IsPlainOldData)

void UTslBreatheComp::ServerSetGunDirectionSway(const struct FRotator& InGunDirectionSway)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.ServerSetGunDirectionSway");

	UTslBreatheComp_ServerSetGunDirectionSway_Params params;
	params.InGunDirectionSway = InGunDirectionSway;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBreatheComp.OnRep_Breath
// (Final, Native, Protected)
// Parameters:
// float                          LastBreath                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslBreatheComp::OnRep_Breath(float LastBreath)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.OnRep_Breath");

	UTslBreatheComp_OnRep_Breath_Params params;
	params.LastBreath = LastBreath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBreatheComp.OnChangeBreathADS
// (Final, Native, Protected)
// Parameters:
// float                          CurBreath                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          LastBreath                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslBreatheComp::OnChangeBreathADS(float CurBreath, float LastBreath)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.OnChangeBreathADS");

	UTslBreatheComp_OnChangeBreathADS_Params params;
	params.CurBreath = CurBreath;
	params.LastBreath = LastBreath;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslBreatheComp.IsHoldingBreath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslBreatheComp::IsHoldingBreath()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.IsHoldingBreath");

	UTslBreatheComp_IsHoldingBreath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBreatheComp.GetSwayModifier
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslBreatheComp::GetSwayModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.GetSwayModifier");

	UTslBreatheComp_GetSwayModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBreatheComp.GetCurrentSway
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FRotator UTslBreatheComp::GetCurrentSway()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.GetCurrentSway");

	UTslBreatheComp_GetCurrentSway_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBreatheComp.GetBreathRatio
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslBreatheComp::GetBreathRatio()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.GetBreathRatio");

	UTslBreatheComp_GetBreathRatio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBreatheComp.CanStartHoldingBreath
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslBreatheComp::CanStartHoldingBreath()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.CanStartHoldingBreath");

	UTslBreatheComp_CanStartHoldingBreath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslBreatheComp.AddBreath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslBreatheComp::AddBreath(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslBreatheComp.AddBreath");

	UTslBreatheComp_AddBreath_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslConfirmationDialogWidget.OnButtonClick
// (Final, Native, Public)
// Parameters:
// EPopupButtonID                 ButtonID                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslConfirmationDialogWidget::OnButtonClick(EPopupButtonID ButtonID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslConfirmationDialogWidget.OnButtonClick");

	UTslConfirmationDialogWidget_OnButtonClick_Params params;
	params.ButtonID = ButtonID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteComponent.StopSlotAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimSequenceBase*       AnimSequence                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   SlotName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          BlendTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslEmoteComponent::StopSlotAnim(class UAnimSequenceBase* AnimSequence, const struct FName& SlotName, float BlendTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.StopSlotAnim");

	UTslEmoteComponent_StopSlotAnim_Params params;
	params.AnimSequence = AnimSequence;
	params.SlotName = SlotName;
	params.BlendTime = BlendTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.Stop
// (Final, Native, Public)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslEmoteComponent::Stop(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.Stop");

	UTslEmoteComponent_Stop_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.Server_EmotePlay
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FName                   EmoteName                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsRNG                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   SectionName                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslEmoteComponent::Server_EmotePlay(const struct FName& EmoteName, bool bIsRNG, const struct FName& SectionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.Server_EmotePlay");

	UTslEmoteComponent_Server_EmotePlay_Params params;
	params.EmoteName = EmoteName;
	params.bIsRNG = bIsRNG;
	params.SectionName = SectionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteComponent.SendSystemMessageEmoteUnavailable
// (Final, Native, Public, BlueprintCallable, Const)

void UTslEmoteComponent::SendSystemMessageEmoteUnavailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.SendSystemMessageEmoteUnavailable");

	UTslEmoteComponent_SendSystemMessageEmoteUnavailable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteComponent.SendSystemMessageEmoteEmpty
// (Final, Native, Public, BlueprintCallable, Const)

void UTslEmoteComponent::SendSystemMessageEmoteEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.SendSystemMessageEmoteEmpty");

	UTslEmoteComponent_SendSystemMessageEmoteEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteComponent.SendSystemMessageEmoteBlocked
// (Final, Native, Public, BlueprintCallable, Const)

void UTslEmoteComponent::SendSystemMessageEmoteBlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.SendSystemMessageEmoteBlocked");

	UTslEmoteComponent_SendSystemMessageEmoteBlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteComponent.PlaySlotAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimSequenceBase*       AnimSequence                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   SlotName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          InPlayRate                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          BlendTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslEmoteComponent::PlaySlotAnim(class UAnimSequenceBase* AnimSequence, const struct FName& SlotName, float InPlayRate, float BlendTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.PlaySlotAnim");

	UTslEmoteComponent_PlaySlotAnim_Params params;
	params.AnimSequence = AnimSequence;
	params.SlotName = SlotName;
	params.InPlayRate = InPlayRate;
	params.BlendTime = BlendTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.Play
// (Final, Native, Public)
// Parameters:
// int                            EmoteID                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslEmoteComponent::Play(int EmoteID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.Play");

	UTslEmoteComponent_Play_Params params;
	params.EmoteID = EmoteID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.OnMontageInterrupted
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslEmoteComponent::OnMontageInterrupted(class UAnimMontage* Montage)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.OnMontageInterrupted");

	UTslEmoteComponent_OnMontageInterrupted_Params params;
	params.Montage = Montage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteComponent.OnAsyncLoadEmoteAnim
// (Final, Native, Public)

void UTslEmoteComponent::OnAsyncLoadEmoteAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.OnAsyncLoadEmoteAnim");

	UTslEmoteComponent_OnAsyncLoadEmoteAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteComponent.IsAbleGetEmoteDataByName
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   EmoteName                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslEmoteComponent::IsAbleGetEmoteDataByName(const struct FName& EmoteName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.IsAbleGetEmoteDataByName");

	UTslEmoteComponent_IsAbleGetEmoteDataByName_Params params;
	params.EmoteName = EmoteName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteTextureByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FName                   EmoteName                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UTslEmoteComponent::STATIC_GetEmoteTextureByName(const struct FName& EmoteName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteTextureByName");

	UTslEmoteComponent_GetEmoteTextureByName_Params params;
	params.EmoteName = EmoteName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteNames
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<struct FName>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FName> UTslEmoteComponent::STATIC_GetEmoteNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteNames");

	UTslEmoteComponent_GetEmoteNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteMaterialByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FName                   EmoteName                      (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UTslEmoteComponent::STATIC_GetEmoteMaterialByName(const struct FName& EmoteName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteMaterialByName");

	UTslEmoteComponent_GetEmoteMaterialByName_Params params;
	params.EmoteName = EmoteName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteLocalizedName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FName                   EmoteName                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTslEmoteComponent::STATIC_GetEmoteLocalizedName(const struct FName& EmoteName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteLocalizedName");

	UTslEmoteComponent_GetEmoteLocalizedName_Params params;
	params.EmoteName = EmoteName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteHandle
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            ItemID                         (Parm, ZeroConstructor, IsPlainOldData)
// class UBackpackEmoteHandle*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UBackpackEmoteHandle* UTslEmoteComponent::GetEmoteHandle(int ItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteHandle");

	UTslEmoteComponent_GetEmoteHandle_Params params;
	params.ItemID = ItemID;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteDataTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UDataTable*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UDataTable* UTslEmoteComponent::GetEmoteDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteDataTable");

	UTslEmoteComponent_GetEmoteDataTable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteDataByName
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName                   EmoteName                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FEmoteDBDataRow         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FEmoteDBDataRow UTslEmoteComponent::GetEmoteDataByName(const struct FName& EmoteName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.GetEmoteDataByName");

	UTslEmoteComponent_GetEmoteDataByName_Params params;
	params.EmoteName = EmoteName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.Emote_TryToPlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   EmoteName                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsLobby                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslEmoteComponent::Emote_TryToPlay(const struct FName& EmoteName, bool bIsLobby)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.Emote_TryToPlay");

	UTslEmoteComponent_Emote_TryToPlay_Params params;
	params.EmoteName = EmoteName;
	params.bIsLobby = bIsLobby;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteComponent.Client_EmotePlay
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FName                   EmoteName                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsRNG                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   SectionName                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslEmoteComponent::Client_EmotePlay(const struct FName& EmoteName, bool bIsRNG, const struct FName& SectionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.Client_EmotePlay");

	UTslEmoteComponent_Client_EmotePlay_Params params;
	params.EmoteName = EmoteName;
	params.bIsRNG = bIsRNG;
	params.SectionName = SectionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteComponent.CanOpenEmoteWheel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslEmoteComponent::CanOpenEmoteWheel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteComponent.CanOpenEmoteWheel");

	UTslEmoteComponent_CanOpenEmoteWheel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslWheelBaseSubWidget.SetFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bOnFocus                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslWheelBaseSubWidget::SetFocus(bool bOnFocus)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWheelBaseSubWidget.SetFocus");

	UTslWheelBaseSubWidget_SetFocus_Params params;
	params.bOnFocus = bOnFocus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslWheelBaseSubWidget.PlaySelectAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bFocus                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslWheelBaseSubWidget::PlaySelectAnimation(bool bFocus)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWheelBaseSubWidget.PlaySelectAnimation");

	UTslWheelBaseSubWidget_PlaySelectAnimation_Params params;
	params.bFocus = bFocus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslWheelBaseSubWidget.GetNameText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTslWheelBaseSubWidget::GetNameText()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWheelBaseSubWidget.GetNameText");

	UTslWheelBaseSubWidget_GetNameText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslWheelBaseSubWidget.GetDescriptionText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTslWheelBaseSubWidget::GetDescriptionText()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWheelBaseSubWidget.GetDescriptionText");

	UTslWheelBaseSubWidget_GetDescriptionText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslWheelBaseSubWidget.DoAction
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslWheelBaseSubWidget::DoAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWheelBaseSubWidget.DoAction");

	UTslWheelBaseSubWidget_DoAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteWheelSubWidget.GetNameText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTslEmoteWheelSubWidget::GetNameText()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelSubWidget.GetNameText");

	UTslEmoteWheelSubWidget_GetNameText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslEmoteWheelSubWidget.DoAction
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslEmoteWheelSubWidget::DoAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelSubWidget.DoAction");

	UTslEmoteWheelSubWidget_DoAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslWheelBaseWidget.WidgetShow
// (Native, Public, BlueprintCallable)

void UTslWheelBaseWidget::WidgetShow()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWheelBaseWidget.WidgetShow");

	UTslWheelBaseWidget_WidgetShow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslWheelBaseWidget.WidgetHide
// (Native, Public, BlueprintCallable)

void UTslWheelBaseWidget::WidgetHide()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWheelBaseWidget.WidgetHide");

	UTslWheelBaseWidget_WidgetHide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslWheelBaseWidget.OnClicked
// (Final, Native, Protected)

void UTslWheelBaseWidget::OnClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWheelBaseWidget.OnClicked");

	UTslWheelBaseWidget_OnClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslWheelBaseWidget.Cancel
// (Native, Public, BlueprintCallable)

void UTslWheelBaseWidget::Cancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWheelBaseWidget.Cancel");

	UTslWheelBaseWidget_Cancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelectEmoteByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslEmoteWheelWidget::OnSelectEmoteByIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelectEmoteByIndex");

	UTslEmoteWheelWidget_OnSelectEmoteByIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect9
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect9()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect9");

	UTslEmoteWheelWidget_OnSelect9_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect8
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect8()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect8");

	UTslEmoteWheelWidget_OnSelect8_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect7
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect7()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect7");

	UTslEmoteWheelWidget_OnSelect7_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect6
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect6()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect6");

	UTslEmoteWheelWidget_OnSelect6_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect5
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect5()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect5");

	UTslEmoteWheelWidget_OnSelect5_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect4
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect4()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect4");

	UTslEmoteWheelWidget_OnSelect4_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect3
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect3()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect3");

	UTslEmoteWheelWidget_OnSelect3_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect2
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect2()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect2");

	UTslEmoteWheelWidget_OnSelect2_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect12
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect12()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect12");

	UTslEmoteWheelWidget_OnSelect12_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect11
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect11()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect11");

	UTslEmoteWheelWidget_OnSelect11_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect10
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect10()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect10");

	UTslEmoteWheelWidget_OnSelect10_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect1
// (Final, Native, Public)

void UTslEmoteWheelWidget::OnSelect1()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.OnSelect1");

	UTslEmoteWheelWidget_OnSelect1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.DoNothingFloat
// (Final, Native, Private)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslEmoteWheelWidget::DoNothingFloat(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.DoNothingFloat");

	UTslEmoteWheelWidget_DoNothingFloat_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslEmoteWheelWidget.DoNothing
// (Final, Native, Private)

void UTslEmoteWheelWidget::DoNothing()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslEmoteWheelWidget.DoNothing");

	UTslEmoteWheelWidget_DoNothing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.WheelAxisNameToWheelActionName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// float                          InAxisScale                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTslGameOption::STATIC_WheelAxisNameToWheelActionName(const struct FTslInputKey& Key, float InAxisScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.WheelAxisNameToWheelActionName");

	UTslGameOption_WheelAxisNameToWheelActionName_Params params;
	params.Key = Key;
	params.InAxisScale = InAxisScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.SetWorldMapZoomLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            NewZoomLevel                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetWorldMapZoomLevel(int NewZoomLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetWorldMapZoomLevel");

	UTslGameOption_SetWorldMapZoomLevel_Params params;
	params.NewZoomLevel = NewZoomLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetVSyncEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVSyncEnabled(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetVSyncEnabled");

	UTslGameOption_SetVSyncEnabled_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetVoiceOutputVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVoiceOutputVolume(int Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetVoiceOutputVolume");

	UTslGameOption_SetVoiceOutputVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetVoiceOutputMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVoiceOutputMute(bool bIsMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetVoiceOutputMute");

	UTslGameOption_SetVoiceOutputMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetVoiceInputVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVoiceInputVolume(int Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetVoiceInputVolume");

	UTslGameOption_SetVoiceInputVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetVoiceInputSensitivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVoiceInputSensitivity(int Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetVoiceInputSensitivity");

	UTslGameOption_SetVoiceInputSensitivity_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetVoiceInputMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetVoiceInputMute(bool bIsMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetVoiceInputMute");

	UTslGameOption_SetVoiceInputMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetUsingPerScopeSensitivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ETslControllerType             ControllerType                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           NewVal                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUsingPerScopeSensitivity(ETslControllerType ControllerType, bool NewVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetUsingPerScopeSensitivity");

	UTslGameOption_SetUsingPerScopeSensitivity_Params params;
	params.ControllerType = ControllerType;
	params.NewVal = NewVal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetUseTeamVoice
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bUse                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUseTeamVoice(bool bUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetUseTeamVoice");

	UTslGameOption_SetUseTeamVoice_Params params;
	params.bUse = bUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetUsePushToTalk
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bUse                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUsePushToTalk(bool bUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetUsePushToTalk");

	UTslGameOption_SetUsePushToTalk_Params params;
	params.bUse = bUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetUseGlobalVoice
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bUse                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUseGlobalVoice(bool bUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetUseGlobalVoice");

	UTslGameOption_SetUseGlobalVoice_Params params;
	params.bUse = bUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetUseCharacterCapture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bUseCharacterCapture           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUseCharacterCapture(bool bUseCharacterCapture)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetUseCharacterCapture");

	UTslGameOption_SetUseCharacterCapture_Params params;
	params.bUseCharacterCapture = bUseCharacterCapture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetUISoundVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUISoundVolume(float Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetUISoundVolume");

	UTslGameOption_SetUISoundVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetUISoundMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetUISoundMute(bool bIsMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetUISoundMute");

	UTslGameOption_SetUISoundMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetTslInputMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EInputModeSettingActions       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// ETslInputModes                 eTslInputMode                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetTslInputMode(EInputModeSettingActions eAction, ETslInputModes eTslInputMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetTslInputMode");

	UTslGameOption_SetTslInputMode_Params params;
	params.eAction = eAction;
	params.eTslInputMode = eTslInputMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetTpsWeaponIconShowType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUiShowType                    NewShowType                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetTpsWeaponIconShowType(EUiShowType NewShowType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetTpsWeaponIconShowType");

	UTslGameOption_SetTpsWeaponIconShowType_Params params;
	params.NewShowType = NewShowType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetSelectMinimapTypeIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetSelectMinimapTypeIndex(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetSelectMinimapTypeIndex");

	UTslGameOption_SetSelectMinimapTypeIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetScreenScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetScreenScale(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetScreenScale");

	UTslGameOption_SetScreenScale_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetScreenResoultion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FScreenResolution       ScreenResolution               (Parm)

void UTslGameOption::STATIC_SetScreenResoultion(const struct FScreenResolution& ScreenResolution)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetScreenResoultion");

	UTslGameOption_SetScreenResoultion_Params params;
	params.ScreenResolution = ScreenResolution;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetQualityLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EQualityType                   Quality                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            QualityLevel                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetQualityLevel(EQualityType Quality, int QualityLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetQualityLevel");

	UTslGameOption_SetQualityLevel_Params params;
	params.Quality = Quality;
	params.QualityLevel = QualityLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetOverallScalabilityLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetOverallScalabilityLevel(int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetOverallScalabilityLevel");

	UTslGameOption_SetOverallScalabilityLevel_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetMouseVerticalSensitivityMultiplier
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMouseVerticalSensitivityMultiplier(float InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetMouseVerticalSensitivityMultiplier");

	UTslGameOption_SetMouseVerticalSensitivityMultiplier_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetMouseSensitivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FName                   InMouseSensitiveName           (Parm, ZeroConstructor, IsPlainOldData)
// float                          InMouseSensitivity             (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMouseSensitivity(const struct FName& InMouseSensitiveName, float InMouseSensitivity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetMouseSensitivity");

	UTslGameOption_SetMouseSensitivity_Params params;
	params.InMouseSensitiveName = InMouseSensitiveName;
	params.InMouseSensitivity = InMouseSensitivity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetMotionBlur
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMotionBlur(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetMotionBlur");

	UTslGameOption_SetMotionBlur_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetMinimapColorType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EMinimapColorType              InType                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMinimapColorType(EMinimapColorType InType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetMinimapColorType");

	UTslGameOption_SetMinimapColorType_Params params;
	params.InType = InType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetMaxFPS
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            MaxFps                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMaxFPS(int MaxFps)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetMaxFPS");

	UTslGameOption_SetMaxFPS_Params params;
	params.MaxFps = MaxFps;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetMasterSoundVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMasterSoundVolume(float Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetMasterSoundVolume");

	UTslGameOption_SetMasterSoundVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetMasterSoundMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetMasterSoundMute(bool bIsMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetMasterSoundMute");

	UTslGameOption_SetMasterSoundMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetKeyHintEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetKeyHintEnable(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetKeyHintEnable");

	UTslGameOption_SetKeyHintEnable_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetInvertMouse
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bInvert                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetInvertMouse(bool bInvert)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetInvertMouse");

	UTslGameOption_SetInvertMouse_Params params;
	params.bInvert = bInvert;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetInvertGamePadY
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bInvert                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetInvertGamePadY(bool bInvert)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetInvertGamePadY");

	UTslGameOption_SetInvertGamePadY_Params params;
	params.bInvert = bInvert;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetInvertGamePadX
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bInvert                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetInvertGamePadX(bool bInvert)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetInvertGamePadX");

	UTslGameOption_SetInvertGamePadX_Params params;
	params.bInvert = bInvert;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetInputKey_Internal
// (Final, Native, Static, Public, HasOutParms)
// Parameters:
// TArray<struct FTslInputKey>    OutKeyList                     (Parm, OutParm, ZeroConstructor)
// struct FTslInputKey            NewKey                         (ConstParm, Parm, OutParm, ReferenceParm)
// EKeyBindingSlot                InKeyBindingSlot               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetInputKey_Internal(const struct FTslInputKey& NewKey, EKeyBindingSlot InKeyBindingSlot, bool bGamepad, TArray<struct FTslInputKey>* OutKeyList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetInputKey_Internal");

	UTslGameOption_SetInputKey_Internal_Params params;
	params.NewKey = NewKey;
	params.InKeyBindingSlot = InKeyBindingSlot;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutKeyList != nullptr)
		*OutKeyList = params.OutKeyList;
}


// Function ShadowTrackerExtra.TslGameOption.SetIconKillfeedEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetIconKillfeedEnabled(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetIconKillfeedEnabled");

	UTslGameOption_SetIconKillfeedEnabled_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetGamma
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Gamma                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetGamma(float Gamma)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetGamma");

	UTslGameOption_SetGamma_Params params;
	params.Gamma = Gamma;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetGamePadToggleAcceleration
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bUse                           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetGamePadToggleAcceleration(bool bUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetGamePadToggleAcceleration");

	UTslGameOption_SetGamePadToggleAcceleration_Params params;
	params.bUse = bUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetGamePadSensitivity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FName                   InGamePadSensitiveName         (Parm, ZeroConstructor, IsPlainOldData)
// float                          InGamePadSensitivity           (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetGamePadSensitivity(const struct FName& InGamePadSensitiveName, float InGamePadSensitivity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetGamePadSensitivity");

	UTslGameOption_SetGamePadSensitivity_Params params;
	params.InGamePadSensitiveName = InGamePadSensitiveName;
	params.InGamePadSensitivity = InGamePadSensitivity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetGamepadPresetType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGamepadPresets                InGamepadPreset                (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetGamepadPresetType(EGamepadPresets InGamepadPreset)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetGamepadPresetType");

	UTslGameOption_SetGamepadPresetType_Params params;
	params.InGamepadPreset = InGamepadPreset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetGamePadDeadZone_Left
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          InGamePadDeadZone              (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetGamePadDeadZone_Left(float InGamePadDeadZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetGamePadDeadZone_Left");

	UTslGameOption_SetGamePadDeadZone_Left_Params params;
	params.InGamePadDeadZone = InGamePadDeadZone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetGamePadDeadZone
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          InGamePadDeadZone              (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetGamePadDeadZone(float InGamePadDeadZone)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetGamePadDeadZone");

	UTslGameOption_SetGamePadDeadZone_Params params;
	params.InGamePadDeadZone = InGamePadDeadZone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetFullScreen
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EWindowMode>       InFullscreenMode               (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetFullScreen(TEnumAsByte<EWindowMode> InFullscreenMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetFullScreen");

	UTslGameOption_SetFullScreen_Params params;
	params.InFullscreenMode = InFullscreenMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetFpsWeaponSlotShow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bNewShow                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetFpsWeaponSlotShow(bool bNewShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetFpsWeaponSlotShow");

	UTslGameOption_SetFpsWeaponSlotShow_Params params;
	params.bNewShow = bNewShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetFpsCameraFov
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          NewFovValue                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetFpsCameraFov(float NewFovValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetFpsCameraFov");

	UTslGameOption_SetFpsCameraFov_Params params;
	params.NewFovValue = NewFovValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetFppWeaponIconShowType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUiShowType                    NewShowType                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetFppWeaponIconShowType(EUiShowType NewShowType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetFppWeaponIconShowType");

	UTslGameOption_SetFppWeaponIconShowType_Params params;
	params.NewShowType = NewShowType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetFppEquipableItemIconShowType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EUiShowType                    NewShowType                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetFppEquipableItemIconShowType(EUiShowType NewShowType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetFppEquipableItemIconShowType");

	UTslGameOption_SetFppEquipableItemIconShowType_Params params;
	params.NewShowType = NewShowType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetForceFeedbackMultiplier
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetForceFeedbackMultiplier(float InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetForceFeedbackMultiplier");

	UTslGameOption_SetForceFeedbackMultiplier_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetForceFeedbackEffectEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetForceFeedbackEffectEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetForceFeedbackEffectEnabled");

	UTslGameOption_SetForceFeedbackEffectEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetEquipableIteIconShow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bNewShow                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEquipableIteIconShow(bool bNewShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetEquipableIteIconShow");

	UTslGameOption_SetEquipableIteIconShow_Params params;
	params.bNewShow = bNewShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetEnablePreloadingMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEnablePreloadingMap(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetEnablePreloadingMap");

	UTslGameOption_SetEnablePreloadingMap_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetEnableMinimapViewScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEnableMinimapViewScale(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetEnableMinimapViewScale");

	UTslGameOption_SetEnableMinimapViewScale_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetEnableHrtfRemoteWeaponSound
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEnableHrtfRemoteWeaponSound(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetEnableHrtfRemoteWeaponSound");

	UTslGameOption_SetEnableHrtfRemoteWeaponSound_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetEnableFunctionality
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameplayFunctionalities       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEnableFunctionality(EGameplayFunctionalities eAction, bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetEnableFunctionality");

	UTslGameOption_SetEnableFunctionality_Params params;
	params.eAction = eAction;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetEnableClientReplay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EGameplayClientReplay          eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEnableClientReplay(EGameplayClientReplay eAction, bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetEnableClientReplay");

	UTslGameOption_SetEnableClientReplay_Params params;
	params.eAction = eAction;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetEffectSoundVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEffectSoundVolume(float Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetEffectSoundVolume");

	UTslGameOption_SetEffectSoundVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetEffectSoundMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetEffectSoundMute(bool bIsMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetEffectSoundMute");

	UTslGameOption_SetEffectSoundMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetCustomCrosshairColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                  InColor                        (ConstParm, Parm, IsPlainOldData)

void UTslGameOption::STATIC_SetCustomCrosshairColor(const struct FColor& InColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetCustomCrosshairColor");

	UTslGameOption_SetCustomCrosshairColor_Params params;
	params.InColor = InColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetCurrentCultureName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 InCultureName                  (Parm, ZeroConstructor)

void UTslGameOption::STATIC_SetCurrentCultureName(const struct FString& InCultureName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetCurrentCultureName");

	UTslGameOption_SetCurrentCultureName_Params params;
	params.InCultureName = InCultureName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetCurrentCrosshairColorString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 CrosshairColorStr              (Parm, ZeroConstructor)

void UTslGameOption::STATIC_SetCurrentCrosshairColorString(const struct FString& CrosshairColorStr)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetCurrentCrosshairColorString");

	UTslGameOption_SetCurrentCrosshairColorString_Params params;
	params.CrosshairColorStr = CrosshairColorStr;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetCurrentColorBlindKeyByInt
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ColorBlindKey                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetCurrentColorBlindKeyByInt(int ColorBlindKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetCurrentColorBlindKeyByInt");

	UTslGameOption_SetCurrentColorBlindKeyByInt_Params params;
	params.ColorBlindKey = ColorBlindKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetCurrentColorBlindKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EColorBlindType                ColorBlindKey                  (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetCurrentColorBlindKey(EColorBlindType ColorBlindKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetCurrentColorBlindKey");

	UTslGameOption_SetCurrentColorBlindKey_Params params;
	params.ColorBlindKey = ColorBlindKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetBGMSoundVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetBGMSoundVolume(float Volume)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetBGMSoundVolume");

	UTslGameOption_SetBGMSoundVolume_Params params;
	params.Volume = Volume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetBGMSoundMute
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bIsMute                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetBGMSoundMute(bool bIsMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetBGMSoundMute");

	UTslGameOption_SetBGMSoundMute_Params params;
	params.bIsMute = bIsMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetAxisKeysToDefault
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   AxisName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetAxisKeysToDefault(const struct FName& AxisName, float Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetAxisKeysToDefault");

	UTslGameOption_SetAxisKeysToDefault_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetAxisKeys
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   AxisName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FTslInputKey>    NewKeys                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UTslGameOption::STATIC_SetAxisKeys(const struct FName& AxisName, float Scale, TArray<struct FTslInputKey> NewKeys)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetAxisKeys");

	UTslGameOption_SetAxisKeys_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;
	params.NewKeys = NewKeys;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetAxisKey
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   AxisName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FTslInputKey            NewKey                         (ConstParm, Parm, OutParm, ReferenceParm)
// EKeyBindingSlot                InKeyBindingSlot               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetAxisKey(const struct FName& AxisName, float Scale, const struct FTslInputKey& NewKey, EKeyBindingSlot InKeyBindingSlot, bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetAxisKey");

	UTslGameOption_SetAxisKey_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;
	params.NewKey = NewKey;
	params.InKeyBindingSlot = InKeyBindingSlot;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetAutoReloadOnOutOfAmmoFireEnable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetAutoReloadOnOutOfAmmoFireEnable(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetAutoReloadOnOutOfAmmoFireEnable");

	UTslGameOption_SetAutoReloadOnOutOfAmmoFireEnable_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetActionKeysToDefault
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UTslGameOption::STATIC_SetActionKeysToDefault(const struct FName& ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetActionKeysToDefault");

	UTslGameOption_SetActionKeysToDefault_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetActionKeys
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// TArray<struct FTslInputKey>    NewKeys                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UTslGameOption::STATIC_SetActionKeys(const struct FName& ActionName, TArray<struct FTslInputKey> NewKeys)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetActionKeys");

	UTslGameOption_SetActionKeys_Params params;
	params.ActionName = ActionName;
	params.NewKeys = NewKeys;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.SetActionKey
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FTslInputKey            NewKey                         (ConstParm, Parm, OutParm, ReferenceParm)
// EKeyBindingSlot                InKeyBindingSlot               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_SetActionKey(const struct FName& ActionName, const struct FTslInputKey& NewKey, EKeyBindingSlot InKeyBindingSlot, bool bGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.SetActionKey");

	UTslGameOption_SetActionKey_Params params;
	params.ActionName = ActionName;
	params.NewKey = NewKey;
	params.InKeyBindingSlot = InKeyBindingSlot;
	params.bGamepad = bGamepad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.NotDuplicateCategoryNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   CatecoryName                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FName>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FName> UTslGameOption::STATIC_NotDuplicateCategoryNames(const struct FName& CatecoryName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.NotDuplicateCategoryNames");

	UTslGameOption_NotDuplicateCategoryNames_Params params;
	params.CatecoryName = CatecoryName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsVSyncEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsVSyncEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsVSyncEnabled");

	UTslGameOption_IsVSyncEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsVoiceOutputMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsVoiceOutputMute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsVoiceOutputMute");

	UTslGameOption_IsVoiceOutputMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsVoiceInputMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsVoiceInputMute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsVoiceInputMute");

	UTslGameOption_IsVoiceInputMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsUsingPerScopeSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETslControllerType             ControllerType                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsUsingPerScopeSensitivity(ETslControllerType ControllerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsUsingPerScopeSensitivity");

	UTslGameOption_IsUsingPerScopeSensitivity_Params params;
	params.ControllerType = ControllerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsUISoundMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsUISoundMute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsUISoundMute");

	UTslGameOption_IsUISoundMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsScorpio
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsScorpio()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsScorpio");

	UTslGameOption_IsScorpio_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsMouseWheelInput
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            InInputedKey                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsMouseWheelInput(const struct FTslInputKey& InInputedKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsMouseWheelInput");

	UTslGameOption_IsMouseWheelInput_Params params;
	params.InInputedKey = InInputedKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsModifierKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsModifierKey(const struct FTslInputKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsModifierKey");

	UTslGameOption_IsModifierKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsMasterSoundMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsMasterSoundMute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsMasterSoundMute");

	UTslGameOption_IsMasterSoundMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsKeyValid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsKeyValid(const struct FTslInputKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsKeyValid");

	UTslGameOption_IsKeyValid_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsKeyUsed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsKeyUsed(const struct FTslInputKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsKeyUsed");

	UTslGameOption_IsKeyUsed_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsKeyHintEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsKeyHintEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsKeyHintEnabled");

	UTslGameOption_IsKeyHintEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsInvertMouse
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsInvertMouse()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsInvertMouse");

	UTslGameOption_IsInvertMouse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsInvertGamePadY
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsInvertGamePadY()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsInvertGamePadY");

	UTslGameOption_IsInvertGamePadY_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsInvertGamePadX
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsInvertGamePadX()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsInvertGamePadX");

	UTslGameOption_IsInvertGamePadX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsIconKillfeedEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsIconKillfeedEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsIconKillfeedEnabled");

	UTslGameOption_IsIconKillfeedEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsGamepadKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsGamepadKey(const struct FTslInputKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsGamepadKey");

	UTslGameOption_IsGamepadKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsFunctionalityEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameplayFunctionalities       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsFunctionalityEnabled(EGameplayFunctionalities eAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsFunctionalityEnabled");

	UTslGameOption_IsFunctionalityEnabled_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsForceFeedbackEffectEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsForceFeedbackEffectEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsForceFeedbackEffectEnabled");

	UTslGameOption_IsForceFeedbackEffectEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsEnabledPreloadingMap
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsEnabledPreloadingMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsEnabledPreloadingMap");

	UTslGameOption_IsEnabledPreloadingMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsEnabledMotionBlur
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsEnabledMotionBlur()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsEnabledMotionBlur");

	UTslGameOption_IsEnabledMotionBlur_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsEnabledMinimapViewScale
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsEnabledMinimapViewScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsEnabledMinimapViewScale");

	UTslGameOption_IsEnabledMinimapViewScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsEnabledHrtfRemoteWeaponSound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsEnabledHrtfRemoteWeaponSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsEnabledHrtfRemoteWeaponSound");

	UTslGameOption_IsEnabledHrtfRemoteWeaponSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsEnabledAutoReloadOnOutOfAmmoFire
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsEnabledAutoReloadOnOutOfAmmoFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsEnabledAutoReloadOnOutOfAmmoFire");

	UTslGameOption_IsEnabledAutoReloadOnOutOfAmmoFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsEffectSoundMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsEffectSoundMute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsEffectSoundMute");

	UTslGameOption_IsEffectSoundMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsDoubleTapSupported
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputModeSettingActions       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsDoubleTapSupported(EInputModeSettingActions eAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsDoubleTapSupported");

	UTslGameOption_IsDoubleTapSupported_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsDefaultFunctionalityEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameplayFunctionalities       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsDefaultFunctionalityEnabled(EGameplayFunctionalities eAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsDefaultFunctionalityEnabled");

	UTslGameOption_IsDefaultFunctionalityEnabled_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsDefaultClientReplayEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameplayClientReplay          eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsDefaultClientReplayEnabled(EGameplayClientReplay eAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsDefaultClientReplayEnabled");

	UTslGameOption_IsDefaultClientReplayEnabled_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsCustomCrosshairColorEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsCustomCrosshairColorEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsCustomCrosshairColorEnabled");

	UTslGameOption_IsCustomCrosshairColorEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsClientReplayEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameplayClientReplay          eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsClientReplayEnabled(EGameplayClientReplay eAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsClientReplayEnabled");

	UTslGameOption_IsClientReplayEnabled_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.IsBGMSoundMute
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_IsBGMSoundMute()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.IsBGMSoundMute");

	UTslGameOption_IsBGMSoundMute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetWorldMapZoomSpeedLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetWorldMapZoomSpeedLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetWorldMapZoomSpeedLevel");

	UTslGameOption_GetWorldMapZoomSpeedLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetVoiceOutputVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetVoiceOutputVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetVoiceOutputVolume");

	UTslGameOption_GetVoiceOutputVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetVoiceInputVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetVoiceInputVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetVoiceInputVolume");

	UTslGameOption_GetVoiceInputVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetVoiceInputSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetVoiceInputSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetVoiceInputSensitivity");

	UTslGameOption_GetVoiceInputSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetUseTeamVoice
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetUseTeamVoice()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetUseTeamVoice");

	UTslGameOption_GetUseTeamVoice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetUsePushToTalk
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetUsePushToTalk()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetUsePushToTalk");

	UTslGameOption_GetUsePushToTalk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetUseGlobalVoice
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetUseGlobalVoice()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetUseGlobalVoice");

	UTslGameOption_GetUseGlobalVoice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetUseCharacterCapture
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetUseCharacterCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetUseCharacterCapture");

	UTslGameOption_GetUseCharacterCapture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetUISoundVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetUISoundVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetUISoundVolume");

	UTslGameOption_GetUISoundVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetTslInputMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputModeSettingActions       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// ETslInputModes                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETslInputModes UTslGameOption::STATIC_GetTslInputMode(EInputModeSettingActions eAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetTslInputMode");

	UTslGameOption_GetTslInputMode_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetTslGameUserSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTslGameUserSettings*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTslGameUserSettings* UTslGameOption::STATIC_GetTslGameUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetTslGameUserSettings");

	UTslGameOption_GetTslGameUserSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetTpsWeaponIconShowType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUiShowType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EUiShowType UTslGameOption::STATIC_GetTpsWeaponIconShowType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetTpsWeaponIconShowType");

	UTslGameOption_GetTpsWeaponIconShowType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetSupportedScreenResolutions
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FScreenResolution> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FScreenResolution> UTslGameOption::STATIC_GetSupportedScreenResolutions()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetSupportedScreenResolutions");

	UTslGameOption_GetSupportedScreenResolutions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetSupportedQualityLevels
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FSurportQualityLevel> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSurportQualityLevel> UTslGameOption::STATIC_GetSupportedQualityLevels()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetSupportedQualityLevels");

	UTslGameOption_GetSupportedQualityLevels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetSupportedKillcam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetSupportedKillcam()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetSupportedKillcam");

	UTslGameOption_GetSupportedKillcam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetSupportedFpsCameraFovRangeMin
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetSupportedFpsCameraFovRangeMin()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetSupportedFpsCameraFovRangeMin");

	UTslGameOption_GetSupportedFpsCameraFovRangeMin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetSupportedFpsCameraFovRangeMax
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetSupportedFpsCameraFovRangeMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetSupportedFpsCameraFovRangeMax");

	UTslGameOption_GetSupportedFpsCameraFovRangeMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetSupportedClientReplay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetSupportedClientReplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetSupportedClientReplay");

	UTslGameOption_GetSupportedClientReplay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetSelectMiniMapTypeIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetSelectMiniMapTypeIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetSelectMiniMapTypeIndex");

	UTslGameOption_GetSelectMiniMapTypeIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetScreenScale
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetScreenScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetScreenScale");

	UTslGameOption_GetScreenScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetScreenResolution
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FScreenResolution       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FScreenResolution UTslGameOption::STATIC_GetScreenResolution()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetScreenResolution");

	UTslGameOption_GetScreenResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetReticleColor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// EReticleType                   InReticleType                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            InBaseColor                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UTslGameOption::STATIC_GetReticleColor(EReticleType InReticleType, const struct FLinearColor& InBaseColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetReticleColor");

	UTslGameOption_GetReticleColor_Params params;
	params.InReticleType = InReticleType;
	params.InBaseColor = InBaseColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetReplayOptionEditable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetReplayOptionEditable()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetReplayOptionEditable");

	UTslGameOption_GetReplayOptionEditable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetQualityLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EQualityType                   Quality                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetQualityLevel(EQualityType Quality)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetQualityLevel");

	UTslGameOption_GetQualityLevel_Params params;
	params.Quality = Quality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetOverallScalabilityLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetOverallScalabilityLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetOverallScalabilityLevel");

	UTslGameOption_GetOverallScalabilityLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetNativeName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 InCultureName                  (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetNativeName(const struct FString& InCultureName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetNativeName");

	UTslGameOption_GetNativeName_Params params;
	params.InCultureName = InCultureName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetNativeLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 InCultureName                  (Parm, ZeroConstructor)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetNativeLanguage(const struct FString& InCultureName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetNativeLanguage");

	UTslGameOption_GetNativeLanguage_Params params;
	params.InCultureName = InCultureName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetMouseVerticalSensitivityMultiplier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetMouseVerticalSensitivityMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetMouseVerticalSensitivityMultiplier");

	UTslGameOption_GetMouseVerticalSensitivityMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetMouseSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   InMouseSensitiveName           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetMouseSensitivity(const struct FName& InMouseSensitiveName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetMouseSensitivity");

	UTslGameOption_GetMouseSensitivity_Params params;
	params.InMouseSensitiveName = InMouseSensitiveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetMiniMapTypes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FUiType>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FUiType> UTslGameOption::STATIC_GetMiniMapTypes()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetMiniMapTypes");

	UTslGameOption_GetMiniMapTypes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetMinimapColorType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMinimapColorType              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EMinimapColorType UTslGameOption::STATIC_GetMinimapColorType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetMinimapColorType");

	UTslGameOption_GetMinimapColorType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetMaxFps
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslGameOption::STATIC_GetMaxFps()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetMaxFps");

	UTslGameOption_GetMaxFps_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetMasterSoundVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetMasterSoundVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetMasterSoundVolume");

	UTslGameOption_GetMasterSoundVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetKeyName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTslInputKey            Key                            (Parm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTslGameOption::STATIC_GetKeyName(const struct FTslInputKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetKeyName");

	UTslGameOption_GetKeyName_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetKeyInputModeNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FKeyInputModeName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FKeyInputModeName> UTslGameOption::STATIC_GetKeyInputModeNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetKeyInputModeNames");

	UTslGameOption_GetKeyInputModeNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetGamma
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetGamma()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetGamma");

	UTslGameOption_GetGamma_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetGamePadToggleAcceleration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslGameOption::STATIC_GetGamePadToggleAcceleration()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetGamePadToggleAcceleration");

	UTslGameOption_GetGamePadToggleAcceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetGamePadSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   InGamePadSensitiveName         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetGamePadSensitivity(const struct FName& InGamePadSensitiveName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetGamePadSensitivity");

	UTslGameOption_GetGamePadSensitivity_Params params;
	params.InGamePadSensitiveName = InGamePadSensitiveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetGamepadPresetType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGamepadPresets                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EGamepadPresets UTslGameOption::STATIC_GetGamepadPresetType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetGamepadPresetType");

	UTslGameOption_GetGamepadPresetType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetGamepadKeyPresetDatas
// (Final, Native, Static, Public)
// Parameters:
// TArray<struct FTslGamepadKeyPreset> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslGamepadKeyPreset> UTslGameOption::STATIC_GetGamepadKeyPresetDatas()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetGamepadKeyPresetDatas");

	UTslGameOption_GetGamepadKeyPresetDatas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetGamePadDeadZone_Left
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetGamePadDeadZone_Left()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetGamePadDeadZone_Left");

	UTslGameOption_GetGamePadDeadZone_Left_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetGamePadDeadZone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetGamePadDeadZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetGamePadDeadZone");

	UTslGameOption_GetGamePadDeadZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetFullScreenMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EWindowMode>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EWindowMode> UTslGameOption::STATIC_GetFullScreenMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetFullScreenMode");

	UTslGameOption_GetFullScreenMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetFpsCameraFov
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetFpsCameraFov()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetFpsCameraFov");

	UTslGameOption_GetFpsCameraFov_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetFppWeaponIconShowType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUiShowType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EUiShowType UTslGameOption::STATIC_GetFppWeaponIconShowType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetFppWeaponIconShowType");

	UTslGameOption_GetFppWeaponIconShowType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetFppEquipableItemIconShowType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUiShowType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EUiShowType UTslGameOption::STATIC_GetFppEquipableItemIconShowType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetFppEquipableItemIconShowType");

	UTslGameOption_GetFppEquipableItemIconShowType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetForceFeedbackMultiplier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetForceFeedbackMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetForceFeedbackMultiplier");

	UTslGameOption_GetForceFeedbackMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetEffectSoundVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetEffectSoundVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetEffectSoundVolume");

	UTslGameOption_GetEffectSoundVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetDefaultInputModeSetting
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInputModeSettingActions       eAction                        (Parm, ZeroConstructor, IsPlainOldData)
// ETslInputModes                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETslInputModes UTslGameOption::STATIC_GetDefaultInputModeSetting(EInputModeSettingActions eAction)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetDefaultInputModeSetting");

	UTslGameOption_GetDefaultInputModeSetting_Params params;
	params.eAction = eAction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetDefaultGamepadPreset
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGamepadPresets                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EGamepadPresets UTslGameOption::STATIC_GetDefaultGamepadPreset()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetDefaultGamepadPreset");

	UTslGameOption_GetDefaultGamepadPreset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetDefaultCultureName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetDefaultCultureName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetDefaultCultureName");

	UTslGameOption_GetDefaultCultureName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetDefaultCrosshairColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UTslGameOption::STATIC_GetDefaultCrosshairColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetDefaultCrosshairColor");

	UTslGameOption_GetDefaultCrosshairColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetCustomCrosshairColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FColor                  ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FColor UTslGameOption::STATIC_GetCustomCrosshairColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetCustomCrosshairColor");

	UTslGameOption_GetCustomCrosshairColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetCurrentCultureName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetCurrentCultureName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetCurrentCultureName");

	UTslGameOption_GetCurrentCultureName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetCurrentCrosshairColorStr
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslGameOption::STATIC_GetCurrentCrosshairColorStr()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetCurrentCrosshairColorStr");

	UTslGameOption_GetCurrentCrosshairColorStr_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetCurrentColorBlindKey
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EColorBlindType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EColorBlindType UTslGameOption::STATIC_GetCurrentColorBlindKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetCurrentColorBlindKey");

	UTslGameOption_GetCurrentColorBlindKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetCrosshairColors
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FPresetColor>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FPresetColor> UTslGameOption::STATIC_GetCrosshairColors()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetCrosshairColors");

	UTslGameOption_GetCrosshairColors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetCrosshairColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FLinearColor UTslGameOption::STATIC_GetCrosshairColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetCrosshairColor");

	UTslGameOption_GetCrosshairColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetConvertedMouseSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   InMouseSensitiveName           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetConvertedMouseSensitivity(const struct FName& InMouseSensitiveName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetConvertedMouseSensitivity");

	UTslGameOption_GetConvertedMouseSensitivity_Params params;
	params.InMouseSensitiveName = InMouseSensitiveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetConvertedGamePadSensitivity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   InGamePadSensitiveName         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetConvertedGamePadSensitivity(const struct FName& InGamePadSensitiveName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetConvertedGamePadSensitivity");

	UTslGameOption_GetConvertedGamePadSensitivity_Params params;
	params.InGamePadSensitiveName = InGamePadSensitiveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetColorBlindTypes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FColorBlindType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FColorBlindType> UTslGameOption::STATIC_GetColorBlindTypes()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetColorBlindTypes");

	UTslGameOption_GetColorBlindTypes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetBGMSoundVolume
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_GetBGMSoundVolume()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetBGMSoundVolume");

	UTslGameOption_GetBGMSoundVolume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetAxisKeys
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDefault                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FTslInputKey>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslInputKey> UTslGameOption::STATIC_GetAxisKeys(const struct FName& AxisName, float Scale, bool bDefault)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetAxisKeys");

	UTslGameOption_GetAxisKeys_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;
	params.bDefault = bDefault;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetAxisKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Scale                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDefault                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWantAnyKey                    (Parm, ZeroConstructor, IsPlainOldData)
// EKeyBindingSlot                eKeySlot                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTslInputKey            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTslInputKey UTslGameOption::STATIC_GetAxisKey(const struct FName& AxisName, float Scale, bool bGamepad, bool bDefault, bool bWantAnyKey, EKeyBindingSlot eKeySlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetAxisKey");

	UTslGameOption_GetAxisKey_Params params;
	params.AxisName = AxisName;
	params.Scale = Scale;
	params.bGamepad = bGamepad;
	params.bDefault = bDefault;
	params.bWantAnyKey = bWantAnyKey;
	params.eKeySlot = eKeySlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetAutoQualityLevels
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            WorkScale                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          CPUMultiplier                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          GPUMultiplier                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FQualityLevelInfo> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FQualityLevelInfo> UTslGameOption::STATIC_GetAutoQualityLevels(int WorkScale, float CPUMultiplier, float GPUMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetAutoQualityLevels");

	UTslGameOption_GetAutoQualityLevels_Params params;
	params.WorkScale = WorkScale;
	params.CPUMultiplier = CPUMultiplier;
	params.GPUMultiplier = GPUMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetActionKeys
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDefault                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FTslInputKey>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTslInputKey> UTslGameOption::STATIC_GetActionKeys(const struct FName& ActionName, bool bDefault)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetActionKeys");

	UTslGameOption_GetActionKeys_Params params;
	params.ActionName = ActionName;
	params.bDefault = bDefault;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.GetActionKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bGamepad                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bDefault                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bWantAnyKey                    (Parm, ZeroConstructor, IsPlainOldData)
// EKeyBindingSlot                eKeySlot                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FTslInputKey            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTslInputKey UTslGameOption::STATIC_GetActionKey(const struct FName& ActionName, bool bGamepad, bool bDefault, bool bWantAnyKey, EKeyBindingSlot eKeySlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.GetActionKey");

	UTslGameOption_GetActionKey_Params params;
	params.ActionName = ActionName;
	params.bGamepad = bGamepad;
	params.bDefault = bDefault;
	params.bWantAnyKey = bWantAnyKey;
	params.eKeySlot = eKeySlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.DefaultGamePadInnerDeadZone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslGameOption::STATIC_DefaultGamePadInnerDeadZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.DefaultGamePadInnerDeadZone");

	UTslGameOption_DefaultGamePadInnerDeadZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.CustomizableScopeMouseSensitiveNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableMouseSensitiveName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableMouseSensitiveName> UTslGameOption::STATIC_CustomizableScopeMouseSensitiveNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CustomizableScopeMouseSensitiveNames");

	UTslGameOption_CustomizableScopeMouseSensitiveNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.CustomizableScopeGamePadSensitiveNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableGamePadSensitiveName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableGamePadSensitiveName> UTslGameOption::STATIC_CustomizableScopeGamePadSensitiveNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CustomizableScopeGamePadSensitiveNames");

	UTslGameOption_CustomizableScopeGamePadSensitiveNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.CustomizableNonScopeMouseSensitiveNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableMouseSensitiveName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableMouseSensitiveName> UTslGameOption::STATIC_CustomizableNonScopeMouseSensitiveNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CustomizableNonScopeMouseSensitiveNames");

	UTslGameOption_CustomizableNonScopeMouseSensitiveNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.CustomizableNonScopeGamePadSensitiveNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableGamePadSensitiveName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableGamePadSensitiveName> UTslGameOption::STATIC_CustomizableNonScopeGamePadSensitiveNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CustomizableNonScopeGamePadSensitiveNames");

	UTslGameOption_CustomizableNonScopeGamePadSensitiveNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.CustomizableMouseSensitiveNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableMouseSensitiveName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableMouseSensitiveName> UTslGameOption::STATIC_CustomizableMouseSensitiveNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CustomizableMouseSensitiveNames");

	UTslGameOption_CustomizableMouseSensitiveNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.CustomizableGamePadSensitiveNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableGamePadSensitiveName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableGamePadSensitiveName> UTslGameOption::STATIC_CustomizableGamePadSensitiveNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CustomizableGamePadSensitiveNames");

	UTslGameOption_CustomizableGamePadSensitiveNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.CustomizableCategoryData
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableCategoryData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableCategoryData> UTslGameOption::STATIC_CustomizableCategoryData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CustomizableCategoryData");

	UTslGameOption_CustomizableCategoryData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.CustomizableAxisName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableAxisName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableAxisName> UTslGameOption::STATIC_CustomizableAxisName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CustomizableAxisName");

	UTslGameOption_CustomizableAxisName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.CustomizableActionNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FCustomizableActionName> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCustomizableActionName> UTslGameOption::STATIC_CustomizableActionNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CustomizableActionNames");

	UTslGameOption_CustomizableActionNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.CultureNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FString>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FString> UTslGameOption::STATIC_CultureNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CultureNames");

	UTslGameOption_CultureNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.ClearAllGamepadKeyBinding
// (Final, Native, Static, Public)

void UTslGameOption::STATIC_ClearAllGamepadKeyBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.ClearAllGamepadKeyBinding");

	UTslGameOption_ClearAllGamepadKeyBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.CastTslInputModeFromName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   InputModeName                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// ETslInputModes                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETslInputModes UTslGameOption::STATIC_CastTslInputModeFromName(const struct FName& InputModeName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.CastTslInputModeFromName");

	UTslGameOption_CastTslInputModeFromName_Params params;
	params.InputModeName = InputModeName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslGameOption.ApplySettingsWithHudUpdateOption
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bCheckForCommandLineOverrides  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHudUpdate                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_ApplySettingsWithHudUpdateOption(bool bCheckForCommandLineOverrides, bool bHudUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.ApplySettingsWithHudUpdateOption");

	UTslGameOption_ApplySettingsWithHudUpdateOption_Params params;
	params.bCheckForCommandLineOverrides = bCheckForCommandLineOverrides;
	params.bHudUpdate = bHudUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.ApplyMouseSensitivity
// (Final, Native, Static, Public, BlueprintCallable)

void UTslGameOption::STATIC_ApplyMouseSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.ApplyMouseSensitivity");

	UTslGameOption_ApplyMouseSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.ApplyGameUserSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bCheckForCommandLineOverrides  (Parm, ZeroConstructor, IsPlainOldData)

void UTslGameOption::STATIC_ApplyGameUserSettings(bool bCheckForCommandLineOverrides)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.ApplyGameUserSettings");

	UTslGameOption_ApplyGameUserSettings_Params params;
	params.bCheckForCommandLineOverrides = bCheckForCommandLineOverrides;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.ApplyGamePadSensitivity
// (Final, Native, Static, Public, BlueprintCallable)

void UTslGameOption::STATIC_ApplyGamePadSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.ApplyGamePadSensitivity");

	UTslGameOption_ApplyGamePadSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.ApplyGamepadKeyPresetDatas
// (Final, Native, Static, Public)

void UTslGameOption::STATIC_ApplyGamepadKeyPresetDatas()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.ApplyGamepadKeyPresetDatas");

	UTslGameOption_ApplyGamepadKeyPresetDatas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.ApplyGamePadDeadZone
// (Final, Native, Static, Public, BlueprintCallable)

void UTslGameOption::STATIC_ApplyGamePadDeadZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.ApplyGamePadDeadZone");

	UTslGameOption_ApplyGamePadDeadZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGameOption.ApplyAutoQualitySetting
// (Final, Native, Static, Public, BlueprintCallable)

void UTslGameOption::STATIC_ApplyAutoQualitySetting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGameOption.ApplyAutoQualitySetting");

	UTslGameOption_ApplyAutoQualitySetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGamepadKeyHintContentWidget.UpdateDesign_Normal
// (Event, Public, BlueprintEvent)

void UTslGamepadKeyHintContentWidget::UpdateDesign_Normal()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGamepadKeyHintContentWidget.UpdateDesign_Normal");

	UTslGamepadKeyHintContentWidget_UpdateDesign_Normal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGamepadKeyHintWidget.UpdateHintSizeBoxPosition
// (Final, Native, Public)

void UTslGamepadKeyHintWidget::UpdateHintSizeBoxPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGamepadKeyHintWidget.UpdateHintSizeBoxPosition");

	UTslGamepadKeyHintWidget_UpdateHintSizeBoxPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslGamepadKeyHintWidget.OnGameUserSettingApplied
// (Final, Native, Public)

void UTslGamepadKeyHintWidget::OnGameUserSettingApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslGamepadKeyHintWidget.OnGameUserSettingApplied");

	UTslGamepadKeyHintWidget_OnGameUserSettingApplied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyboardAndMouseHintContentWidget.UpdateDesign_Normal
// (Event, Public, BlueprintEvent)

void UTslKeyboardAndMouseHintContentWidget::UpdateDesign_Normal()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyboardAndMouseHintContentWidget.UpdateDesign_Normal");

	UTslKeyboardAndMouseHintContentWidget_UpdateDesign_Normal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyboardAndMouseHintContentWidget.IsUsingFunctionKeys
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslKeyboardAndMouseHintContentWidget::IsUsingFunctionKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyboardAndMouseHintContentWidget.IsUsingFunctionKeys");

	UTslKeyboardAndMouseHintContentWidget_IsUsingFunctionKeys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslKeyboardAndMouseHintContentWidget.IsInvertedAxisKeyUsingFunctionKeys
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslKeyboardAndMouseHintContentWidget::IsInvertedAxisKeyUsingFunctionKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyboardAndMouseHintContentWidget.IsInvertedAxisKeyUsingFunctionKeys");

	UTslKeyboardAndMouseHintContentWidget_IsInvertedAxisKeyUsingFunctionKeys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslKeyboardAndMouseHintWidget.OnGameUserSettingApplied
// (Final, Native, Public)

void UTslKeyboardAndMouseHintWidget::OnGameUserSettingApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyboardAndMouseHintWidget.OnGameUserSettingApplied");

	UTslKeyboardAndMouseHintWidget_OnGameUserSettingApplied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyDisplayWidget.TransferInputEvent
// (Final, Native, Public)
// Parameters:
// struct FTslInputKey            TslInputKey                    (Parm)

void UTslKeyDisplayWidget::TransferInputEvent(const struct FTslInputKey& TslInputKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyDisplayWidget.TransferInputEvent");

	UTslKeyDisplayWidget_TransferInputEvent_Params params;
	params.TslInputKey = TslInputKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyDisplayWidget.SetupKeyDisplayWidget
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InInputName                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FText                   InDisplayName                  (ConstParm, Parm, OutParm, ReferenceParm)
// struct FName                   InCategoryName                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           InbAxisInput                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          InAxisScale                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbGamepad                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslKeyDisplayWidget::SetupKeyDisplayWidget(const struct FName& InInputName, const struct FText& InDisplayName, const struct FName& InCategoryName, bool InbAxisInput, float InAxisScale, bool InbGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyDisplayWidget.SetupKeyDisplayWidget");

	UTslKeyDisplayWidget_SetupKeyDisplayWidget_Params params;
	params.InInputName = InInputName;
	params.InDisplayName = InDisplayName;
	params.InCategoryName = InCategoryName;
	params.InbAxisInput = InbAxisInput;
	params.InAxisScale = InAxisScale;
	params.InbGamepad = InbGamepad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyDisplayWidget.InitializeKeyDisplayWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bDefault                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslKeyDisplayWidget::InitializeKeyDisplayWidget(bool bDefault)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyDisplayWidget.InitializeKeyDisplayWidget");

	UTslKeyDisplayWidget_InitializeKeyDisplayWidget_Params params;
	params.bDefault = bDefault;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyDisplayWidget.ApplyKey
// (Final, Native, Public, BlueprintCallable)

void UTslKeyDisplayWidget::ApplyKey()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyDisplayWidget.ApplyKey");

	UTslKeyDisplayWidget_ApplyKey_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyReceiverWidget.UpdateKeyUp
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FKey                    InKey                          (Parm)

void UTslKeyReceiverWidget::UpdateKeyUp(const struct FKey& InKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyReceiverWidget.UpdateKeyUp");

	UTslKeyReceiverWidget_UpdateKeyUp_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyReceiverWidget.UpdateKeyDown
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FKey                    InKey                          (Parm)

void UTslKeyReceiverWidget::UpdateKeyDown(const struct FKey& InKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyReceiverWidget.UpdateKeyDown");

	UTslKeyReceiverWidget_UpdateKeyDown_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyReceiverWidget.KeyUp
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FKey                    InKey                          (Parm)

void UTslKeyReceiverWidget::KeyUp(const struct FKey& InKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyReceiverWidget.KeyUp");

	UTslKeyReceiverWidget_KeyUp_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyReceiverWidget.KeyDown
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FKey                    InKey                          (Parm)

void UTslKeyReceiverWidget::KeyDown(const struct FKey& InKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyReceiverWidget.KeyDown");

	UTslKeyReceiverWidget_KeyDown_Params params;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyReceiverWidget.IsInputKeyDown
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslKeyReceiverWidget::IsInputKeyDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyReceiverWidget.IsInputKeyDown");

	UTslKeyReceiverWidget_IsInputKeyDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslKeyReceiverWidget.GetLastDownedKeyName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UTslKeyReceiverWidget::GetLastDownedKeyName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyReceiverWidget.GetLastDownedKeyName");

	UTslKeyReceiverWidget_GetLastDownedKeyName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslKeyOptionWidget.OnKeyChanged
// (Final, Native, Private)
// Parameters:
// class UTslKeyDisplayWidget*    InKeyDisplayWidget             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FTslInputKey            InInputedKey                   (Parm)

void UTslKeyOptionWidget::OnKeyChanged(class UTslKeyDisplayWidget* InKeyDisplayWidget, const struct FTslInputKey& InInputedKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyOptionWidget.OnKeyChanged");

	UTslKeyOptionWidget_OnKeyChanged_Params params;
	params.InKeyDisplayWidget = InKeyDisplayWidget;
	params.InInputedKey = InInputedKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeyOptionWidget.InitializeKeyAndMouseSetting
// (Final, Native, Public)

void UTslKeyOptionWidget::InitializeKeyAndMouseSetting()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeyOptionWidget.InitializeKeyAndMouseSetting");

	UTslKeyOptionWidget_InitializeKeyAndMouseSetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLoadingScreenPage.OnUpdate
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FText                   Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   Description                    (ConstParm, Parm, OutParm, ReferenceParm)
// class UTexture2D*              BackgroundTexture              (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            BackgroundColor                (Parm, IsPlainOldData)

void UTslLoadingScreenPage::OnUpdate(const struct FText& Title, const struct FText& Description, class UTexture2D* BackgroundTexture, const struct FLinearColor& BackgroundColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLoadingScreenPage.OnUpdate");

	UTslLoadingScreenPage_OnUpdate_Params params;
	params.Title = Title;
	params.Description = Description;
	params.BackgroundTexture = BackgroundTexture;
	params.BackgroundColor = BackgroundColor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagHudWidget.UpdateNameTagWidget_Internal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagHudWidget::UpdateNameTagWidget_Internal(int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagHudWidget.UpdateNameTagWidget_Internal");

	UTslLobbyNameTagHudWidget_UpdateNameTagWidget_Internal_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagHudWidget.SetNameTagWidget_Internal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagHudWidget::SetNameTagWidget_Internal(int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagHudWidget.SetNameTagWidget_Internal");

	UTslLobbyNameTagHudWidget_SetNameTagWidget_Internal_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagHudWidget.ResetNameTagWidget_Internal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagHudWidget::ResetNameTagWidget_Internal(int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagHudWidget.ResetNameTagWidget_Internal");

	UTslLobbyNameTagHudWidget_ResetNameTagWidget_Internal_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagHudWidget.GetNameTagWidget_Internal
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class UTslLobbyNameTagWidget*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTslLobbyNameTagWidget* UTslLobbyNameTagHudWidget::GetNameTagWidget_Internal(int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagHudWidget.GetNameTagWidget_Internal");

	UTslLobbyNameTagHudWidget_GetNameTagWidget_Internal_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLobbyNameTagHudWidget.GetLobbyCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// class ALobbyCharacter*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ALobbyCharacter* UTslLobbyNameTagHudWidget::GetLobbyCharacter(int SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagHudWidget.GetLobbyCharacter");

	UTslLobbyNameTagHudWidget_GetLobbyCharacter_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.UpdateWidgetSwitchers
// (Final, Native, Public, BlueprintCallable)

void UTslLobbyNameTagWidget::UpdateWidgetSwitchers()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.UpdateWidgetSwitchers");

	UTslLobbyNameTagWidget_UpdateWidgetSwitchers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.UpdateWidgetsVisibilities
// (Final, Native, Public, BlueprintCallable)

void UTslLobbyNameTagWidget::UpdateWidgetsVisibilities()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.UpdateWidgetsVisibilities");

	UTslLobbyNameTagWidget_UpdateWidgetsVisibilities_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetSpeaking
// (Final, Native, Private)
// Parameters:
// bool                           InbSpeaking                    (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagWidget::SetSpeaking(bool InbSpeaking)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetSpeaking");

	UTslLobbyNameTagWidget_SetSpeaking_Params params;
	params.InbSpeaking = InbSpeaking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetReady
// (Final, Native, Private)
// Parameters:
// bool                           InbReady                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagWidget::SetReady(bool InbReady)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetReady");

	UTslLobbyNameTagWidget_SetReady_Params params;
	params.InbReady = InbReady;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetRankEmblem
// (Final, Native, Private)
// Parameters:
// ERatingRankType                RankType                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagWidget::SetRankEmblem(ERatingRankType RankType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetRankEmblem");

	UTslLobbyNameTagWidget_SetRankEmblem_Params params;
	params.RankType = RankType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetOffsetTranslation
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FVector                 InOffsetTranslation            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UTslLobbyNameTagWidget::SetOffsetTranslation(const struct FVector& InOffsetTranslation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetOffsetTranslation");

	UTslLobbyNameTagWidget_SetOffsetTranslation_Params params;
	params.InOffsetTranslation = InOffsetTranslation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetNickName
// (Final, Native, Private)
// Parameters:
// struct FString                 InNickName                     (Parm, ZeroConstructor)

void UTslLobbyNameTagWidget::SetNickName(const struct FString& InNickName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetNickName");

	UTslLobbyNameTagWidget_SetNickName_Params params;
	params.InNickName = InNickName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetHost
// (Final, Native, Private)
// Parameters:
// bool                           InbHost                        (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagWidget::SetHost(bool InbHost)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetHost");

	UTslLobbyNameTagWidget_SetHost_Params params;
	params.InbHost = InbHost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetBinding
// (Final, Native, Private)

void UTslLobbyNameTagWidget::SetBinding()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.SetBinding");

	UTslLobbyNameTagWidget_SetBinding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.OnVoiceChatUpdated
// (Final, Native, Public)
// Parameters:
// struct FString                 InUniqueId                     (Parm, ZeroConstructor)
// bool                           InbTeamChannel                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbSpeaking                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          InEnergy                       (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagWidget::OnVoiceChatUpdated(const struct FString& InUniqueId, bool InbTeamChannel, bool InbSpeaking, float InEnergy)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.OnVoiceChatUpdated");

	UTslLobbyNameTagWidget_OnVoiceChatUpdated_Params params;
	params.InUniqueId = InUniqueId;
	params.InbTeamChannel = InbTeamChannel;
	params.InbSpeaking = InbSpeaking;
	params.InEnergy = InEnergy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.IsAlone
// (Final, Native, Private, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslLobbyNameTagWidget::IsAlone()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.IsAlone");

	UTslLobbyNameTagWidget_IsAlone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.InitWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 InNickName                     (Parm, ZeroConstructor)
// ERatingRankType                InRankEmblem                   (Parm, ZeroConstructor, IsPlainOldData)

void UTslLobbyNameTagWidget::InitWidget(const struct FString& InNickName, ERatingRankType InRankEmblem)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.InitWidget");

	UTslLobbyNameTagWidget_InitWidget_Params params;
	params.InNickName = InNickName;
	params.InRankEmblem = InRankEmblem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLobbyNameTagWidget.HandlePrepass
// (Final, Native, Public, BlueprintCallable)

void UTslLobbyNameTagWidget::HandlePrepass()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLobbyNameTagWidget.HandlePrepass");

	UTslLobbyNameTagWidget_HandlePrepass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.SPing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          Data                           (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslLPCPlayerState::SPing(TArray<unsigned char> Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.SPing");

	ATslLPCPlayerState_SPing_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.SetPingPosition
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               InPingPosition                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATslLPCPlayerState::SetPingPosition(const struct FVector2D& InPingPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.SetPingPosition");

	ATslLPCPlayerState_SetPingPosition_Params params;
	params.InPingPosition = InPingPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.SetClientUnknownNumber
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetClient)
// Parameters:
// int                            NewUnknownNumber               (Parm, ZeroConstructor, IsPlainOldData)

void ATslLPCPlayerState::SetClientUnknownNumber(int NewUnknownNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.SetClientUnknownNumber");

	ATslLPCPlayerState_SetClientUnknownNumber_Params params;
	params.NewUnknownNumber = NewUnknownNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.ServerTournamentData
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<uint32_t>               Data                           (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslLPCPlayerState::ServerTournamentData(TArray<uint32_t> Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.ServerTournamentData");

	ATslLPCPlayerState_ServerTournamentData_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_ReportToken
// (Final, Native, Protected)
// Parameters:
// struct FString                 OldReportToken                 (Parm, ZeroConstructor)

void ATslLPCPlayerState::OnRep_ReportToken(const struct FString& OldReportToken)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_ReportToken");

	ATslLPCPlayerState_OnRep_ReportToken_Params params;
	params.OldReportToken = OldReportToken;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_Ranking
// (Final, Native, Protected)
// Parameters:
// int                            OldRanking                     (Parm, ZeroConstructor, IsPlainOldData)

void ATslLPCPlayerState::OnRep_Ranking(int OldRanking)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_Ranking");

	ATslLPCPlayerState_OnRep_Ranking_Params params;
	params.OldRanking = OldRanking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_PlayerStatisticsForOwner
// (Final, Native, Protected)

void ATslLPCPlayerState::OnRep_PlayerStatisticsForOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_PlayerStatisticsForOwner");

	ATslLPCPlayerState_OnRep_PlayerStatisticsForOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_PlayerStatistics
// (Final, Native, Protected)
// Parameters:
// struct FTslPlayerStatistics    OldPlayerStatistics            (Parm)

void ATslLPCPlayerState::OnRep_PlayerStatistics(const struct FTslPlayerStatistics& OldPlayerStatistics)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_PlayerStatistics");

	ATslLPCPlayerState_OnRep_PlayerStatistics_Params params;
	params.OldPlayerStatistics = OldPlayerStatistics;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_LastHitTime
// (Final, Native, Protected)

void ATslLPCPlayerState::OnRep_LastHitTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_LastHitTime");

	ATslLPCPlayerState_OnRep_LastHitTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_bQuitter
// (Final, Native, Protected)

void ATslLPCPlayerState::OnRep_bQuitter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.OnRep_bQuitter");

	ATslLPCPlayerState_OnRep_bQuitter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.IsQuitter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslLPCPlayerState::IsQuitter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.IsQuitter");

	ATslLPCPlayerState_IsQuitter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.IsObserver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslLPCPlayerState::IsObserver()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.IsObserver");

	ATslLPCPlayerState_IsObserver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.IsMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslLPCPlayerState::IsMaxLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.IsMaxLevel");

	ATslLPCPlayerState_IsMaxLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.IsInAircraft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslLPCPlayerState::IsInAircraft()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.IsInAircraft");

	ATslLPCPlayerState_IsInAircraft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.InformAboutKill
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EDamageReason                  DamageReason                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void ATslLPCPlayerState::InformAboutKill(EDamageReason DamageReason, class AActor* DamageCauser, class UDamageType* DamageType, float Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.InformAboutKill");

	ATslLPCPlayerState_InformAboutKill_Params params;
	params.DamageReason = DamageReason;
	params.DamageCauser = DamageCauser;
	params.DamageType = DamageType;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetXpRewardByTeamSpectatingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetXpRewardByTeamSpectatingTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetXpRewardByTeamSpectatingTime");

	ATslLPCPlayerState_GetXpRewardByTeamSpectatingTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetXpRewardBySurvivalTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetXpRewardBySurvivalTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetXpRewardBySurvivalTime");

	ATslLPCPlayerState_GetXpRewardBySurvivalTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetXpBoostingAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetXpBoostingAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetXpBoostingAmount");

	ATslLPCPlayerState_GetXpBoostingAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetXpBoost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetXpBoost()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetXpBoost");

	ATslLPCPlayerState_GetXpBoost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetUnknownNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslLPCPlayerState::GetUnknownNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetUnknownNumber");

	ATslLPCPlayerState_GetUnknownNumber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetTotalXpRewardRaw
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetTotalXpRewardRaw()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetTotalXpRewardRaw");

	ATslLPCPlayerState_GetTotalXpRewardRaw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetTotalXpRewardBoostedAndCapped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetTotalXpRewardBoostedAndCapped()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetTotalXpRewardBoostedAndCapped");

	ATslLPCPlayerState_GetTotalXpRewardBoostedAndCapped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetTotalXpRewardBoosted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetTotalXpRewardBoosted()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetTotalXpRewardBoosted");

	ATslLPCPlayerState_GetTotalXpRewardBoosted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetTotalBpRewardRaw
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetTotalBpRewardRaw()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetTotalBpRewardRaw");

	ATslLPCPlayerState_GetTotalBpRewardRaw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetTotalBpRewardBoosted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetTotalBpRewardBoosted()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetTotalBpRewardBoosted");

	ATslLPCPlayerState_GetTotalBpRewardBoosted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetTeamSpectatingTimeInSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetTeamSpectatingTimeInSeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetTeamSpectatingTimeInSeconds");

	ATslLPCPlayerState_GetTeamSpectatingTimeInSeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetTeamNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslLPCPlayerState::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetTeamNum");

	ATslLPCPlayerState_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetSurvivalTimeInSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetSurvivalTimeInSeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetSurvivalTimeInSeconds");

	ATslLPCPlayerState_GetSurvivalTimeInSeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetSquadMemberIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslLPCPlayerState::GetSquadMemberIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetSquadMemberIndex");

	ATslLPCPlayerState_GetSquadMemberIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetSquadIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslLPCPlayerState::GetSquadIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetSquadIndex");

	ATslLPCPlayerState_GetSquadIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetShortPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslLPCPlayerState::GetShortPlayerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetShortPlayerName");

	ATslLPCPlayerState_GetShortPlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetPiningTimeSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetPiningTimeSeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetPiningTimeSeconds");

	ATslLPCPlayerState_GetPiningTimeSeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetPingPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D ATslLPCPlayerState::GetPingPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetPingPosition");

	ATslLPCPlayerState_GetPingPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetPing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetPing");

	ATslLPCPlayerState_GetPing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetOwningTslPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerController* ATslLPCPlayerState::GetOwningTslPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetOwningTslPlayerController");

	ATslLPCPlayerState_GetOwningTslPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetObserverAuthorityType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EObserverAuthorityType         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EObserverAuthorityType ATslLPCPlayerState::GetObserverAuthorityType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetObserverAuthorityType");

	ATslLPCPlayerState_GetObserverAuthorityType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetMapMarkerPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector2D ATslLPCPlayerState::GetMapMarkerPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetMapMarkerPosition");

	ATslLPCPlayerState_GetMapMarkerPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int ATslLPCPlayerState::GetKills()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetKills");

	ATslLPCPlayerState_GetKills_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bShortPlayerName               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bHideName                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString ATslLPCPlayerState::GetDisplayName(bool bShortPlayerName, bool bHideName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetDisplayName");

	ATslLPCPlayerState_GetDisplayName_Params params;
	params.bShortPlayerName = bShortPlayerName;
	params.bHideName = bHideName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetDailyXpMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetDailyXpMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetDailyXpMax");

	ATslLPCPlayerState_GetDailyXpMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetCurrentDailyXp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetCurrentDailyXp()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetCurrentDailyXp");

	ATslLPCPlayerState_GetCurrentDailyXp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetBpRewardByRanking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetBpRewardByRanking()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetBpRewardByRanking");

	ATslLPCPlayerState_GetBpRewardByRanking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetBpRewardByPlayTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetBpRewardByPlayTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetBpRewardByPlayTime");

	ATslLPCPlayerState_GetBpRewardByPlayTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetBpRewardByKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetBpRewardByKills()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetBpRewardByKills");

	ATslLPCPlayerState_GetBpRewardByKills_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetBpRewardByDamageDealt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetBpRewardByDamageDealt()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetBpRewardByDamageDealt");

	ATslLPCPlayerState_GetBpRewardByDamageDealt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetBpBoostingAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetBpBoostingAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetBpBoostingAmount");

	ATslLPCPlayerState_GetBpBoostingAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.GetBpBoost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslLPCPlayerState::GetBpBoost()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.GetBpBoost");

	ATslLPCPlayerState_GetBpBoost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.CPing
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<unsigned char>          Data                           (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslLPCPlayerState::CPing(TArray<unsigned char> Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.CPing");

	ATslLPCPlayerState_CPing_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.ClientUpdateRankingOnlineEvent
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            InRanking                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslLPCPlayerState::ClientUpdateRankingOnlineEvent(int InRanking)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.ClientUpdateRankingOnlineEvent");

	ATslLPCPlayerState_ClientUpdateRankingOnlineEvent_Params params;
	params.InRanking = InRanking;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.ClientTournamentData
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<uint32_t>               Data                           (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void ATslLPCPlayerState::ClientTournamentData(TArray<uint32_t> Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.ClientTournamentData");

	ATslLPCPlayerState_ClientTournamentData_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.ClientSetReconnectAddId
// (Net, NetReliable, Native, Event, Public, NetClient)

void ATslLPCPlayerState::ClientSetReconnectAddId()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.ClientSetReconnectAddId");

	ATslLPCPlayerState_ClientSetReconnectAddId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.ClientInformFirstKill
// (Net, NetReliable, Native, Event, Public, NetClient, Const)

void ATslLPCPlayerState::ClientInformFirstKill()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.ClientInformFirstKill");

	ATslLPCPlayerState_ClientInformFirstKill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.ClientInformAssist
// (Net, NetReliable, Native, Event, Public, NetClient)

void ATslLPCPlayerState::ClientInformAssist()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.ClientInformAssist");

	ATslLPCPlayerState_ClientInformAssist_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.BroadcastTeamKillingSpree
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            InTeamNumber                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            KillCount                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslLPCPlayerState::BroadcastTeamKillingSpree(int InTeamNumber, int KillCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.BroadcastTeamKillingSpree");

	ATslLPCPlayerState_BroadcastTeamKillingSpree_Params params;
	params.InTeamNumber = InTeamNumber;
	params.KillCount = KillCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.BroadcastTeamElimination
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// int                            EliminatorTeamNum              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bIsWipedOut                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            EliminatedTeamRank             (Parm, ZeroConstructor, IsPlainOldData)

void ATslLPCPlayerState::BroadcastTeamElimination(int EliminatorTeamNum, bool bIsWipedOut, int EliminatedTeamRank)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.BroadcastTeamElimination");

	ATslLPCPlayerState_BroadcastTeamElimination_Params params;
	params.EliminatorTeamNum = EliminatorTeamNum;
	params.bIsWipedOut = bIsWipedOut;
	params.EliminatedTeamRank = EliminatedTeamRank;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.BroadcastPersonalKillingSpree
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FString                 PlayerNameStr                  (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// int                            InTeamNumber                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            KillCount                      (Parm, ZeroConstructor, IsPlainOldData)

void ATslLPCPlayerState::BroadcastPersonalKillingSpree(const struct FString& PlayerNameStr, int InTeamNumber, int KillCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.BroadcastPersonalKillingSpree");

	ATslLPCPlayerState_BroadcastPersonalKillingSpree_Params params;
	params.PlayerNameStr = PlayerNameStr;
	params.InTeamNumber = InTeamNumber;
	params.KillCount = KillCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.BroadcastMidGameBan
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ATslLPCPlayerState*      BannedPlayerState              (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 BanCode                        (Parm, ZeroConstructor)
// struct FString                 BanType                        (Parm, ZeroConstructor)

void ATslLPCPlayerState::BroadcastMidGameBan(class ATslLPCPlayerState* BannedPlayerState, const struct FString& BanCode, const struct FString& BanType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.BroadcastMidGameBan");

	ATslLPCPlayerState_BroadcastMidGameBan_Params params;
	params.BannedPlayerState = BannedPlayerState;
	params.BanCode = BanCode;
	params.BanType = BanType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslLPCPlayerState.BroadcastDeath
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class ATslLPCPlayerState*      KillerPlayerState              (Parm, ZeroConstructor, IsPlainOldData)
// class ATslLPCPlayerState*      GroggyPlayerInstigator         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType*             KillerDamageType               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EDamageReason                  DamageReason                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   DamageCauserName               (ConstParm, Parm, ReferenceParm)
// class UClass*                  DamageCauserClass              (Parm, ZeroConstructor, IsPlainOldData)
// int                            AlivePlayerNum                 (Parm, ZeroConstructor, IsPlainOldData)
// int                            AliveTeamNum                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           InbIsStealKilled               (Parm, ZeroConstructor, IsPlainOldData)

void ATslLPCPlayerState::BroadcastDeath(class ATslLPCPlayerState* KillerPlayerState, class ATslLPCPlayerState* GroggyPlayerInstigator, class UDamageType* KillerDamageType, EDamageReason DamageReason, const struct FText& DamageCauserName, class UClass* DamageCauserClass, int AlivePlayerNum, int AliveTeamNum, bool InbIsStealKilled)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslLPCPlayerState.BroadcastDeath");

	ATslLPCPlayerState_BroadcastDeath_Params params;
	params.KillerPlayerState = KillerPlayerState;
	params.GroggyPlayerInstigator = GroggyPlayerInstigator;
	params.KillerDamageType = KillerDamageType;
	params.DamageReason = DamageReason;
	params.DamageCauserName = DamageCauserName;
	params.DamageCauserClass = DamageCauserClass;
	params.AlivePlayerNum = AlivePlayerNum;
	params.AliveTeamNum = AliveTeamNum;
	params.InbIsStealKilled = InbIsStealKilled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.VehicleHasDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotorbikeVehicle::VehicleHasDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.VehicleHasDriver");

	ATslMotorbikeVehicle_VehicleHasDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlRollInput
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlRollInput(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlRollInput");

	ATslMotorbikeVehicle_SetAirControlRollInput_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlR
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlR(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlR");

	ATslMotorbikeVehicle_SetAirControlR_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlQ
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlQ(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlQ");

	ATslMotorbikeVehicle_SetAirControlQ_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlPitchInput
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlPitchInput(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlPitchInput");

	ATslMotorbikeVehicle_SetAirControlPitchInput_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlL
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlL(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlL");

	ATslMotorbikeVehicle_SetAirControlL_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlF
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlF(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlF");

	ATslMotorbikeVehicle_SetAirControlF_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlE
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlE(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlE");

	ATslMotorbikeVehicle_SetAirControlE_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlB
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void ATslMotorbikeVehicle::SetAirControlB(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.SetAirControlB");

	ATslMotorbikeVehicle_SetAirControlB_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.ProcessFlipAndStabilize
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void ATslMotorbikeVehicle::ProcessFlipAndStabilize()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.ProcessFlipAndStabilize");

	ATslMotorbikeVehicle_ProcessFlipAndStabilize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.OnVehicleEjected
// (Native, Protected)

void ATslMotorbikeVehicle::OnVehicleEjected()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.OnVehicleEjected");

	ATslMotorbikeVehicle_OnVehicleEjected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.OnPostDriverRide
// (Native, Protected)

void ATslMotorbikeVehicle::OnPostDriverRide()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.OnPostDriverRide");

	ATslMotorbikeVehicle_OnPostDriverRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.OnPostDriverLeave
// (Native, Protected)

void ATslMotorbikeVehicle::OnPostDriverLeave()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.OnPostDriverLeave");

	ATslMotorbikeVehicle_OnPostDriverLeave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.OnMeshHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void ATslMotorbikeVehicle::OnMeshHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.OnMeshHit");

	ATslMotorbikeVehicle_OnMeshHit_Params params;
	params.HitComp = HitComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.IsUsingActiveStabilize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotorbikeVehicle::IsUsingActiveStabilize()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.IsUsingActiveStabilize");

	ATslMotorbikeVehicle_IsUsingActiveStabilize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.IsKickstandActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotorbikeVehicle::IsKickstandActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.IsKickstandActive");

	ATslMotorbikeVehicle_IsKickstandActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.IsFlippingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotorbikeVehicle::IsFlippingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.IsFlippingEnabled");

	ATslMotorbikeVehicle_IsFlippingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.HasContact
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslMotorbikeVehicle::HasContact()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.HasContact");

	ATslMotorbikeVehicle_HasContact_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslMotorbikeVehicle.GetCOMSteerOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslMotorbikeVehicle::GetCOMSteerOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslMotorbikeVehicle.GetCOMSteerOffset");

	ATslMotorbikeVehicle_GetCOMSteerOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslPopupInterface.SetPopup
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPopupStyle                    PopupStyle                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   Message                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FScriptDelegate         PressedDelegate                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UTslPopupInterface::SetPopup(EPopupStyle PopupStyle, const struct FText& Title, const struct FText& Message, const struct FScriptDelegate& PressedDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslPopupInterface.SetPopup");

	UTslPopupInterface_SetPopup_Params params;
	params.PopupStyle = PopupStyle;
	params.Title = Title;
	params.Message = Message;
	params.PressedDelegate = PressedDelegate;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslPostProcessEffect.SetMaterialVectorParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ParameterName                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            Value                          (Parm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPostProcessEffect::SetMaterialVectorParameter(int idx, const struct FName& ParameterName, const struct FLinearColor& Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslPostProcessEffect.SetMaterialVectorParameter");

	ATslPostProcessEffect_SetMaterialVectorParameter_Params params;
	params.idx = idx;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslPostProcessEffect.SetMaterialParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ParameterName                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPostProcessEffect::SetMaterialParameter(int idx, const struct FName& ParameterName, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslPostProcessEffect.SetMaterialParameter");

	ATslPostProcessEffect_SetMaterialParameter_Params params;
	params.idx = idx;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslPostProcessEffect.SetMaterialBlendWeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            idx                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPostProcessEffect::SetMaterialBlendWeight(int idx, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslPostProcessEffect.SetMaterialBlendWeight");

	ATslPostProcessEffect_SetMaterialBlendWeight_Params params;
	params.idx = idx;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslPostProcessEffect.SetEffectParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ParameterName                  (Parm, ZeroConstructor)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPostProcessEffect::SetEffectParameter(const struct FString& ParameterName, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslPostProcessEffect.SetEffectParameter");

	ATslPostProcessEffect_SetEffectParameter_Params params;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslPostProcessEffect.SetDepthOfFieldFarBlurSize
// (Final, Native, Public)
// Parameters:
// float                          NewBlurSize                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool ATslPostProcessEffect::SetDepthOfFieldFarBlurSize(float NewBlurSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslPostProcessEffect.SetDepthOfFieldFarBlurSize");

	ATslPostProcessEffect_SetDepthOfFieldFarBlurSize_Params params;
	params.NewBlurSize = NewBlurSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslPostProcessEffect.OnSetEffectParameter
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 ParameterName                  (Parm, ZeroConstructor)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)

void ATslPostProcessEffect::OnSetEffectParameter(const struct FString& ParameterName, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslPostProcessEffect.OnSetEffectParameter");

	ATslPostProcessEffect_OnSetEffectParameter_Params params;
	params.ParameterName = ParameterName;
	params.Value = Value;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslPostProcessEffect.GetEffectParameter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ParameterName                  (Parm, ZeroConstructor)
// float                          DefaultValue                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPostProcessEffect::GetEffectParameter(const struct FString& ParameterName, float DefaultValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslPostProcessEffect.GetEffectParameter");

	ATslPostProcessEffect_GetEffectParameter_Params params;
	params.ParameterName = ParameterName;
	params.DefaultValue = DefaultValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslPostProcessEffect.GetDepthOfFieldFarBlurSize
// (Final, Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float ATslPostProcessEffect::GetDepthOfFieldFarBlurSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslPostProcessEffect.GetDepthOfFieldFarBlurSize");

	ATslPostProcessEffect_GetDepthOfFieldFarBlurSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslRankEmblemWidget.SetRankEmblemFromRankType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ERatingRankType                InRankType                     (Parm, ZeroConstructor, IsPlainOldData)

void UTslRankEmblemWidget::SetRankEmblemFromRankType(ERatingRankType InRankType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslRankEmblemWidget.SetRankEmblemFromRankType");

	UTslRankEmblemWidget_SetRankEmblemFromRankType_Params params;
	params.InRankType = InRankType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslSceneCaptureWorld.InitWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGameInstance*           GameInstance                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 SceneCapturePackageName        (Parm, ZeroConstructor)

void UTslSceneCaptureWorld::InitWorld(class UGameInstance* GameInstance, const struct FString& SceneCapturePackageName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSceneCaptureWorld.InitWorld");

	UTslSceneCaptureWorld_InitWorld_Params params;
	params.GameInstance = GameInstance;
	params.SceneCapturePackageName = SceneCapturePackageName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslSceneCaptureWorld.DestroyWorld
// (Final, Native, Public, BlueprintCallable)

void UTslSceneCaptureWorld::DestroyWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSceneCaptureWorld.DestroyWorld");

	UTslSceneCaptureWorld_DestroyWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslSettings.SetCharacterStudioRenderTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*  rt                             (Parm, ZeroConstructor, IsPlainOldData)

void UTslSettings::SetCharacterStudioRenderTarget(class UTextureRenderTarget2D* rt)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.SetCharacterStudioRenderTarget");

	UTslSettings_SetCharacterStudioRenderTarget_Params params;
	params.rt = rt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslSettings.IsXenuineRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsXenuineRunning()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.IsXenuineRunning");

	UTslSettings_IsXenuineRunning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslSettings.IsVoiceChatEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsVoiceChatEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.IsVoiceChatEnabled");

	UTslSettings_IsVoiceChatEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslSettings.IsUsingGappLobby
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsUsingGappLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.IsUsingGappLobby");

	UTslSettings_IsUsingGappLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslSettings.IsForKoreanRating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsForKoreanRating()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.IsForKoreanRating");

	UTslSettings_IsForKoreanRating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslSettings.IsForKakaoTest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsForKakaoTest()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.IsForKakaoTest");

	UTslSettings_IsForKakaoTest_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslSettings.IsForKakao
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsForKakao()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.IsForKakao");

	UTslSettings_IsForKakao_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslSettings.IsForChineseLicensing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslSettings::IsForChineseLicensing()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.IsForChineseLicensing");

	UTslSettings_IsForChineseLicensing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslSettings.GetTslSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTslSettings*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTslSettings* UTslSettings::STATIC_GetTslSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.GetTslSettings");

	UTslSettings_GetTslSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslSettings.GetNotifyMaxDistanceByName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   InName                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslSettings::GetNotifyMaxDistanceByName(const struct FName& InName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.GetNotifyMaxDistanceByName");

	UTslSettings_GetNotifyMaxDistanceByName_Params params;
	params.InName = InName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslSettings.GetGappLobbyUrl
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslSettings::GetGappLobbyUrl()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.GetGappLobbyUrl");

	UTslSettings_GetGappLobbyUrl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslSettings.GetCharacterStudioRenderTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTextureRenderTarget2D* UTslSettings::GetCharacterStudioRenderTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslSettings.GetCharacterStudioRenderTarget");

	UTslSettings_GetCharacterStudioRenderTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.UseHighPrecisionMouseMovement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_UseHighPrecisionMouseMovement(class APlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.UseHighPrecisionMouseMovement");

	UTslStatics_UseHighPrecisionMouseMovement_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslStatics.SwitchValueByIsConsole
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ConsoleOverrideValue           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_SwitchValueByIsConsole(float Value, float ConsoleOverrideValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.SwitchValueByIsConsole");

	UTslStatics_SwitchValueByIsConsole_Params params;
	params.Value = Value;
	params.ConsoleOverrideValue = ConsoleOverrideValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.SetWorldOriginByDistance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       Controller                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          XYDistanceToShift              (Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_SetWorldOriginByDistance(class APlayerController* Controller, float XYDistanceToShift)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.SetWorldOriginByDistance");

	UTslStatics_SetWorldOriginByDistance_Params params;
	params.Controller = Controller;
	params.XYDistanceToShift = XYDistanceToShift;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslStatics.SetWorldOrigin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       Controller                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_SetWorldOrigin(class APlayerController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.SetWorldOrigin");

	UTslStatics_SetWorldOrigin_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslStatics.SetAnimationAkSwitch
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 SwitchGroup                    (Parm, ZeroConstructor)
// struct FString                 SwitchState                    (Parm, ZeroConstructor)

void UTslStatics::STATIC_SetAnimationAkSwitch(class ACharacter* Character, const struct FString& SwitchGroup, const struct FString& SwitchState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.SetAnimationAkSwitch");

	UTslStatics_SetAnimationAkSwitch_Params params;
	params.Character = Character;
	params.SwitchGroup = SwitchGroup;
	params.SwitchState = SwitchState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslStatics.SetAnimationAkRTPC
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 RTPCName                       (Parm, ZeroConstructor)
// float                          RTPCValue                      (Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_SetAnimationAkRTPC(class ACharacter* Character, const struct FString& RTPCName, float RTPCValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.SetAnimationAkRTPC");

	UTslStatics_SetAnimationAkRTPC_Params params;
	params.Character = Character;
	params.RTPCName = RTPCName;
	params.RTPCValue = RTPCValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslStatics.ServerPositionToLocal
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Server                         (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_ServerPositionToLocal(class UObject* WorldContextObject, const struct FVector& Server)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.ServerPositionToLocal");

	UTslStatics_ServerPositionToLocal_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Server = Server;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.SaveStringToFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 Str                            (Parm, ZeroConstructor)
// struct FString                 Filename                       (Parm, ZeroConstructor)

void UTslStatics::STATIC_SaveStringToFile(const struct FString& Str, const struct FString& Filename)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.SaveStringToFile");

	UTslStatics_SaveStringToFile_Params params;
	params.Str = Str;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslStatics.SaveImageToFile
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 Filename                       (Parm, ZeroConstructor)
// int                            Width                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            Height                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FLinearColor>    LinearColorArray               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bCanReplaceExisting            (Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_SaveImageToFile(const struct FString& Filename, int Width, int Height, TArray<struct FLinearColor> LinearColorArray, bool bCanReplaceExisting)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.SaveImageToFile");

	UTslStatics_SaveImageToFile_Params params;
	params.Filename = Filename;
	params.Width = Width;
	params.Height = Height;
	params.LinearColorArray = LinearColorArray;
	params.bCanReplaceExisting = bCanReplaceExisting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslStatics.SafeDivide_VectorFloat
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 A                              (Parm, IsPlainOldData)
// float                          B                              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 DivideByZeroValue              (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_SafeDivide_VectorFloat(const struct FVector& A, float B, const struct FVector& DivideByZeroValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.SafeDivide_VectorFloat");

	UTslStatics_SafeDivide_VectorFloat_Params params;
	params.A = A;
	params.B = B;
	params.DivideByZeroValue = DivideByZeroValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.SafeDivide_IntInt
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            A                              (Parm, ZeroConstructor, IsPlainOldData)
// int                            B                              (Parm, ZeroConstructor, IsPlainOldData)
// int                            DivideByZeroValue              (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslStatics::STATIC_SafeDivide_IntInt(int A, int B, int DivideByZeroValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.SafeDivide_IntInt");

	UTslStatics_SafeDivide_IntInt_Params params;
	params.A = A;
	params.B = B;
	params.DivideByZeroValue = DivideByZeroValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.SafeDivide_FloatFloat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          A                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          B                              (Parm, ZeroConstructor, IsPlainOldData)
// float                          DivideByZeroValue              (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_SafeDivide_FloatFloat(float A, float B, float DivideByZeroValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.SafeDivide_FloatFloat");

	UTslStatics_SafeDivide_FloatFloat_Params params;
	params.A = A;
	params.B = B;
	params.DivideByZeroValue = DivideByZeroValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.ReleaseMouseCaptureFromPlayerController
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void UTslStatics::STATIC_ReleaseMouseCaptureFromPlayerController(class APlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.ReleaseMouseCaptureFromPlayerController");

	UTslStatics_ReleaseMouseCaptureFromPlayerController_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslStatics.PredictProjectilePathBox
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              OutHit                         (Parm, OutParm, IsPlainOldData)
// TArray<struct FVector>         OutPathPositions               (Parm, OutParm, ZeroConstructor)
// struct FVector                 OutLastTraceDestination        (Parm, OutParm, IsPlainOldData)
// struct FVector                 startPos                       (Parm, IsPlainOldData)
// struct FVector                 LaunchVelocity                 (Parm, IsPlainOldData)
// bool                           bTracePath                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ProjectileBox                  (Parm, IsPlainOldData)
// TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>          ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EDrawDebugTrace>   DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          DrawDebugTime                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          SimFrequency                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          MaxSimTime                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          OverrideGravityZ               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_PredictProjectilePathBox(class UObject* WorldContextObject, const struct FVector& startPos, const struct FVector& LaunchVelocity, bool bTracePath, const struct FVector& ProjectileBox, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, float DrawDebugTime, float SimFrequency, float MaxSimTime, float OverrideGravityZ, struct FHitResult* OutHit, TArray<struct FVector>* OutPathPositions, struct FVector* OutLastTraceDestination)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.PredictProjectilePathBox");

	UTslStatics_PredictProjectilePathBox_Params params;
	params.WorldContextObject = WorldContextObject;
	params.startPos = startPos;
	params.LaunchVelocity = LaunchVelocity;
	params.bTracePath = bTracePath;
	params.ProjectileBox = ProjectileBox;
	params.ObjectTypes = ObjectTypes;
	params.bTraceComplex = bTraceComplex;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.DrawDebugTime = DrawDebugTime;
	params.SimFrequency = SimFrequency;
	params.MaxSimTime = MaxSimTime;
	params.OverrideGravityZ = OverrideGravityZ;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHit != nullptr)
		*OutHit = params.OutHit;
	if (OutPathPositions != nullptr)
		*OutPathPositions = params.OutPathPositions;
	if (OutLastTraceDestination != nullptr)
		*OutLastTraceDestination = params.OutLastTraceDestination;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.PostAkEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ACharacter*              Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent*           AkEvent                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 EventName                      (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslStatics::STATIC_PostAkEvent(class ACharacter* Character, class UAkAudioEvent* AkEvent, const struct FString& EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.PostAkEvent");

	UTslStatics_PostAkEvent_Params params;
	params.Character = Character;
	params.AkEvent = AkEvent;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.PhysicalSurfaceToString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EPhysicalSurface>  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_PhysicalSurfaceToString(TEnumAsByte<EPhysicalSurface> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.PhysicalSurfaceToString");

	UTslStatics_PhysicalSurfaceToString_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.PhysicalSurfaceToName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EPhysicalSurface>  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UTslStatics::STATIC_PhysicalSurfaceToName(TEnumAsByte<EPhysicalSurface> Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.PhysicalSurfaceToName");

	UTslStatics_PhysicalSurfaceToName_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.LocalPositionToServer
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Local                          (Parm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_LocalPositionToServer(class UObject* WorldContextObject, const struct FVector& Local)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.LocalPositionToServer");

	UTslStatics_LocalPositionToServer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Local = Local;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.LineSphereIntersection
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 Intersection1                  (Parm, OutParm, IsPlainOldData)
// struct FVector                 Intersection2                  (Parm, OutParm, IsPlainOldData)
// struct FVector                 Center                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Origion                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 Direction                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          Radius                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_LineSphereIntersection(const struct FVector& Center, const struct FVector& Origion, const struct FVector& Direction, float Radius, struct FVector* Intersection1, struct FVector* Intersection2)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.LineSphereIntersection");

	UTslStatics_LineSphereIntersection_Params params;
	params.Center = Center;
	params.Origion = Origion;
	params.Direction = Direction;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Intersection1 != nullptr)
		*Intersection1 = params.Intersection1;
	if (Intersection2 != nullptr)
		*Intersection2 = params.Intersection2;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsXboxOnePlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsXboxOnePlatform()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsXboxOnePlatform");

	UTslStatics_IsXboxOnePlatform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsUsingGappLobby
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsUsingGappLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsUsingGappLobby");

	UTslStatics_IsUsingGappLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsShipping
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsShipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsShipping");

	UTslStatics_IsShipping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsServerActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsServerActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsServerActor");

	UTslStatics_IsServerActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsPS4Platform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsPS4Platform()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsPS4Platform");

	UTslStatics_IsPS4Platform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsPointOnTheRay
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               TargetPoint                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               LineStart                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector2D               LineEnd                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsPointOnTheRay(const struct FVector2D& TargetPoint, const struct FVector2D& LineStart, const struct FVector2D& LineEnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsPointOnTheRay");

	UTslStatics_IsPointOnTheRay_Params params;
	params.TargetPoint = TargetPoint;
	params.LineStart = LineStart;
	params.LineEnd = LineEnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsPIE
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsPIE(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsPIE");

	UTslStatics_IsPIE_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsPCPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsPCPlatform()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsPCPlatform");

	UTslStatics_IsPCPlatform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsOptionAllowedOnPlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EOptionExposeType              InType                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsOptionAllowedOnPlatform(EOptionExposeType InType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsOptionAllowedOnPlatform");

	UTslStatics_IsOptionAllowedOnPlatform_Params params;
	params.InType = InType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsNpcStopMovement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsNpcStopMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsNpcStopMovement");

	UTslStatics_IsNpcStopMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsNpcGodMode
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsNpcGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsNpcGodMode");

	UTslStatics_IsNpcGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsMapFullyLoaded
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsMapFullyLoaded(class UWorld* World)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsMapFullyLoaded");

	UTslStatics_IsMapFullyLoaded_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsGamepadConnected
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsGamepadConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsGamepadConnected");

	UTslStatics_IsGamepadConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsForKoreanRating
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsForKoreanRating()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsForKoreanRating");

	UTslStatics_IsForKoreanRating_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsForChineseLicensing
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsForChineseLicensing()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsForChineseLicensing");

	UTslStatics_IsForChineseLicensing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsEditor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsEditor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsEditor");

	UTslStatics_IsEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsConsolePlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsConsolePlatform()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsConsolePlatform");

	UTslStatics_IsConsolePlatform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.IsClientActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_IsClientActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.IsClientActor");

	UTslStatics_IsClientActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetWaterVolumeAtLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 Point                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class APhysicsVolume*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APhysicsVolume* UTslStatics::STATIC_GetWaterVolumeAtLocation(class UObject* WorldContextObject, const struct FVector& Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetWaterVolumeAtLocation");

	UTslStatics_GetWaterVolumeAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetTslPlatformName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_GetTslPlatformName()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetTslPlatformName");

	UTslStatics_GetTslPlatformName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetSimplePhysicalMaterial
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     PrimitiveComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UPhysicalMaterial*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPhysicalMaterial* UTslStatics::STATIC_GetSimplePhysicalMaterial(class UPrimitiveComponent* PrimitiveComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetSimplePhysicalMaterial");

	UTslStatics_GetSimplePhysicalMaterial_Params params;
	params.PrimitiveComponent = PrimitiveComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetServerLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 ActorOrComponent               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_GetServerLocation(class UObject* ActorOrComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetServerLocation");

	UTslStatics_GetServerLocation_Params params;
	params.ActorOrComponent = ActorOrComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetScreenshotDir
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_GetScreenshotDir()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetScreenshotDir");

	UTslStatics_GetScreenshotDir_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetRecoilAnimScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetRecoilAnimScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetRecoilAnimScale");

	UTslStatics_GetRecoilAnimScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetMOAScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetMOAScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetMOAScale");

	UTslStatics_GetMOAScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetMemoryInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_GetMemoryInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetMemoryInfo");

	UTslStatics_GetMemoryInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetGappLobbyUrl
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_GetGappLobbyUrl()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetGappLobbyUrl");

	UTslStatics_GetGappLobbyUrl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetGameVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_GetGameVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetGameVersion");

	UTslStatics_GetGameVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetFullGameVersion
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UTslStatics::STATIC_GetFullGameVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetFullGameVersion");

	UTslStatics_GetFullGameVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetDummyHelmetLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslStatics::STATIC_GetDummyHelmetLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetDummyHelmetLevel");

	UTslStatics_GetDummyHelmetLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetDummyArmorLevel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UTslStatics::STATIC_GetDummyArmorLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetDummyArmorLevel");

	UTslStatics_GetDummyArmorLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetConsoleValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ConsloeName                    (Parm, ZeroConstructor)
// float                          OutValueFloat                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            OutValueInt                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FString                 OutValueString                 (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_GetConsoleValue(const struct FString& ConsloeName, float* OutValueFloat, int* OutValueInt, struct FString* OutValueString)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetConsoleValue");

	UTslStatics_GetConsoleValue_Params params;
	params.ConsloeName = ConsloeName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutValueFloat != nullptr)
		*OutValueFloat = params.OutValueFloat;
	if (OutValueInt != nullptr)
		*OutValueInt = params.OutValueInt;
	if (OutValueString != nullptr)
		*OutValueString = params.OutValueString;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetColorFromGameIni
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 InSection                      (Parm, ZeroConstructor)
// struct FString                 InKey                          (Parm, ZeroConstructor)
// struct FColor                  OutColor                       (Parm, OutParm, IsPlainOldData)

void UTslStatics::STATIC_GetColorFromGameIni(const struct FString& InSection, const struct FString& InKey, struct FColor* OutColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetColorFromGameIni");

	UTslStatics_GetColorFromGameIni_Params params;
	params.InSection = InSection;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutColor != nullptr)
		*OutColor = params.OutColor;
}


// Function ShadowTrackerExtra.TslStatics.GetColorBlindTypeCorrectedColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InColor                        (Parm, IsPlainOldData)
// EColorBlindType                ColorBlindType                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FVector UTslStatics::STATIC_GetColorBlindTypeCorrectedColor(const struct FVector& InColor, EColorBlindType ColorBlindType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetColorBlindTypeCorrectedColor");

	UTslStatics_GetColorBlindTypeCorrectedColor_Params params;
	params.InColor = InColor;
	params.ColorBlindType = ColorBlindType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetBallisticDropScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetBallisticDropScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetBallisticDropScale");

	UTslStatics_GetBallisticDropScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetBallisticDragScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetBallisticDragScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetBallisticDragScale");

	UTslStatics_GetBallisticDragScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.GetArrayFromGameIni
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 InSection                      (Parm, ZeroConstructor)
// struct FString                 InKey                          (Parm, ZeroConstructor)
// TArray<struct FString>         OutStringArray                 (Parm, OutParm, ZeroConstructor)

void UTslStatics::STATIC_GetArrayFromGameIni(const struct FString& InSection, const struct FString& InKey, TArray<struct FString>* OutStringArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetArrayFromGameIni");

	UTslStatics_GetArrayFromGameIni_Params params;
	params.InSection = InSection;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutStringArray != nullptr)
		*OutStringArray = params.OutStringArray;
}


// Function ShadowTrackerExtra.TslStatics.GetArrayFromEngineIni
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 InSection                      (Parm, ZeroConstructor)
// struct FString                 InKey                          (Parm, ZeroConstructor)
// TArray<struct FString>         OutStringArray                 (Parm, OutParm, ZeroConstructor)

void UTslStatics::STATIC_GetArrayFromEngineIni(const struct FString& InSection, const struct FString& InKey, TArray<struct FString>* OutStringArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetArrayFromEngineIni");

	UTslStatics_GetArrayFromEngineIni_Params params;
	params.InSection = InSection;
	params.InKey = InKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutStringArray != nullptr)
		*OutStringArray = params.OutStringArray;
}


// Function ShadowTrackerExtra.TslStatics.GetAngleFromX
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               TargetVector                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           bClockwise                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_GetAngleFromX(const struct FVector2D& TargetVector, bool bClockwise)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.GetAngleFromX");

	UTslStatics_GetAngleFromX_Params params;
	params.TargetVector = TargetVector;
	params.bClockwise = bClockwise;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.FInterpTo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Current                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          Target                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          InterpSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UTslStatics::STATIC_FInterpTo(float Current, float Target, float DeltaTime, float InterpSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.FInterpTo");

	UTslStatics_FInterpTo_Params params;
	params.Current = Current;
	params.Target = Target;
	params.DeltaTime = DeltaTime;
	params.InterpSpeed = InterpSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.FindActorFromTag
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Tag                            (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  FoundActor                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslStatics::STATIC_FindActorFromTag(class UObject* WorldContextObject, const struct FName& Tag, class AActor** FoundActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.FindActorFromTag");

	UTslStatics_FindActorFromTag_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Tag = Tag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (FoundActor != nullptr)
		*FoundActor = params.FoundActor;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.ConvertRawRatingRankTypeInteger
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            RankType                       (Parm, ZeroConstructor, IsPlainOldData)
// ERatingRankType                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ERatingRankType UTslStatics::STATIC_ConvertRawRatingRankTypeInteger(int RankType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.ConvertRawRatingRankTypeInteger");

	UTslStatics_ConvertRawRatingRankTypeInteger_Params params;
	params.RankType = RankType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslStatics.ApplyDamage
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// struct FAttackId               AttackId                       (Parm)

void UTslStatics::STATIC_ApplyDamage(class AActor* DamagedActor, float BaseDamage, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageTypeClass, const struct FAttackId& AttackId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslStatics.ApplyDamage");

	UTslStatics_ApplyDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.BaseDamage = BaseDamage;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageTypeClass = DamageTypeClass;
	params.AttackId = AttackId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeySettingWidget.TransferInputEvent
// (Final, Native, Public)
// Parameters:
// class UTslKeyDisplayWidget*    KeyDisplayWidget               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FTslInputKey            TslInputKey                    (Parm)

void UTslKeySettingWidget::TransferInputEvent(class UTslKeyDisplayWidget* KeyDisplayWidget, const struct FTslInputKey& TslInputKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeySettingWidget.TransferInputEvent");

	UTslKeySettingWidget_TransferInputEvent_Params params;
	params.KeyDisplayWidget = KeyDisplayWidget;
	params.TslInputKey = TslInputKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeySettingWidget.StartupKeySettingWidget
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   InCategoryName                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FText                   InDisplayText                  (ConstParm, Parm, OutParm, ReferenceParm)

void UTslKeySettingWidget::StartupKeySettingWidget(const struct FName& InCategoryName, const struct FText& InDisplayText)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeySettingWidget.StartupKeySettingWidget");

	UTslKeySettingWidget_StartupKeySettingWidget_Params params;
	params.InCategoryName = InCategoryName;
	params.InDisplayText = InDisplayText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeySettingWidget.SetToDefault
// (Final, Native, Public, BlueprintCallable)

void UTslKeySettingWidget::SetToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeySettingWidget.SetToDefault");

	UTslKeySettingWidget_SetToDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslKeySettingWidget.InitializeKeySettingWidget
// (Final, Native, Public, BlueprintCallable)

void UTslKeySettingWidget::InitializeKeySettingWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslKeySettingWidget.InitializeKeySettingWidget");

	UTslKeySettingWidget_InitializeKeySettingWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslWebPopupInterface.ShowWebPopup
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FWebPopupParam          Param                          (ConstParm, Parm, OutParm, ReferenceParm)

void UTslWebPopupInterface::ShowWebPopup(const struct FWebPopupParam& Param)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWebPopupInterface.ShowWebPopup");

	UTslWebPopupInterface_ShowWebPopup_Params params;
	params.Param = Param;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslWebPopupInterface.PreloadWebPopup
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FWebPopupParam>  WebPopupParams                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UTslWebPopupInterface::PreloadWebPopup(TArray<struct FWebPopupParam> WebPopupParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWebPopupInterface.PreloadWebPopup");

	UTslWebPopupInterface_PreloadWebPopup_Params params;
	params.WebPopupParams = WebPopupParams;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.TslWebPopupInterface.HasChildren
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UTslWebPopupInterface::HasChildren()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWebPopupInterface.HasChildren");

	UTslWebPopupInterface_HasChildren_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.TslWebPopupInterface.CloseWebPopup
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FString                 PopupId                        (Parm, ZeroConstructor)

void UTslWebPopupInterface::CloseWebPopup(const struct FString& PopupId)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.TslWebPopupInterface.CloseWebPopup");

	UTslWebPopupInterface_CloseWebPopup_Params params;
	params.PopupId = PopupId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillAction_PauseAnims.ResetAnimationFrame
// (Native, Public)

void UUAESkillAction_PauseAnims::ResetAnimationFrame()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillAction_PauseAnims.ResetAnimationFrame");

	UUAESkillAction_PauseAnims_ResetAnimationFrame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillInterface.TriggerEntryEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EUTSkillEntry                  EntryEvent                     (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillInterface::TriggerEntryEvent(EUTSkillEntry EntryEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillInterface.TriggerEntryEvent");

	UUAESkillInterface_TriggerEntryEvent_Params params;
	params.EntryEvent = EntryEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillInterface.TriggerCustomEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TEnumAsByte<EUAESkillEvent>    EventType                      (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillInterface::TriggerCustomEvent(TEnumAsByte<EUAESkillEvent> EventType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillInterface.TriggerCustomEvent");

	UUAESkillInterface_TriggerCustomEvent_Params params;
	params.EventType = EventType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillInterface.InitFromSkill
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AUAESkill*               SkillOwner                     (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillInterface::InitFromSkill(class AUAESkill* SkillOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillInterface.InitFromSkill");

	UUAESkillInterface_InitFromSkill_Params params;
	params.SkillOwner = SkillOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillManagerComponent.TriggerEvent
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            SkillID                        (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EUTSkillEventType> EventType                      (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillManagerComponent::TriggerEvent(int SkillID, TEnumAsByte<EUTSkillEventType> EventType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillManagerComponent.TriggerEvent");

	UUAESkillManagerComponent_TriggerEvent_Params params;
	params.SkillID = SkillID;
	params.EventType = EventType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillManagerComponent.TriggerCurSkillEvent
// (Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EUAESkillEvent>    UAEEvent                       (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillManagerComponent::TriggerCurSkillEvent(TEnumAsByte<EUAESkillEvent> UAEEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillManagerComponent.TriggerCurSkillEvent");

	UUAESkillManagerComponent_TriggerCurSkillEvent_Params params;
	params.UAEEvent = UAEEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillManagerComponent.TouchCancelSkillLock
// (Final, Native, Public, BlueprintCallable)

void UUAESkillManagerComponent::TouchCancelSkillLock()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillManagerComponent.TouchCancelSkillLock");

	UUAESkillManagerComponent_TouchCancelSkillLock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillManagerComponent.ShouldDropBagItem
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FItemDefineID           SkillItemID                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUAESkillManagerComponent::ShouldDropBagItem(const struct FItemDefineID& SkillItemID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillManagerComponent.ShouldDropBagItem");

	UUAESkillManagerComponent_ShouldDropBagItem_Params params;
	params.SkillItemID = SkillItemID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UAESkillManagerComponent.SetSkillOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillManagerComponent::SetSkillOwner(class APawn* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillManagerComponent.SetSkillOwner");

	UUAESkillManagerComponent_SetSkillOwner_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillManagerComponent.ServerTriggerCurSkillEvent
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TEnumAsByte<EUAESkillEvent>    UAEEvent                       (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillManagerComponent::ServerTriggerCurSkillEvent(TEnumAsByte<EUAESkillEvent> UAEEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillManagerComponent.ServerTriggerCurSkillEvent");

	UUAESkillManagerComponent_ServerTriggerCurSkillEvent_Params params;
	params.UAEEvent = UAEEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillManagerComponent.InsertGrenadeIDToName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            GrenadeID                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   Name                           (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillManagerComponent::InsertGrenadeIDToName(int GrenadeID, const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillManagerComponent.InsertGrenadeIDToName");

	UUAESkillManagerComponent_InsertGrenadeIDToName_Params params;
	params.GrenadeID = GrenadeID;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillManagerComponent.InsertGrenadeIDInOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            GrenadeID                      (Parm, ZeroConstructor, IsPlainOldData)

void UUAESkillManagerComponent::InsertGrenadeIDInOrder(int GrenadeID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillManagerComponent.InsertGrenadeIDInOrder");

	UUAESkillManagerComponent_InsertGrenadeIDInOrder_Params params;
	params.GrenadeID = GrenadeID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UAESkillManagerComponent.GetSkillByEntry
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUTSkillEntry                  Entry                          (Parm, ZeroConstructor, IsPlainOldData)
// class AUTSkill*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AUTSkill* UUAESkillManagerComponent::GetSkillByEntry(EUTSkillEntry Entry)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UAESkillManagerComponent.GetSkillByEntry");

	UUAESkillManagerComponent_GetSkillByEntry_Params params;
	params.Entry = Entry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UpdatePlayerPredictHealthUI
// (Final, Native, Public)
// Parameters:
// class ASTExtraPlayerController* PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UUIDataProcessingFunctionLibrary::UpdatePlayerPredictHealthUI(class ASTExtraPlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UpdatePlayerPredictHealthUI");

	UUIDataProcessingFunctionLibrary_UpdatePlayerPredictHealthUI_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UpdatePlayerHealthUI
// (Final, Native, Public)
// Parameters:
// class ASTExtraPlayerController* PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UUIDataProcessingFunctionLibrary::UpdatePlayerHealthUI(class ASTExtraPlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UpdatePlayerHealthUI");

	UUIDataProcessingFunctionLibrary_UpdatePlayerHealthUI_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UpdatePlayerEnergyUI
// (Final, Native, Public)
// Parameters:
// class ASTExtraPlayerController* PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UUIDataProcessingFunctionLibrary::UpdatePlayerEnergyUI(class ASTExtraPlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UpdatePlayerEnergyUI");

	UUIDataProcessingFunctionLibrary_UpdatePlayerEnergyUI_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UpdatePlayerDyingHealth
// (Final, Native, Public)
// Parameters:
// class ASTExtraPlayerController* PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UUIDataProcessingFunctionLibrary::UpdatePlayerDyingHealth(class ASTExtraPlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UpdatePlayerDyingHealth");

	UUIDataProcessingFunctionLibrary_UpdatePlayerDyingHealth_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UpdatePlayerBreathAmmount
// (Final, Native, Public)
// Parameters:
// class ASTExtraPlayerController* PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UUIDataProcessingFunctionLibrary::UpdatePlayerBreathAmmount(class ASTExtraPlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UpdatePlayerBreathAmmount");

	UUIDataProcessingFunctionLibrary_UpdatePlayerBreathAmmount_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UILibraryInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUIDataProcessingFunctionLibrary* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UUIDataProcessingFunctionLibrary* UUIDataProcessingFunctionLibrary::STATIC_UILibraryInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.UILibraryInstance");

	UUIDataProcessingFunctionLibrary_UILibraryInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.SortGrenadeItemArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FComparableGrenadeItemType> GrenadeArray                   (Parm, ZeroConstructor)
// class ASTExtraBaseCharacter*   PlayerCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EGrenadeType>      CurListFirstType               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FComparableGrenadeItemType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FComparableGrenadeItemType> UUIDataProcessingFunctionLibrary::SortGrenadeItemArray(TArray<struct FComparableGrenadeItemType> GrenadeArray, class ASTExtraBaseCharacter* PlayerCharacter, TEnumAsByte<EGrenadeType> CurListFirstType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.SortGrenadeItemArray");

	UUIDataProcessingFunctionLibrary_SortGrenadeItemArray_Params params;
	params.GrenadeArray = GrenadeArray;
	params.PlayerCharacter = PlayerCharacter;
	params.CurListFirstType = CurListFirstType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.SortConsumableItemArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FCompatableComsumableItemType> ConsumableArray                (Parm, ZeroConstructor)
// bool                           IgnoreFirst                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EConsumeItemType>  FirstItemType                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FCompatableComsumableItemType> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FCompatableComsumableItemType> UUIDataProcessingFunctionLibrary::SortConsumableItemArray(TArray<struct FCompatableComsumableItemType> ConsumableArray, bool IgnoreFirst, TEnumAsByte<EConsumeItemType> FirstItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.SortConsumableItemArray");

	UUIDataProcessingFunctionLibrary_SortConsumableItemArray_Params params;
	params.ConsumableArray = ConsumableArray;
	params.IgnoreFirst = IgnoreFirst;
	params.FirstItemType = FirstItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.SetUnitPosAndOpacityAndSize
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UPanelWidget*            GPanel                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UBorder*                 BBorder                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector2D               Scale                          (Parm, IsPlainOldData)
// float                          Opacity                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               OffsetVector                   (Parm, IsPlainOldData)

void UUIDataProcessingFunctionLibrary::STATIC_SetUnitPosAndOpacityAndSize(class UPanelWidget* GPanel, class UBorder* BBorder, const struct FVector2D& Scale, float Opacity, const struct FVector2D& OffsetVector)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.SetUnitPosAndOpacityAndSize");

	UUIDataProcessingFunctionLibrary_SetUnitPosAndOpacityAndSize_Params params;
	params.GPanel = GPanel;
	params.BBorder = BBorder;
	params.Scale = Scale;
	params.Opacity = Opacity;
	params.OffsetVector = OffsetVector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.SetInGameUIUserWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUAEUserWidget*          UserWidget                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUIDataProcessingFunctionLibrary::SetInGameUIUserWidget(class UUAEUserWidget* UserWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.SetInGameUIUserWidget");

	UUIDataProcessingFunctionLibrary_SetInGameUIUserWidget_Params params;
	params.UserWidget = UserWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.IsPlayerCanDoSprintOperation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ASTExtraPlayerCharacter* Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUIDataProcessingFunctionLibrary::STATIC_IsPlayerCanDoSprintOperation(class ASTExtraPlayerCharacter* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.IsPlayerCanDoSprintOperation");

	UUIDataProcessingFunctionLibrary_IsPlayerCanDoSprintOperation_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.IsHitPointValidInCircularHitTestPolicy
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGeometry               MyGeometry                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FPointerEvent           MouseEvent                     (ConstParm, Parm, OutParm, ReferenceParm)
// float                          HitAreaRadius                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUIDataProcessingFunctionLibrary::IsHitPointValidInCircularHitTestPolicy(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent, float HitAreaRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.IsHitPointValidInCircularHitTestPolicy");

	UUIDataProcessingFunctionLibrary_IsHitPointValidInCircularHitTestPolicy_Params params;
	params.MyGeometry = MyGeometry;
	params.MouseEvent = MouseEvent;
	params.HitAreaRadius = HitAreaRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.HandleCharacterAttrChange
// (Final, Native, Public)
// Parameters:
// struct FString                 AttrName                       (Parm, ZeroConstructor)
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UUIDataProcessingFunctionLibrary::HandleCharacterAttrChange(const struct FString& AttrName, class ASTExtraBaseCharacter* Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.HandleCharacterAttrChange");

	UUIDataProcessingFunctionLibrary_HandleCharacterAttrChange_Params params;
	params.AttrName = AttrName;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.GrenadeSpecificSlotNameToENumAdapter
// (Final, Native, Private)
// Parameters:
// struct FName                   GrenadeSpecificSlotName        (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EGrenadeType>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EGrenadeType> UUIDataProcessingFunctionLibrary::GrenadeSpecificSlotNameToENumAdapter(const struct FName& GrenadeSpecificSlotName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.GrenadeSpecificSlotNameToENumAdapter");

	UUIDataProcessingFunctionLibrary_GrenadeSpecificSlotNameToENumAdapter_Params params;
	params.GrenadeSpecificSlotName = GrenadeSpecificSlotName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.GetServerWorldSecond
// (Final, Native, Static, Public)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUIDataProcessingFunctionLibrary::STATIC_GetServerWorldSecond(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.GetServerWorldSecond");

	UUIDataProcessingFunctionLibrary_GetServerWorldSecond_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.GetCurPlatformType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UUIDataProcessingFunctionLibrary::GetCurPlatformType()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.GetCurPlatformType");

	UUIDataProcessingFunctionLibrary_GetCurPlatformType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.GetCharacterEnergyValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   CharaterPawn                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UUIDataProcessingFunctionLibrary::GetCharacterEnergyValue(class APawn* CharaterPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UIDataProcessingFunctionLibrary.GetCharacterEnergyValue");

	UUIDataProcessingFunctionLibrary_GetCharacterEnergyValue_Params params;
	params.CharaterPawn = CharaterPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UiHelperFunctions.GetLobbyHUD
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class ALobbyHUD*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ALobbyHUD* UUiHelperFunctions::STATIC_GetLobbyHUD(class UUserWidget* Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UiHelperFunctions.GetLobbyHUD");

	UUiHelperFunctions_GetLobbyHUD_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UiHelperFunctions.GetChildrenOfPanel
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPanelWidget*            PanelWidget                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class UWidget*>         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UWidget*> UUiHelperFunctions::STATIC_GetChildrenOfPanel(class UPanelWidget* PanelWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UiHelperFunctions.GetChildrenOfPanel");

	UUiHelperFunctions_GetChildrenOfPanel_Params params;
	params.PanelWidget = PanelWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UNGCondition_IsInSomePoseForXSec.OnPlayerStateChange
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<ESTEPoseState>     LastPose                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESTEPoseState>     NewPose                        (Parm, ZeroConstructor, IsPlainOldData)

void UUNGCondition_IsInSomePoseForXSec::OnPlayerStateChange(TEnumAsByte<ESTEPoseState> LastPose, TEnumAsByte<ESTEPoseState> NewPose)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UNGCondition_IsInSomePoseForXSec.OnPlayerStateChange");

	UUNGCondition_IsInSomePoseForXSec_OnPlayerStateChange_Params params;
	params.LastPose = LastPose;
	params.NewPose = NewPose;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UserInputCache.ResetReportComplaintNames
// (Final, Native, Static, Public, BlueprintCallable)

void UUserInputCache::STATIC_ResetReportComplaintNames()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UserInputCache.ResetReportComplaintNames");

	UUserInputCache_ResetReportComplaintNames_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UserInputCache.CheckIsNameReport
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReportName                     (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUserInputCache::STATIC_CheckIsNameReport(const struct FString& ReportName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UserInputCache.CheckIsNameReport");

	UUserInputCache_CheckIsNameReport_Params params;
	params.ReportName = ReportName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.UserInputCache.CacheReportComplaintName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReportName                     (Parm, ZeroConstructor)
// bool                           IsReport                       (Parm, ZeroConstructor, IsPlainOldData)

void UUserInputCache::STATIC_CacheReportComplaintName(const struct FString& ReportName, bool IsReport)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UserInputCache.CacheReportComplaintName");

	UUserInputCache_CacheReportComplaintName_Params params;
	params.ReportName = ReportName;
	params.IsReport = IsReport;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UTSkillAppearance_AddParticle.UndoAction
// (Native, Public)

void UUTSkillAppearance_AddParticle::UndoAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UTSkillAppearance_AddParticle.UndoAction");

	UUTSkillAppearance_AddParticle_UndoAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UTSkillAppearance_AddParticle.Reset
// (Native, Public)

void UUTSkillAppearance_AddParticle::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UTSkillAppearance_AddParticle.Reset");

	UUTSkillAppearance_AddParticle_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UTSkillAppearance_AddParticle.OnParticleSystemFinished
// (Final, Native, Private)
// Parameters:
// class UParticleSystemComponent* PSC                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUTSkillAppearance_AddParticle::OnParticleSystemFinished(class UParticleSystemComponent* PSC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UTSkillAppearance_AddParticle.OnParticleSystemFinished");

	UUTSkillAppearance_AddParticle_OnParticleSystemFinished_Params params;
	params.PSC = PSC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UTSkillAppearance_ParticleSystem.OnHurtAppearanceParticleSystemFinished
// (Native, Public)
// Parameters:
// class UParticleSystemComponent* PSC                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUTSkillAppearance_ParticleSystem::OnHurtAppearanceParticleSystemFinished(class UParticleSystemComponent* PSC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UTSkillAppearance_ParticleSystem.OnHurtAppearanceParticleSystemFinished");

	UUTSkillAppearance_ParticleSystem_OnHurtAppearanceParticleSystemFinished_Params params;
	params.PSC = PSC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UTSkillAppearance_ParticleSystem.OnAppearanceParticleSystemFinished
// (Native, Public)
// Parameters:
// class UParticleSystemComponent* PSC                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UUTSkillAppearance_ParticleSystem::OnAppearanceParticleSystemFinished(class UParticleSystemComponent* PSC)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UTSkillAppearance_ParticleSystem.OnAppearanceParticleSystemFinished");

	UUTSkillAppearance_ParticleSystem_OnAppearanceParticleSystemFinished_Params params;
	params.PSC = PSC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UTSkillAppearance_RomoveParticle.UndoAction
// (Native, Public)

void UUTSkillAppearance_RomoveParticle::UndoAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UTSkillAppearance_RomoveParticle.UndoAction");

	UUTSkillAppearance_RomoveParticle_UndoAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UTSkillAppearance_RomoveParticle.Reset
// (Native, Public)

void UUTSkillAppearance_RomoveParticle::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UTSkillAppearance_RomoveParticle.Reset");

	UUTSkillAppearance_RomoveParticle_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.UTSkillAppearance_RomoveParticle.RealDoAction
// (Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UUTSkillAppearance_RomoveParticle::RealDoAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.UTSkillAppearance_RomoveParticle.RealDoAction");

	UUTSkillAppearance_RomoveParticle_RealDoAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.VehicleTakeDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController*             Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleCommonComponent::VehicleTakeDamage(float Damage, class AController* Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.VehicleTakeDamage");

	UVehicleCommonComponent_VehicleTakeDamage_Params params;
	params.Damage = Damage;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.TakeDamageByHitPart
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  HitPart                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IgnoreWheels                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UVehicleCommonComponent::TakeDamageByHitPart(float Damage, unsigned char HitPart, bool IgnoreWheels, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.TakeDamageByHitPart");

	UVehicleCommonComponent_TakeDamageByHitPart_Params params;
	params.Damage = Damage;
	params.HitPart = HitPart;
	params.IgnoreWheels = IgnoreWheels;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.TakeDamageByBoneName
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   BoneName                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           IgnoreWheels                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UVehicleCommonComponent::TakeDamageByBoneName(float Damage, bool IgnoreWheels, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, struct FName* BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.TakeDamageByBoneName");

	UVehicleCommonComponent_TakeDamageByBoneName_Params params;
	params.Damage = Damage;
	params.IgnoreWheels = IgnoreWheels;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (BoneName != nullptr)
		*BoneName = params.BoneName;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.OnRep_WheelsCurrentHP
// (Final, Native, Private)

void UVehicleCommonComponent::OnRep_WheelsCurrentHP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.OnRep_WheelsCurrentHP");

	UVehicleCommonComponent_OnRep_WheelsCurrentHP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.OnRep_HP
// (Final, Native, Private)

void UVehicleCommonComponent::OnRep_HP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.OnRep_HP");

	UVehicleCommonComponent_OnRep_HP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.OnRep_Fuel
// (Final, Native, Private)

void UVehicleCommonComponent::OnRep_Fuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.OnRep_Fuel");

	UVehicleCommonComponent_OnRep_Fuel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.NoFuel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleCommonComponent::NoFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.NoFuel");

	UVehicleCommonComponent_NoFuel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.IsDestroyed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleCommonComponent::IsDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.IsDestroyed");

	UVehicleCommonComponent_IsDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.GetWheelsHPNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UVehicleCommonComponent::GetWheelsHPNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.GetWheelsHPNum");

	UVehicleCommonComponent_GetWheelsHPNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.GetWheelHPMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            WheelIdx                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVehicleCommonComponent::GetWheelHPMax(int WheelIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.GetWheelHPMax");

	UVehicleCommonComponent_GetWheelHPMax_Params params;
	params.WheelIdx = WheelIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.GetWheelHP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            WheelIdx                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVehicleCommonComponent::GetWheelHP(int WheelIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.GetWheelHP");

	UVehicleCommonComponent_GetWheelHP_Params params;
	params.WheelIdx = WheelIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.GetVehicleHPMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVehicleCommonComponent::GetVehicleHPMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.GetVehicleHPMax");

	UVehicleCommonComponent_GetVehicleHPMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.GetVehicleHP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVehicleCommonComponent::GetVehicleHP()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.GetVehicleHP");

	UVehicleCommonComponent_GetVehicleHP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.GetFuelMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVehicleCommonComponent::GetFuelMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.GetFuelMax");

	UVehicleCommonComponent_GetFuelMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.GetFuelConsumeFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVehicleCommonComponent::GetFuelConsumeFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.GetFuelConsumeFactor");

	UVehicleCommonComponent_GetFuelConsumeFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleCommonComponent.GetFuel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVehicleCommonComponent::GetFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleCommonComponent.GetFuel");

	UVehicleCommonComponent_GetFuel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleDamageComponent.HandleOnVehicleHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UVehicleDamageComponent::HandleOnVehicleHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleDamageComponent.HandleOnVehicleHit");

	UVehicleDamageComponent_HandleOnVehicleHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlR
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleMotorbikeComponent::SetAirControlR(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlR");

	UVehicleMotorbikeComponent_SetAirControlR_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlQ
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleMotorbikeComponent::SetAirControlQ(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlQ");

	UVehicleMotorbikeComponent_SetAirControlQ_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlPitchInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InInput                        (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleMotorbikeComponent::SetAirControlPitchInput(float InInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlPitchInput");

	UVehicleMotorbikeComponent_SetAirControlPitchInput_Params params;
	params.InInput = InInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlL
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleMotorbikeComponent::SetAirControlL(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlL");

	UVehicleMotorbikeComponent_SetAirControlL_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlF
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleMotorbikeComponent::SetAirControlF(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlF");

	UVehicleMotorbikeComponent_SetAirControlF_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlE
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleMotorbikeComponent::SetAirControlE(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlE");

	UVehicleMotorbikeComponent_SetAirControlE_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlB
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          inFloat                        (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleMotorbikeComponent::SetAirControlB(float inFloat)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleMotorbikeComponent.SetAirControlB");

	UVehicleMotorbikeComponent_SetAirControlB_Params params;
	params.inFloat = inFloat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleMotorbikeComponent.HandleOnVehicleHit
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UVehicleMotorbikeComponent::HandleOnVehicleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleMotorbikeComponent.HandleOnVehicleHit");

	UVehicleMotorbikeComponent_HandleOnVehicleHit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleMotorbikeComponent.GetAirControlPitchInput
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UVehicleMotorbikeComponent::GetAirControlPitchInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleMotorbikeComponent.GetAirControlPitchInput");

	UVehicleMotorbikeComponent_GetAirControlPitchInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleSeatComponent.OnRep_Occupiers
// (Final, Native, Public)

void UVehicleSeatComponent::OnRep_Occupiers()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSeatComponent.OnRep_Occupiers");

	UVehicleSeatComponent_OnRep_Occupiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSeatComponent.IsSeatAvailableByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            SeatIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleSeatComponent::IsSeatAvailableByIndex(int SeatIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSeatComponent.IsSeatAvailableByIndex");

	UVehicleSeatComponent_IsSeatAvailableByIndex_Params params;
	params.SeatIndex = SeatIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleSeatComponent.IsSeatAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleSeatComponent::IsSeatAvailable(ESTExtraVehicleSeatType SeatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSeatComponent.IsSeatAvailable");

	UVehicleSeatComponent_IsSeatAvailable_Params params;
	params.SeatType = SeatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleSeatComponent.GetDriver
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerCharacter* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerCharacter* UVehicleSeatComponent::GetDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSeatComponent.GetDriver");

	UVehicleSeatComponent_GetDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleSeatComponent.ClientSetLeaveVehicleLocation
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// class ASTExtraPlayerCharacter* Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 LeaveLocation                  (Parm, IsPlainOldData)

void UVehicleSeatComponent::ClientSetLeaveVehicleLocation(class ASTExtraPlayerCharacter* Character, const struct FVector& LeaveLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSeatComponent.ClientSetLeaveVehicleLocation");

	UVehicleSeatComponent_ClientSetLeaveVehicleLocation_Params params;
	params.Character = Character;
	params.LeaveLocation = LeaveLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSpringArmComponent.DelayRotationLagEnabledEnd
// (Final, Native, Protected)

void UVehicleSpringArmComponent::DelayRotationLagEnabledEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSpringArmComponent.DelayRotationLagEnabledEnd");

	UVehicleSpringArmComponent_DelayRotationLagEnabledEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSpringArmComponent.DelayRotationLagEnabled
// (Final, Native, Public, HasDefaults)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          Time                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                _RelativeRotator               (Parm, IsPlainOldData)

void UVehicleSpringArmComponent::DelayRotationLagEnabled(bool bEnabled, float Time, const struct FRotator& _RelativeRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSpringArmComponent.DelayRotationLagEnabled");

	UVehicleSpringArmComponent_DelayRotationLagEnabled_Params params;
	params.bEnabled = bEnabled;
	params.Time = Time;
	params._RelativeRotator = _RelativeRotator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.SetHealthSafety
// (Final, Native, Public)
// Parameters:
// float                          AddVal                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTCharacterNearDeathComp::SetHealthSafety(float AddVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.SetHealthSafety");

	USTCharacterNearDeathComp_SetHealthSafety_Params params;
	params.AddVal = AddVal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.S2C_HelpOther
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ACharacter*              HelpWho                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsTurnInfo                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          RemainingRescueTime            (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterNearDeathComp::S2C_HelpOther(class ACharacter* HelpWho, bool IsTurnInfo, float RemainingRescueTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.S2C_HelpOther");

	USTCharacterNearDeathComp_S2C_HelpOther_Params params;
	params.HelpWho = HelpWho;
	params.IsTurnInfo = IsTurnInfo;
	params.RemainingRescueTime = RemainingRescueTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.S2C_BeHelpedByOther
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ACharacter*              ByWho                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsTurnInfo                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          RemainingRescueTime            (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterNearDeathComp::S2C_BeHelpedByOther(class ACharacter* ByWho, bool IsTurnInfo, float RemainingRescueTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.S2C_BeHelpedByOther");

	USTCharacterNearDeathComp_S2C_BeHelpedByOther_Params params;
	params.ByWho = ByWho;
	params.IsTurnInfo = IsTurnInfo;
	params.RemainingRescueTime = RemainingRescueTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.RescueFinishSuccessfully
// (Final, Native, Public)

void USTCharacterNearDeathComp::RescueFinishSuccessfully()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.RescueFinishSuccessfully");

	USTCharacterNearDeathComp_RescueFinishSuccessfully_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.OnRep_BreathChanged
// (Final, Native, Public)

void USTCharacterNearDeathComp::OnRep_BreathChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.OnRep_BreathChanged");

	USTCharacterNearDeathComp_OnRep_BreathChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.IsNearDeathInvincible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterNearDeathComp::IsNearDeathInvincible()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.IsNearDeathInvincible");

	USTCharacterNearDeathComp_IsNearDeathInvincible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.IsHealthAlive
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterNearDeathComp::IsHealthAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.IsHealthAlive");

	USTCharacterNearDeathComp_IsHealthAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.IsHaveLastBreathStatus
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterNearDeathComp::IsHaveLastBreathStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.IsHaveLastBreathStatus");

	USTCharacterNearDeathComp_IsHaveLastBreathStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.IsFinishedLastBreathStatus
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterNearDeathComp::IsFinishedLastBreathStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.IsFinishedLastBreathStatus");

	USTCharacterNearDeathComp_IsFinishedLastBreathStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.InitializeOwner
// (Final, Native, Public)
// Parameters:
// class APawn*                   TempPawn                       (Parm, ZeroConstructor, IsPlainOldData)

void USTCharacterNearDeathComp::InitializeOwner(class APawn* TempPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.InitializeOwner");

	USTCharacterNearDeathComp_InitializeOwner_Params params;
	params.TempPawn = TempPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.GotoLastBreathStatus
// (Final, Native, Public)
// Parameters:
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent            DamageEvent                    (Parm)
// float                          _finalDamage                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           IsDamageFromVehicleExplode     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool USTCharacterNearDeathComp::GotoLastBreathStatus(class AController* EventInstigator, class AActor* DamageCauser, const struct FDamageEvent& DamageEvent, float _finalDamage, bool IsDamageFromVehicleExplode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.GotoLastBreathStatus");

	USTCharacterNearDeathComp_GotoLastBreathStatus_Params params;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageEvent = DamageEvent;
	params._finalDamage = _finalDamage;
	params.IsDamageFromVehicleExplode = IsDamageFromVehicleExplode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.GetBreathMax
// (Final, Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTCharacterNearDeathComp::GetBreathMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.GetBreathMax");

	USTCharacterNearDeathComp_GetBreathMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.GetBreath
// (Final, Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTCharacterNearDeathComp::GetBreath()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.GetBreath");

	USTCharacterNearDeathComp_GetBreath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.EnterSwimWhileDying
// (Final, Native, Public, BlueprintCallable)

void USTCharacterNearDeathComp::EnterSwimWhileDying()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.EnterSwimWhileDying");

	USTCharacterNearDeathComp_EnterSwimWhileDying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.DoFinishLastBreath
// (Final, Native, Public)

void USTCharacterNearDeathComp::DoFinishLastBreath()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.DoFinishLastBreath");

	USTCharacterNearDeathComp_DoFinishLastBreath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.ClearNearDeathTeammate
// (Final, Native, Public)

void USTCharacterNearDeathComp::ClearNearDeathTeammate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.ClearNearDeathTeammate");

	USTCharacterNearDeathComp_ClearNearDeathTeammate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.AddHealthSafety
// (Final, Native, Public)
// Parameters:
// float                          AddVal                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ForceIgnoreInvinceTime         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USTCharacterNearDeathComp::AddHealthSafety(float AddVal, bool ForceIgnoreInvinceTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.AddHealthSafety");

	USTCharacterNearDeathComp_AddHealthSafety_Params params;
	params.AddVal = AddVal;
	params.ForceIgnoreInvinceTime = ForceIgnoreInvinceTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.STCharacterNearDeathComp.AddDeadBuff
// (Final, Native, Public)

void USTCharacterNearDeathComp::AddDeadBuff()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.STCharacterNearDeathComp.AddDeadBuff");

	USTCharacterNearDeathComp_AddDeadBuff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.UpdatePassengerViewPitchLimit
// (Final, Native, Protected)

void UVehicleUserComponent::UpdatePassengerViewPitchLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.UpdatePassengerViewPitchLimit");

	UVehicleUserComponent_UpdatePassengerViewPitchLimit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.TurnVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::TurnVehicle(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.TurnVehicle");

	UVehicleUserComponent_TurnVehicle_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.TryUseHorn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bUse                           (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::TryUseHorn(bool bUse)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.TryUseHorn");

	UVehicleUserComponent_TryUseHorn_Params params;
	params.bUse = bUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.TryLeanOutOrIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bAutoLeanOut                   (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::TryLeanOutOrIn(bool bAutoLeanOut)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.TryLeanOutOrIn");

	UVehicleUserComponent_TryLeanOutOrIn_Params params;
	params.bAutoLeanOut = bAutoLeanOut;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.TryLeanOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bLean                          (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::TryLeanOut(bool bLean)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.TryLeanOut");

	UVehicleUserComponent_TryLeanOut_Params params;
	params.bLean = bLean;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.TryExitVehicle
// (Final, Native, Public, BlueprintCallable)

void UVehicleUserComponent::TryExitVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.TryExitVehicle");

	UVehicleUserComponent_TryExitVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.TryEnterVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     InVehicle                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::TryEnterVehicle(class ASTExtraVehicleBase* InVehicle, ESTExtraVehicleSeatType SeatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.TryEnterVehicle");

	UVehicleUserComponent_TryEnterVehicle_Params params;
	params.InVehicle = InVehicle;
	params.SeatType = SeatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.TryChangeVehicleSeatForPC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            SeatIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::TryChangeVehicleSeatForPC(int SeatIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.TryChangeVehicleSeatForPC");

	UVehicleUserComponent_TryChangeVehicleSeatForPC_Params params;
	params.SeatIndex = SeatIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.TryChangeVehicleSeat
// (Final, Native, Public, BlueprintCallable)

void UVehicleUserComponent::TryChangeVehicleSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.TryChangeVehicleSeat");

	UVehicleUserComponent_TryChangeVehicleSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.SetBrake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::SetBrake(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.SetBrake");

	UVehicleUserComponent_SetBrake_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.SetBoosting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::SetBoosting(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.SetBoosting");

	UVehicleUserComponent_SetBoosting_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.SetAirControlF
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::SetAirControlF(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.SetAirControlF");

	UVehicleUserComponent_SetAirControlF_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.SetAirControlB
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::SetAirControlB(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.SetAirControlB");

	UVehicleUserComponent_SetAirControlB_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.RspLeanOut
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                           bOut                           (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::RspLeanOut(bool bOut)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.RspLeanOut");

	UVehicleUserComponent_RspLeanOut_Params params;
	params.bOut = bOut;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.RspExitVehicle
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::RspExitVehicle(bool bSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.RspExitVehicle");

	UVehicleUserComponent_RspExitVehicle_Params params;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.RspEnterVehicle
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class ASTExtraVehicleBase*     InVehicle                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::RspEnterVehicle(class ASTExtraVehicleBase* InVehicle, bool bSuccess, ESTExtraVehicleSeatType SeatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.RspEnterVehicle");

	UVehicleUserComponent_RspEnterVehicle_Params params;
	params.InVehicle = InVehicle;
	params.bSuccess = bSuccess;
	params.SeatType = SeatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.RspChangeVehicleSeatForPC
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            SeatIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::RspChangeVehicleSeatForPC(bool bSuccess, int SeatIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.RspChangeVehicleSeatForPC");

	UVehicleUserComponent_RspChangeVehicleSeatForPC_Params params;
	params.bSuccess = bSuccess;
	params.SeatIndex = SeatIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.RspChangeVehicleSeat
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::RspChangeVehicleSeat(bool bSuccess, ESTExtraVehicleSeatType SeatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.RspChangeVehicleSeat");

	UVehicleUserComponent_RspChangeVehicleSeat_Params params;
	params.bSuccess = bSuccess;
	params.SeatType = SeatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.ReqSyncViewTargetLastDriveInfo
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraPlayerController* ObserverController             (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraBaseCharacter*   ViewTargetCharacter            (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::ReqSyncViewTargetLastDriveInfo(class ASTExtraPlayerController* ObserverController, class ASTExtraBaseCharacter* ViewTargetCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.ReqSyncViewTargetLastDriveInfo");

	UVehicleUserComponent_ReqSyncViewTargetLastDriveInfo_Params params;
	params.ObserverController = ObserverController;
	params.ViewTargetCharacter = ViewTargetCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.ReqMarkLastestVehicle
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASTExtraPlayerController* STEPC                          (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraVehicleBase*     InVehicle                      (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::ReqMarkLastestVehicle(class ASTExtraPlayerController* STEPC, class ASTExtraVehicleBase* InVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.ReqMarkLastestVehicle");

	UVehicleUserComponent_ReqMarkLastestVehicle_Params params;
	params.STEPC = STEPC;
	params.InVehicle = InVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.ReqLeanOut
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           IsLeanOut                      (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::ReqLeanOut(bool IsLeanOut)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.ReqLeanOut");

	UVehicleUserComponent_ReqLeanOut_Params params;
	params.IsLeanOut = IsLeanOut;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.ReqExitVehicle
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 ClientVehicleVelocity          (Parm, IsPlainOldData)

void UVehicleUserComponent::ReqExitVehicle(const struct FVector& ClientVehicleVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.ReqExitVehicle");

	UVehicleUserComponent_ReqExitVehicle_Params params;
	params.ClientVehicleVelocity = ClientVehicleVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.ReqEraseLastDriveVehicle
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UVehicleUserComponent::ReqEraseLastDriveVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.ReqEraseLastDriveVehicle");

	UVehicleUserComponent_ReqEraseLastDriveVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.ReqEnterVehicle
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class ASTExtraVehicleBase*     InVehicle                      (Parm, ZeroConstructor, IsPlainOldData)
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::ReqEnterVehicle(class ASTExtraVehicleBase* InVehicle, ESTExtraVehicleSeatType SeatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.ReqEnterVehicle");

	UVehicleUserComponent_ReqEnterVehicle_Params params;
	params.InVehicle = InVehicle;
	params.SeatType = SeatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.ReqChangeVehicleSeatForPC
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int                            SeatIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::ReqChangeVehicleSeatForPC(int SeatIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.ReqChangeVehicleSeatForPC");

	UVehicleUserComponent_ReqChangeVehicleSeatForPC_Params params;
	params.SeatIndex = SeatIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.ReqChangeVehicleSeat
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UVehicleUserComponent::ReqChangeVehicleSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.ReqChangeVehicleSeat");

	UVehicleUserComponent_ReqChangeVehicleSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.ProcessReconnectionData
// (Final, Native, Protected)

void UVehicleUserComponent::ProcessReconnectionData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.ProcessReconnectionData");

	UVehicleUserComponent_ProcessReconnectionData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.OnUpdateVehicleSpeedGUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                          RawSpeed                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::OnUpdateVehicleSpeedGUI(float RawSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.OnUpdateVehicleSpeedGUI");

	UVehicleUserComponent_OnUpdateVehicleSpeedGUI_Params params;
	params.RawSpeed = RawSpeed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.OnServerAboutToReconnect
// (Final, Native, Protected)

void UVehicleUserComponent::OnServerAboutToReconnect()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.OnServerAboutToReconnect");

	UVehicleUserComponent_OnServerAboutToReconnect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.OnRep_VehicleUserReconnRepData
// (Final, Native, Protected)

void UVehicleUserComponent::OnRep_VehicleUserReconnRepData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.OnRep_VehicleUserReconnRepData");

	UVehicleUserComponent_OnRep_VehicleUserReconnRepData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.OnExitVehicleCompleted
// (Event, Protected, BlueprintEvent)

void UVehicleUserComponent::OnExitVehicleCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.OnExitVehicleCompleted");

	UVehicleUserComponent_OnExitVehicleCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.OnEnterVehicleCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::OnEnterVehicleCompleted(ESTExtraVehicleSeatType SeatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.OnEnterVehicleCompleted");

	UVehicleUserComponent_OnEnterVehicleCompleted_Params params;
	params.SeatType = SeatType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.OnCurrrentClosestVehicleChanged
// (Event, Protected, BlueprintEvent)

void UVehicleUserComponent::OnCurrrentClosestVehicleChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.OnCurrrentClosestVehicleChanged");

	UVehicleUserComponent_OnCurrrentClosestVehicleChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.OnChangeVehicleSeatCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::OnChangeVehicleSeatCompleted(ESTExtraVehicleSeatType SeatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.OnChangeVehicleSeatCompleted");

	UVehicleUserComponent_OnChangeVehicleSeatCompleted_Params params;
	params.SeatType = SeatType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.NotifyLeaveVehicleFailed
// (Net, NetReliable, Native, Event, Public, NetClient)

void UVehicleUserComponent::NotifyLeaveVehicleFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.NotifyLeaveVehicleFailed");

	UVehicleUserComponent_NotifyLeaveVehicleFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.MoveVehicleRight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::MoveVehicleRight(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.MoveVehicleRight");

	UVehicleUserComponent_MoveVehicleRight_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.MoveVehicleForward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::MoveVehicleForward(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.MoveVehicleForward");

	UVehicleUserComponent_MoveVehicleForward_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleUserComponent.IsClosestVehicleSeatAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESTExtraVehicleSeatType        SeatType                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleUserComponent::IsClosestVehicleSeatAvailable(ESTExtraVehicleSeatType SeatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.IsClosestVehicleSeatAvailable");

	UVehicleUserComponent_IsClosestVehicleSeatAvailable_Params params;
	params.SeatType = SeatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleUserComponent.GetVehicleUserState
// (Final, Native, Public, Const)
// Parameters:
// ESTExtraVehicleUserState       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESTExtraVehicleUserState UVehicleUserComponent::GetVehicleUserState()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.GetVehicleUserState");

	UVehicleUserComponent_GetVehicleUserState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleUserComponent.CanVehicleShoot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASTExtraPlayerCharacter* PlayerCharacter                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleUserComponent::CanVehicleShoot(class ASTExtraPlayerCharacter* PlayerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.CanVehicleShoot");

	UVehicleUserComponent_CanVehicleShoot_Params params;
	params.PlayerCharacter = PlayerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleUserComponent.CanUseVehicleHorn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UVehicleUserComponent::CanUseVehicleHorn()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.CanUseVehicleHorn");

	UVehicleUserComponent_CanUseVehicleHorn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleUserComponent.AddVehicleFuel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleUserComponent::AddVehicleFuel(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleUserComponent.AddVehicleFuel");

	UVehicleUserComponent_AddVehicleFuel_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VoiceCheckObject.VoiceTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UVoiceCheckObject::VoiceTick(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VoiceCheckObject.VoiceTick");

	UVoiceCheckObject_VoiceTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VoiceCheckObject.AddWeaponShotVoice
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ASTExtraShootWeapon*     Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 posVector                      (Parm, IsPlainOldData)
// float                          showTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isslience                      (Parm, ZeroConstructor, IsPlainOldData)

void UVoiceCheckObject::AddWeaponShotVoice(class ASTExtraShootWeapon* Weapon, const struct FVector& posVector, float showTime, bool isslience)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VoiceCheckObject.AddWeaponShotVoice");

	UVoiceCheckObject_AddWeaponShotVoice_Params params;
	params.Weapon = Weapon;
	params.posVector = posVector;
	params.showTime = showTime;
	params.isslience = isslience;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VoiceCheckObject.AddVehicleVoice
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ASTExtraVehicleBase*     Vehicle                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 posVector                      (Parm, IsPlainOldData)
// float                          showTime                       (Parm, ZeroConstructor, IsPlainOldData)

void UVoiceCheckObject::AddVehicleVoice(class ASTExtraVehicleBase* Vehicle, const struct FVector& posVector, float showTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VoiceCheckObject.AddVehicleVoice");

	UVoiceCheckObject_AddVehicleVoice_Params params;
	params.Vehicle = Vehicle;
	params.posVector = posVector;
	params.showTime = showTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VoiceCheckObject.AddGlassVoice
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 posVector                      (Parm, IsPlainOldData)
// float                          showTime                       (Parm, ZeroConstructor, IsPlainOldData)

void UVoiceCheckObject::AddGlassVoice(const struct FVector& posVector, float showTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VoiceCheckObject.AddGlassVoice");

	UVoiceCheckObject_AddGlassVoice_Params params;
	params.posVector = posVector;
	params.showTime = showTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VoiceCheckObject.AddCharacterMoveVoice
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ASTExtraBaseCharacter*   Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 posVector                      (Parm, IsPlainOldData)
// float                          showTime                       (Parm, ZeroConstructor, IsPlainOldData)

void UVoiceCheckObject::AddCharacterMoveVoice(class ASTExtraBaseCharacter* Character, const struct FVector& posVector, float showTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VoiceCheckObject.AddCharacterMoveVoice");

	UVoiceCheckObject_AddCharacterMoveVoice_Params params;
	params.Character = Character;
	params.posVector = posVector;
	params.showTime = showTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WarGameState.UpdateRespawnCountDownUI
// (Final, Native, Protected)

void AWarGameState::UpdateRespawnCountDownUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.UpdateRespawnCountDownUI");

	AWarGameState_UpdateRespawnCountDownUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WarGameState.SetLastRespawnTimeUpdateTimeSecond
// (Final, Native, Public)

void AWarGameState::SetLastRespawnTimeUpdateTimeSecond()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.SetLastRespawnTimeUpdateTimeSecond");

	AWarGameState_SetLastRespawnTimeUpdateTimeSecond_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WarGameState.OnRep_WinScore
// (Final, Native, Protected)

void AWarGameState::OnRep_WinScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.OnRep_WinScore");

	AWarGameState_OnRep_WinScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WarGameState.OnRep_TeamCount
// (Final, Native, Protected)

void AWarGameState::OnRep_TeamCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.OnRep_TeamCount");

	AWarGameState_OnRep_TeamCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WarGameState.OnRep_RespawnLeftTime
// (Final, Native, Protected)

void AWarGameState::OnRep_RespawnLeftTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.OnRep_RespawnLeftTime");

	AWarGameState_OnRep_RespawnLeftTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WarGameState.OnRep_MatchLeftTime
// (Final, Native, Protected)

void AWarGameState::OnRep_MatchLeftTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.OnRep_MatchLeftTime");

	AWarGameState_OnRep_MatchLeftTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WarGameState.OnRep_LastRespawnTimeUpdateTimeSecond
// (Final, Native, Protected)

void AWarGameState::OnRep_LastRespawnTimeUpdateTimeSecond()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.OnRep_LastRespawnTimeUpdateTimeSecond");

	AWarGameState_OnRep_LastRespawnTimeUpdateTimeSecond_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WarGameState.GetWinScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AWarGameState::GetWinScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.GetWinScore");

	AWarGameState_GetWinScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WarGameState.GetTeamCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AWarGameState::GetTeamCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.GetTeamCount");

	AWarGameState_GetTeamCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WarGameState.GetRespawnLeftTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AWarGameState::GetRespawnLeftTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.GetRespawnLeftTime");

	AWarGameState_GetRespawnLeftTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WarGameState.GetMatchLeftTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AWarGameState::GetMatchLeftTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarGameState.GetMatchLeftTime");

	AWarGameState_GetMatchLeftTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.SendServerOthervehicleMoveToClientUnreliably
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class UVehicleSyncComponent*   TargetSyncComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector_NetQuantize100  ServerLocation                 (Parm)
// struct FVector_NetQuantize100  ServerLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ServerRotator                  (Parm)
// struct FVector_NetQuantize100  ServerAngularVelocity          (Parm)

void UVehicleSyncComponent::SendServerOthervehicleMoveToClientUnreliably(class UVehicleSyncComponent* TargetSyncComponent, const struct FVector_NetQuantize100& ServerLocation, const struct FVector_NetQuantize100& ServerLinearVelocity, const struct FVector_NetQuantizeNormal& ServerRotator, const struct FVector_NetQuantize100& ServerAngularVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.SendServerOthervehicleMoveToClientUnreliably");

	UVehicleSyncComponent_SendServerOthervehicleMoveToClientUnreliably_Params params;
	params.TargetSyncComponent = TargetSyncComponent;
	params.ServerLocation = ServerLocation;
	params.ServerLinearVelocity = ServerLinearVelocity;
	params.ServerRotator = ServerRotator;
	params.ServerAngularVelocity = ServerAngularVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.SendServerOthervehicleMoveToClientReliably
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UVehicleSyncComponent*   TargetSyncComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector_NetQuantize100  ServerLocation                 (Parm)
// struct FVector_NetQuantize100  ServerLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ServerRotator                  (Parm)
// struct FVector_NetQuantize100  ServerAngularVelocity          (Parm)

void UVehicleSyncComponent::SendServerOthervehicleMoveToClientReliably(class UVehicleSyncComponent* TargetSyncComponent, const struct FVector_NetQuantize100& ServerLocation, const struct FVector_NetQuantize100& ServerLinearVelocity, const struct FVector_NetQuantizeNormal& ServerRotator, const struct FVector_NetQuantize100& ServerAngularVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.SendServerOthervehicleMoveToClientReliably");

	UVehicleSyncComponent_SendServerOthervehicleMoveToClientReliably_Params params;
	params.TargetSyncComponent = TargetSyncComponent;
	params.ServerLocation = ServerLocation;
	params.ServerLinearVelocity = ServerLinearVelocity;
	params.ServerRotator = ServerRotator;
	params.ServerAngularVelocity = ServerAngularVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.SendServerMoveToClientUnreliably
// (Net, Native, Event, Public, NetClient)
// Parameters:
// struct FVector_NetQuantize100  ServerLocation                 (Parm)
// struct FVector_NetQuantize100  ServerLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ServerRotator                  (Parm)
// struct FVector_NetQuantize100  ServerAngularVelocity          (Parm)

void UVehicleSyncComponent::SendServerMoveToClientUnreliably(const struct FVector_NetQuantize100& ServerLocation, const struct FVector_NetQuantize100& ServerLinearVelocity, const struct FVector_NetQuantizeNormal& ServerRotator, const struct FVector_NetQuantize100& ServerAngularVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.SendServerMoveToClientUnreliably");

	UVehicleSyncComponent_SendServerMoveToClientUnreliably_Params params;
	params.ServerLocation = ServerLocation;
	params.ServerLinearVelocity = ServerLinearVelocity;
	params.ServerRotator = ServerRotator;
	params.ServerAngularVelocity = ServerAngularVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.SendServerMoveToClientReliably
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            InCorrectionId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ServerLocation                 (Parm)
// struct FVector_NetQuantize100  ServerLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ServerRotator                  (Parm)
// struct FVector_NetQuantize100  ServerAngularVelocity          (Parm)

void UVehicleSyncComponent::SendServerMoveToClientReliably(int InCorrectionId, const struct FVector_NetQuantize100& ServerLocation, const struct FVector_NetQuantize100& ServerLinearVelocity, const struct FVector_NetQuantizeNormal& ServerRotator, const struct FVector_NetQuantize100& ServerAngularVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.SendServerMoveToClientReliably");

	UVehicleSyncComponent_SendServerMoveToClientReliably_Params params;
	params.InCorrectionId = InCorrectionId;
	params.ServerLocation = ServerLocation;
	params.ServerLinearVelocity = ServerLinearVelocity;
	params.ServerRotator = ServerRotator;
	params.ServerAngularVelocity = ServerAngularVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.SendClientMoveToServerUnreliably
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            InCorrectionId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ClientLocation                 (Parm)
// struct FVector_NetQuantize100  ClientLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ClientRotator                  (Parm)
// struct FVector_NetQuantize100  ClientAngularVelocity          (Parm)
// uint32_t                       Checksum                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleSyncComponent::SendClientMoveToServerUnreliably(int InCorrectionId, const struct FVector_NetQuantize100& ClientLocation, const struct FVector_NetQuantize100& ClientLinearVelocity, const struct FVector_NetQuantizeNormal& ClientRotator, const struct FVector_NetQuantize100& ClientAngularVelocity, uint32_t Checksum)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.SendClientMoveToServerUnreliably");

	UVehicleSyncComponent_SendClientMoveToServerUnreliably_Params params;
	params.InCorrectionId = InCorrectionId;
	params.ClientLocation = ClientLocation;
	params.ClientLinearVelocity = ClientLinearVelocity;
	params.ClientRotator = ClientRotator;
	params.ClientAngularVelocity = ClientAngularVelocity;
	params.Checksum = Checksum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.SendClientMoveToServerReliably
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            InCorrectionId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ClientLocation                 (Parm)
// struct FVector_NetQuantize100  ClientLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ClientRotator                  (Parm)
// struct FVector_NetQuantize100  ClientAngularVelocity          (Parm)
// uint32_t                       Checksum                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleSyncComponent::SendClientMoveToServerReliably(int InCorrectionId, const struct FVector_NetQuantize100& ClientLocation, const struct FVector_NetQuantize100& ClientLinearVelocity, const struct FVector_NetQuantizeNormal& ClientRotator, const struct FVector_NetQuantize100& ClientAngularVelocity, uint32_t Checksum)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.SendClientMoveToServerReliably");

	UVehicleSyncComponent_SendClientMoveToServerReliably_Params params;
	params.InCorrectionId = InCorrectionId;
	params.ClientLocation = ClientLocation;
	params.ClientLinearVelocity = ClientLinearVelocity;
	params.ClientRotator = ClientRotator;
	params.ClientAngularVelocity = ClientAngularVelocity;
	params.Checksum = Checksum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.SendClientHitToServerUnreliably
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            InCorrectionId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ClientLocation                 (Parm)
// struct FVector_NetQuantize100  ClientLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ClientRotator                  (Parm)
// struct FVector_NetQuantize100  ClientAngularVelocity          (Parm)
// struct FVector_NetQuantize100  NormalImpulse                  (Parm)
// struct FHitResult              Hit                            (Parm, IsPlainOldData)
// uint32_t                       Checksum                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleSyncComponent::SendClientHitToServerUnreliably(int InCorrectionId, const struct FVector_NetQuantize100& ClientLocation, const struct FVector_NetQuantize100& ClientLinearVelocity, const struct FVector_NetQuantizeNormal& ClientRotator, const struct FVector_NetQuantize100& ClientAngularVelocity, const struct FVector_NetQuantize100& NormalImpulse, const struct FHitResult& Hit, uint32_t Checksum)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.SendClientHitToServerUnreliably");

	UVehicleSyncComponent_SendClientHitToServerUnreliably_Params params;
	params.InCorrectionId = InCorrectionId;
	params.ClientLocation = ClientLocation;
	params.ClientLinearVelocity = ClientLinearVelocity;
	params.ClientRotator = ClientRotator;
	params.ClientAngularVelocity = ClientAngularVelocity;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;
	params.Checksum = Checksum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.SendClientHitToServerReliably
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            InCorrectionId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector_NetQuantize100  ClientLocation                 (Parm)
// struct FVector_NetQuantize100  ClientLinearVelocity           (Parm)
// struct FVector_NetQuantizeNormal ClientRotator                  (Parm)
// struct FVector_NetQuantize100  ClientAngularVelocity          (Parm)
// struct FVector_NetQuantize100  NormalImpulse                  (Parm)
// struct FHitResult              Hit                            (Parm, IsPlainOldData)
// uint32_t                       Checksum                       (Parm, ZeroConstructor, IsPlainOldData)

void UVehicleSyncComponent::SendClientHitToServerReliably(int InCorrectionId, const struct FVector_NetQuantize100& ClientLocation, const struct FVector_NetQuantize100& ClientLinearVelocity, const struct FVector_NetQuantizeNormal& ClientRotator, const struct FVector_NetQuantize100& ClientAngularVelocity, const struct FVector_NetQuantize100& NormalImpulse, const struct FHitResult& Hit, uint32_t Checksum)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.SendClientHitToServerReliably");

	UVehicleSyncComponent_SendClientHitToServerReliably_Params params;
	params.InCorrectionId = InCorrectionId;
	params.ClientLocation = ClientLocation;
	params.ClientLinearVelocity = ClientLinearVelocity;
	params.ClientRotator = ClientRotator;
	params.ClientAngularVelocity = ClientAngularVelocity;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;
	params.Checksum = Checksum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.OnHitAtServer
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UVehicleSyncComponent::OnHitAtServer(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.OnHitAtServer");

	UVehicleSyncComponent_OnHitAtServer_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.OnHitAtClient
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 NormalImpulse                  (Parm, IsPlainOldData)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UVehicleSyncComponent::OnHitAtClient(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.OnHitAtClient");

	UVehicleSyncComponent_OnHitAtClient_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.OnDriverRide
// (Final, Native, Public)

void UVehicleSyncComponent::OnDriverRide()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.OnDriverRide");

	UVehicleSyncComponent_OnDriverRide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.GetRiders
// (Final, Native, Public, Const)
// Parameters:
// TArray<class ASTExtraBaseCharacter*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class ASTExtraBaseCharacter*> UVehicleSyncComponent::GetRiders()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.GetRiders");

	UVehicleSyncComponent_GetRiders_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.Correct
// (Final, Native, Public)
// Parameters:
// class UVehicleSyncComponent*   OtherVehicle                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UVehicleSyncComponent::Correct(class UVehicleSyncComponent* OtherVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.Correct");

	UVehicleSyncComponent_Correct_Params params;
	params.OtherVehicle = OtherVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.VehicleSyncComponent.ApplyRigidBodyState
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FRigidBodyState         NewState                       (Parm, OutParm)

void UVehicleSyncComponent::ApplyRigidBodyState(struct FRigidBodyState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.VehicleSyncComponent.ApplyRigidBodyState");

	UVehicleSyncComponent_ApplyRigidBodyState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (NewState != nullptr)
		*NewState = params.NewState;
}


// Function ShadowTrackerExtra.WarPlayerState.OnRep_PlayerStateScore
// (Final, Native, Protected)

void AWarPlayerState::OnRep_PlayerStateScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WarPlayerState.OnRep_PlayerStateScore");

	AWarPlayerState_OnRep_PlayerStateScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAntiCheatComp.OnWeaponStopFire
// (Final, Native, Protected)

void UWeaponAntiCheatComp::OnWeaponStopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAntiCheatComp.OnWeaponStopFire");

	UWeaponAntiCheatComp_OnWeaponStopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAntiCheatComp.OnWeaponStartFire
// (Final, Native, Protected)

void UWeaponAntiCheatComp::OnWeaponStartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAntiCheatComp.OnWeaponStartFire");

	UWeaponAntiCheatComp_OnWeaponStartFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAntiCheatComp.OnWeaponShootHit
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FShootWeaponDamageEvent DamageDetail                   (ConstParm, Parm, OutParm, ReferenceParm)
// struct FBulletHitInfoUploadData HitData                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FLocalShootHitData      LocalHitData                   (ConstParm, Parm, OutParm, ReferenceParm)

void UWeaponAntiCheatComp::OnWeaponShootHit(const struct FShootWeaponDamageEvent& DamageDetail, const struct FBulletHitInfoUploadData& HitData, const struct FLocalShootHitData& LocalHitData)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAntiCheatComp.OnWeaponShootHit");

	UWeaponAntiCheatComp_OnWeaponShootHit_Params params;
	params.DamageDetail = DamageDetail;
	params.HitData = HitData;
	params.LocalHitData = LocalHitData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAntiCheatComp.OnWeaponReloaded
// (Final, Native, Protected)

void UWeaponAntiCheatComp::OnWeaponReloaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAntiCheatComp.OnWeaponReloaded");

	UWeaponAntiCheatComp_OnWeaponReloaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAutoAimingComponent.TryDoAiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAutoAimingComponent::TryDoAiming(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAutoAimingComponent.TryDoAiming");

	UWeaponAutoAimingComponent_TryDoAiming_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAutoAimingComponent.SetCD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          CDTime                         (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAutoAimingComponent::SetCD(float CDTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAutoAimingComponent.SetCD");

	UWeaponAutoAimingComponent_SetCD_Params params;
	params.CDTime = CDTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAutoAimingComponent.SelectAimTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// class ASTExtraPlayerCharacter* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerCharacter* UWeaponAutoAimingComponent::SelectAimTarget(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAutoAimingComponent.SelectAimTarget");

	UWeaponAutoAimingComponent_SelectAimTarget_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAutoAimingComponent.OnUnEquipWeapon
// (Final, Native, Public, BlueprintCallable)

void UWeaponAutoAimingComponent::OnUnEquipWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAutoAimingComponent.OnUnEquipWeapon");

	UWeaponAutoAimingComponent_OnUnEquipWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAutoAimingComponent.OnEquipWeapon
// (Final, Native, Public, BlueprintCallable)

void UWeaponAutoAimingComponent::OnEquipWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAutoAimingComponent.OnEquipWeapon");

	UWeaponAutoAimingComponent_OnEquipWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAutoAimingComponent.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAutoAimingComponent::Init(class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAutoAimingComponent.Init");

	UWeaponAutoAimingComponent_Init_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAutoAimingComponent.HandleShoot
// (Final, Native, Private)
// Parameters:
// class ASTExtraWeapon*          Weapon                         (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAutoAimingComponent::HandleShoot(class ASTExtraWeapon* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAutoAimingComponent.HandleShoot");

	UWeaponAutoAimingComponent_HandleShoot_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAutoAimingComponent.ClearCD
// (Final, Native, Public, BlueprintCallable)

void UWeaponAutoAimingComponent::ClearCD()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAutoAimingComponent.ClearCD");

	UWeaponAutoAimingComponent_ClearCD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAutoAimingComponent.CheckSmoke
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 startPoint                     (Parm, IsPlainOldData)
// class ASTExtraPlayerCharacter* Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponAutoAimingComponent::CheckSmoke(const struct FVector& startPoint, class ASTExtraPlayerCharacter* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAutoAimingComponent.CheckSmoke");

	UWeaponAutoAimingComponent_CheckSmoke_Params params;
	params.startPoint = startPoint;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAutoAimingComponent.CanEnemeyRaycastReach
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 startPoint                     (Parm, IsPlainOldData)
// class ASTExtraPlayerCharacter* Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponAutoAimingComponent::CanEnemeyRaycastReach(const struct FVector& startPoint, class ASTExtraPlayerCharacter* Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAutoAimingComponent.CanEnemeyRaycastReach");

	UWeaponAutoAimingComponent_CanEnemeyRaycastReach_Params params;
	params.startPoint = startPoint;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction ShadowTrackerExtra.WeaponOwnerProxy.OnWeaponStopFireDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UWeaponOwnerProxy::OnWeaponStopFireDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.WeaponOwnerProxy.OnWeaponStopFireDelegate__DelegateSignature");

	UWeaponOwnerProxy_OnWeaponStopFireDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponOwnerProxy.HandlePlayerSwitchCameraMode
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EPlayerCameraMode> Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponOwnerProxy::HandlePlayerSwitchCameraMode(TEnumAsByte<EPlayerCameraMode> Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponOwnerProxy.HandlePlayerSwitchCameraMode");

	UWeaponOwnerProxy_HandlePlayerSwitchCameraMode_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponOwnerProxy.HandlePlayerChangePose
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<ESTEPoseState>     LastPose                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESTEPoseState>     NewPose                        (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponOwnerProxy::HandlePlayerChangePose(TEnumAsByte<ESTEPoseState> LastPose, TEnumAsByte<ESTEPoseState> NewPose)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponOwnerProxy.HandlePlayerChangePose");

	UWeaponOwnerProxy_HandlePlayerChangePose_Params params;
	params.LastPose = LastPose;
	params.NewPose = NewPose;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerSTExtraPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraPlayerController* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraPlayerController* UWeaponOwnerProxy::GetOwnerSTExtraPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerSTExtraPlayerController");

	UWeaponOwnerProxy_GetOwnerSTExtraPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerSTExtraPlayerCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASTExtraBaseCharacter*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class ASTExtraBaseCharacter* UWeaponOwnerProxy::GetOwnerSTExtraPlayerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerSTExtraPlayerCharacter");

	UWeaponOwnerProxy_GetOwnerSTExtraPlayerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerController* UWeaponOwnerProxy::GetOwnerPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerPlayerController");

	UWeaponOwnerProxy_GetOwnerPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* UWeaponOwnerProxy::GetOwnerPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerPawn");

	UWeaponOwnerProxy_GetOwnerPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* UWeaponOwnerProxy::GetOwnerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerController");

	UWeaponOwnerProxy_GetOwnerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UWeaponOwnerProxy::GetOwnerActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponOwnerProxy.GetOwnerActor");

	UWeaponOwnerProxy_GetOwnerActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponOwnerProxyFactory.GetWeaponOwnerProxy
// (Native, Public)
// Parameters:
// class UWeaponOwnerProxy*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UWeaponOwnerProxy* UWeaponOwnerProxyFactory::GetWeaponOwnerProxy()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponOwnerProxyFactory.GetWeaponOwnerProxy");

	UWeaponOwnerProxyFactory_GetWeaponOwnerProxy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.SwapAttachment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWeaponAttachmentSocketType    slotID                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isExchange                     (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAvatarComponent::SwapAttachment(EWeaponAttachmentSocketType slotID, bool isExchange)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.SwapAttachment");

	UWeaponAvatarComponent_SwapAttachment_Params params;
	params.slotID = slotID;
	params.isExchange = isExchange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.PutOnEquipmentByItemHandle
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMesh*           skMesh                         (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             stMesh                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponAvatarComponent::PutOnEquipmentByItemHandle(class UBattleItemHandleBase* ItemHandle, class USkeletalMesh* skMesh, class UStaticMesh* stMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.PutOnEquipmentByItemHandle");

	UWeaponAvatarComponent_PutOnEquipmentByItemHandle_Params params;
	params.ItemHandle = ItemHandle;
	params.skMesh = skMesh;
	params.stMesh = stMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction ShadowTrackerExtra.WeaponAvatarComponent.OnScopeUnequipDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UWeaponAvatarComponent::OnScopeUnequipDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.WeaponAvatarComponent.OnScopeUnequipDelegate__DelegateSignature");

	UWeaponAvatarComponent_OnScopeUnequipDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction ShadowTrackerExtra.WeaponAvatarComponent.OnScopeEquipDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UWeaponAvatarComponent::OnScopeEquipDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction ShadowTrackerExtra.WeaponAvatarComponent.OnScopeEquipDelegate__DelegateSignature");

	UWeaponAvatarComponent_OnScopeEquipDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.OnMeshLoaded
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSoftObjectPath         AssetList                      (Parm)
// class UBattleItemHandleBase*   itemHandles                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isReplaced                     (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAvatarComponent::OnMeshLoaded(const struct FSoftObjectPath& AssetList, class UBattleItemHandleBase* itemHandles, bool isReplaced)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.OnMeshLoaded");

	UWeaponAvatarComponent_OnMeshLoaded_Params params;
	params.AssetList = AssetList;
	params.itemHandles = itemHandles;
	params.isReplaced = isReplaced;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.OnItemHandleLoaded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAvatarComponent::OnItemHandleLoaded(const struct FItemDefineID& DefineID, class UBattleItemHandleBase* ItemHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.OnItemHandleLoaded");

	UWeaponAvatarComponent_OnItemHandleLoaded_Params params;
	params.DefineID = DefineID;
	params.ItemHandle = ItemHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.OnAttachItemLoaded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemDefineID           DefineID                       (Parm)
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAvatarComponent::OnAttachItemLoaded(const struct FItemDefineID& DefineID, class UBattleItemHandleBase* ItemHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.OnAttachItemLoaded");

	UWeaponAvatarComponent_OnAttachItemLoaded_Params params;
	params.DefineID = DefineID;
	params.ItemHandle = ItemHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.NetSyncData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// ESyncOperation                 Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAvatarComponent::NetSyncData(int Slot, ESyncOperation Type, class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.NetSyncData");

	UWeaponAvatarComponent_NetSyncData_Params params;
	params.Slot = Slot;
	params.Type = Type;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.LoadMeshsAsync
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   handleList                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           needDirectLoad                 (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAvatarComponent::LoadMeshsAsync(class UBattleItemHandleBase* handleList, bool needDirectLoad)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.LoadMeshsAsync");

	UWeaponAvatarComponent_LoadMeshsAsync_Params params;
	params.handleList = handleList;
	params.needDirectLoad = needDirectLoad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.IsTeammate
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponAvatarComponent::IsTeammate()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.IsTeammate");

	UWeaponAvatarComponent_IsTeammate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.IsAutonomousAvatar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponAvatarComponent::IsAutonomousAvatar()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.IsAutonomousAvatar");

	UWeaponAvatarComponent_IsAutonomousAvatar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.InitialAvatarParam
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            AGender                        (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAvatarComponent::InitialAvatarParam(int AGender)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.InitialAvatarParam");

	UWeaponAvatarComponent_InitialAvatarParam_Params params;
	params.AGender = AGender;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.InitDefaultMesh
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAvatarComponent::InitDefaultMesh(class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.InitDefaultMesh");

	UWeaponAvatarComponent_InitDefaultMesh_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.GetStaticMesh
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FWeaponMeshCfg          meshPack                       (ConstParm, Parm, OutParm, ReferenceParm)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UWeaponAvatarComponent::GetStaticMesh(const struct FWeaponMeshCfg& meshPack)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.GetStaticMesh");

	UWeaponAvatarComponent_GetStaticMesh_Params params;
	params.meshPack = meshPack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.GetSocketName
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            slotID                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            subSlotID                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UWeaponAvatarComponent::GetSocketName(int slotID, int subSlotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.GetSocketName");

	UWeaponAvatarComponent_GetSocketName_Params params;
	params.slotID = slotID;
	params.subSlotID = subSlotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.GetSkeletalMesh
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FWeaponMeshCfg          meshPack                       (ConstParm, Parm, OutParm, ReferenceParm)
// class USkeletalMesh*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USkeletalMesh* UWeaponAvatarComponent::GetSkeletalMesh(const struct FWeaponMeshCfg& meshPack)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.GetSkeletalMesh");

	UWeaponAvatarComponent_GetSkeletalMesh_Params params;
	params.meshPack = meshPack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.GetMeshResRef
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UBackpackWeaponAttachHandle* Handle                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FSoftObjectPath         AssetRef                       (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponAvatarComponent::GetMeshResRef(class UBackpackWeaponAttachHandle* Handle, struct FSoftObjectPath* AssetRef)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.GetMeshResRef");

	UWeaponAvatarComponent_GetMeshResRef_Params params;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AssetRef != nullptr)
		*AssetRef = params.AssetRef;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.GetAttachmentSocketTransform
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            slotID                         (Parm, ZeroConstructor, IsPlainOldData)
// class UMeshComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UMeshComponent* UWeaponAvatarComponent::GetAttachmentSocketTransform(int slotID)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.GetAttachmentSocketTransform");

	UWeaponAvatarComponent_GetAttachmentSocketTransform_Params params;
	params.slotID = slotID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.GetAttachmentAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EWeaponAttachmentSocketType    slotID                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            AnimIdx                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimationAsset*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimationAsset* UWeaponAvatarComponent::GetAttachmentAnim(EWeaponAttachmentSocketType slotID, int AnimIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.GetAttachmentAnim");

	UWeaponAvatarComponent_GetAttachmentAnim_Params params;
	params.slotID = slotID;
	params.AnimIdx = AnimIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.ClearMeshBySlot
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           putDefault                     (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAvatarComponent::ClearMeshBySlot(int Slot, bool putDefault)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.ClearMeshBySlot");

	UWeaponAvatarComponent_ClearMeshBySlot_Params params;
	params.Slot = Slot;
	params.putDefault = putDefault;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.ClearMeshByItemHandle
// (Native, Public, BlueprintCallable)
// Parameters:
// class UBattleItemHandleBase*   ItemHandle                     (Parm, ZeroConstructor, IsPlainOldData)

void UWeaponAvatarComponent::ClearMeshByItemHandle(class UBattleItemHandleBase* ItemHandle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.ClearMeshByItemHandle");

	UWeaponAvatarComponent_ClearMeshByItemHandle_Params params;
	params.ItemHandle = ItemHandle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.ApplyStaticMeshByID
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             pSM                            (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       Mat                            (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponAvatarComponent::ApplyStaticMeshByID(int Slot, class UStaticMesh* pSM, class UMaterialInstance* Mat, class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.ApplyStaticMeshByID");

	UWeaponAvatarComponent_ApplyStaticMeshByID_Params params;
	params.Slot = Slot;
	params.pSM = pSM;
	params.Mat = Mat;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WeaponAvatarComponent.ApplySkeletalMeshByID
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMesh*           Mesh                           (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       Mat                            (Parm, ZeroConstructor, IsPlainOldData)
// class UBattleItemHandleBase*   Handle                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UWeaponAvatarComponent::ApplySkeletalMeshByID(int Slot, class USkeletalMesh* Mesh, class UMaterialInstance* Mat, class UBattleItemHandleBase* Handle)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponAvatarComponent.ApplySkeletalMeshByID");

	UWeaponAvatarComponent_ApplySkeletalMeshByID_Params params;
	params.Slot = Slot;
	params.Mesh = Mesh;
	params.Mat = Mat;
	params.Handle = Handle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WidgetManageable.FindWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UWidgetManageable::FindWidget(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WidgetManageable.FindWidget");

	UWidgetManageable_FindWidget_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WidgetManagementLibrary.FindWidgetFromManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AHUD*                    HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 WidgetName                     (Parm, ZeroConstructor)
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UWidgetManagementLibrary::STATIC_FindWidgetFromManager(class AHUD* HUD, const struct FString& WidgetName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WidgetManagementLibrary.FindWidgetFromManager");

	UWidgetManagementLibrary_FindWidgetFromManager_Params params;
	params.HUD = HUD;
	params.WidgetName = WidgetName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function ShadowTrackerExtra.WonderfulRecordingCut.StopRecord
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bRankFirst                     (Parm, ZeroConstructor, IsPlainOldData)

void UWonderfulRecordingCut::StopRecord(bool bRankFirst)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WonderfulRecordingCut.StopRecord");

	UWonderfulRecordingCut_StopRecord_Params params;
	params.bRankFirst = bRankFirst;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WonderfulRecordingCut.StartRecord
// (Final, Native, Public, BlueprintCallable)

void UWonderfulRecordingCut::StartRecord()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WonderfulRecordingCut.StartRecord");

	UWonderfulRecordingCut_StartRecord_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WonderfulRecordingCut.SortShootDamageData
// (Final, Native, Protected, HasOutParms)
// Parameters:
// TArray<struct FWonderfulCutShootDamageSortData> LargeCircleDataList            (Parm, OutParm, ZeroConstructor)
// TArray<struct FWonderfulCutShootDamageSortData> SmallCircleDataList            (Parm, OutParm, ZeroConstructor)

void UWonderfulRecordingCut::SortShootDamageData(TArray<struct FWonderfulCutShootDamageSortData>* LargeCircleDataList, TArray<struct FWonderfulCutShootDamageSortData>* SmallCircleDataList)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WonderfulRecordingCut.SortShootDamageData");

	UWonderfulRecordingCut_SortShootDamageData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LargeCircleDataList != nullptr)
		*LargeCircleDataList = params.LargeCircleDataList;
	if (SmallCircleDataList != nullptr)
		*SmallCircleDataList = params.SmallCircleDataList;
}


// Function ShadowTrackerExtra.WonderfulRecordingCut.CaptureRecordCut
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EWonderfulCutCaptureType> CaptureType                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            DamagePlayerID                 (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EWonderfulCutShootDamageType> ShootDamageType                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ShootDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FString                 CauserName                     (Parm, ZeroConstructor)

void UWonderfulRecordingCut::CaptureRecordCut(TEnumAsByte<EWonderfulCutCaptureType> CaptureType, int DamagePlayerID, TEnumAsByte<EWonderfulCutShootDamageType> ShootDamageType, float ShootDistance, const struct FString& CauserName)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WonderfulRecordingCut.CaptureRecordCut");

	UWonderfulRecordingCut_CaptureRecordCut_Params params;
	params.CaptureType = CaptureType;
	params.DamagePlayerID = DamagePlayerID;
	params.ShootDamageType = ShootDamageType;
	params.ShootDistance = ShootDistance;
	params.CauserName = CauserName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WonderfulRecordingCut.BuildOutputData
// (Final, Native, Protected)

void UWonderfulRecordingCut::BuildOutputData()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WonderfulRecordingCut.BuildOutputData");

	UWonderfulRecordingCut_BuildOutputData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WrapperOverlapManagerComponent.HandleOnBeginOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UWrapperOverlapManagerComponent::HandleOnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WrapperOverlapManagerComponent.HandleOnBeginOverlap");

	UWrapperOverlapManagerComponent_HandleOnBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WrapperOverlapManagerComponent.HandleEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UWrapperOverlapManagerComponent::HandleEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WrapperOverlapManagerComponent.HandleEndOverlap");

	UWrapperOverlapManagerComponent_HandleEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function ShadowTrackerExtra.WeaponSpecificHandler.GetBackpackItemHandle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UItemHandleBase*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UItemHandleBase* UWeaponSpecificHandler::GetBackpackItemHandle()
{
	static auto fn = UObject::FindObject<UFunction>("Function ShadowTrackerExtra.WeaponSpecificHandler.GetBackpackItemHandle");

	UWeaponSpecificHandler_GetBackpackItemHandle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
